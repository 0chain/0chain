version: '3'
services:

  scylla:
    image: scylladb/scylla:2.3.0
    networks:
      - default
    ports:
      - "9042:9042"
    volumes:
      - SCYLLA_DATA:/var/lib/scylla/data
    restart: on-failure:10

  cassandra:
    image: cassandra:latest
    networks:
      - default
    volumes:
      - /0chain/config/cassandra/cassandra.yaml:/etc/cassandra/cassandra.yaml
      - CONFIG_VOLUME:/0chain/cassandra
      - DATA_VOLUME:/var/lib
      - LOG_VOLUME:/var/log
      - ZCHAIN_BASEDISK/sql:/0chain/sql
    ports:
      - "9042:9042"

    restart: on-failure:10

    #Do under 0chain id.
    user: 2000:2000
    healthcheck:
      test: ["CMD-SHELL", "[ $$(nodetool statusgossip) = running ]"]
      interval: 30s
      timeout: 10s
      retries: 5

  cassandra-init:
    image: cassandra:latest
    volumes:
      - BIN_VOLUME:/0chain/bin
      - SQL_VOLUME:/0chain/sql

    command: bash /0chain/bin/syclla-init.sh
    links:
      - scylla:scylla
    restart: on-failure:10

  sharder:
    environment:
      - DOCKER=true
    depends_on:
      - cassandra-init
    links:
      - cassandra-init:cassandra-init
    build:
      context: ${ZCHAIN_CODEBASE}
      dockerfile: ./docker.aws/build.sharder/Dockerfile

    image: ${IMAGE_NAME}:${IMAGE_TAG}

    pid: "host"

    volumes:
      - CONFIG_VOLUME:/0chain/config
      - LOG_VOLUME:/0chain/log
      - DATA_VOLUME:/0chain/data

    #Hard and soft are required properties.
    ulimits:
      nofile:
        hard: 32768
        soft: 32768

    logging:
      driver: "json-file"
      options:
        max-size: "10M"
        max-file: "10"

    ports:
      - "7171:7171"

    restart: on-failure:10

    networks:
      default:

    #Start under user 0chain
    user: 2000:2000
    command: /0chain/bin/sharder --deployment_mode 0 --keys_file /0chain/config/sharder.txt --nodes_file nodes

networks:
  default:
    driver: bridge

volumes:
  ZCHAIN_BASEDISK:
    driver: local
    driver_opts:
      device: ${ZCHAIN_BASEPATH}/0chain
      o: bind

  CONFIG_VOLUME:
    driver: local
    driver_opts:
      device: ${ZCHAIN_BASEPATH}/0chain/config
      o: bind

  BIN_VOLUME:
    driver: local
    driver_opts:
      device: ${ZCHAIN_BASEPATH}/0chain/bin
      o: bind

  SQL_VOLUME:
    driver: local
    driver_opts:
      device: ${ZCHAIN_BASEPATH}/0chain/sql
      o: bind

  LOG_VOLUME:
    driver: local
    driver_opts:
      device: ${LOG_DISK}/log
      o: bind

  DATA_VOLUME:
    driver: local
    driver_opts:
      device: ${DATA_DISK}/data
      o: bind

  SCYLLA_DATA:
    driver: local
    driver_opts:
      device: ${SCYLLA_DISK}/data
      o: bind

  BLOCK_VOLUME:
    driver: local
    driver_opts:
      device: ${BLOCK_DISK}/blocks
      o: bind
