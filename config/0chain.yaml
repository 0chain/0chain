version: 1.0

logging:
  level: "info"
  console: false # printing log to console is only supported in development mode
  goroutines: false
  memlog: true

development:
  state: true
  dkg: true
  block_rewards: false
  smart_contract:
    storage: true
    faucet: true
    zrc20: true
    interest: true
    miner: true
    fee: false
    vesting: true
  txn_generation:
    wallets: 500
    transactions: 70
    pour_point: 100
    pour_amount: 10000
  faucet:
    refill_amount: 1000000000000000

zerochain:
  id: "0afc093ffb509f059c55478bc1a60351cef7b4e9c008a53a6cc8241ca8617dfe"
  decimals: 10
  genesis_block:
    id: "ed79cae70d439c11258236da1dfa6fc550f7cc569768304623e8fbd7d70efae4"

server_chain:
  id: "0afc093ffb509f059c55478bc1a60351cef7b4e9c008a53a6cc8241ca8617dfe"
  owner: "65dfe7e15ca2f689edda6eff3d5c36e8c0975792fa443c5f5413fbca27c49567"
  decimals: 10
  tokens: 200000000
  genesis_block:
    id: "ed79cae70d439c11258236da1dfa6fc550f7cc569768304623e8fbd7d70efae4"
  block:
    min_block_size: 10
    max_block_size: 100
    max_byte_size: 1638400
    consensus:
      threshold_by_count: 66 # percentage
      threshold_by_stake: 0
    generators: 10
    min_generators: 10
    generators_percent: 0.2
    replicators: 4
    proposal:
      max_wait_time: 200
      wait_mode: dynamic # static or dynamic
    generation:
      timeout: 15
      retry_wait_time: 5 #milliseconds
    sharding:
      min_active_sharders: 33 # percentage
      min_active_replicators: 33 # percentage
    reuse_txns: false
    storage:
      provider: blockstore.FSBlockStore # blockstore.FSBlockStore or blockstore.BlockDBStore
    validation:
      batch_size: 250
  round_range: 10000000
  transaction:
    payload:
      max_size: 98304 # bytes
    timeout: 30 # seconds
  client:
    signature_scheme: ed25519  # ed25519 or bls0chain
    discover: true
  messages:
    verification_tickets_to: all_miners # generator or all_miners
  state:
    prune_below_count: 100 # rounds
    sync:
      timeout: 10 # seconds
  stuck:
    check_interval: 10 # seconds
    time_threshold: 60 #seconds

  health_check:
    show_counters: true
    deep_scan:
      enabled: true
      window: 0 #Full scan till round 0
      repeat_interval_mins: 1440 #minutes
      report_status_mins: 60 #minutes
      batch_size: 500
    proximity_scan:
      enabled: true
      window: 100 #number of blocks
      repeat_interval_mins: 60 #minutes
      report_status_mins: 15 #minutes
      batch_size: 20

  smart_contract:
    timeout: 0 # milliseconds, 0 = no timeout

network:
  nodes_file: config/single_machine_3_nodes.yaml
  relay_time: 200 # milliseconds
  max_concurrent_requests: 40
  timeout:
    small_message: 1000 # milliseconds
    large_message: 3000 # milliseconds
  large_message_th_size: 10240 # anything greater than this size in bytes
  user_handlers:
    rate_limit: 1 # 1 per second
  n2n_handlers:
    rate_limit: 10 # 10 per second

# delegate wallet is wallet that used for all rewards of a node (miner/sharder);
# if delegate wallet is not set, then node id used;
delegate_wallet: ''       # delegate wallet for all rewards
# % of fees for generator
service_charge: 0.10      # [0; 1) of all fees
# max number of delegate pools allowed by a node in miner SC
number_of_delegates: 10   # max number of delegate pools
# min stake pool amount allowed by node; should not conflict with
# SC min_stake
min_stake: 10.0    # tokens
# max stake pool amount allowed by node; should not conflict with
# SC max_stake
max_stake: 1000.0  # tokens


# All tiering, strategy,etc. configs
storage:
  # Start mode will delete all the data in volumepath, will initialize meta records,
  # Repair mode will recreate meta records and restore missing blocks(should also check if block is in cold storage).
  mode: start # normal or repair or recover(metadata recovery)

  #Types:
  # - hot_only --> Only hot tier(ssd),
  # - warm_only --> Only warm tier(hdd),
  # - cache_and_warm, --> Cache and warm tier(ssd + hdd),
  # - cache_and_cold --> Cache and cold tier(ssd + cold storage),
  # - cache_hot_and_cold --> Cache(for cold blocks), hot(ssd) and cold tier,
  # - cache_warm_and_cold --> Cache(for both warm and cold blocks), warm(hdd) and cold tier

  #Note: Cannot have mix of hot and warm; hot does not require cache since ssd is used as hot tier and cache both

  #
  #Cache = 1, Warm = 2, Hot = 4, Cold = 8. And their combination is sum of these numbers
  #If storage type is Cache and Warm then 1 + 2 = 3
  
  storage_type: 3
  cache:
    storage_strategy: "random" # random, round robin, min_size_first, min_count_first etc.
    cache_strategy: ""
    write_policy: "write_through" # write_through, write_back
    poll_interval: 1 # In hour
    block_expire_in: 2 # In hour; Block that has not been accessed for 2 hours will be removed from cache
    volumes:
      - path: "/path/to/cache/blocks"
        recovery: false # Defaults to false
        size_to_maintain: 10 # In GB
        inodes_to_maintain: 10 # In percent
        allowed_block_numbers: 10^4
        allowed_block_size: 500 * 1024 * 1024
      - path: "/path/to/another/cache/blocks"
        recovery: false
        size_to_maintain: 2 # In GB
        inodes_to_maintain: 10 # In percent
        allowed_block_numbers: 10^5
        allowed_block_size: 1024^3
  hot:
    strategy: "some hot strategy"
    block_moves_in: 720 # In hour; Blocks older than 720 hours will be moved to cold storage is cold storage is enabled
    volumes:
      - path: "/path/to/hot/blocks"
        recovery: false
        size_to_maintain: 1 # In GB
        inodes_to_maintain: 5 # In percent
        allowed_block_numbers: 10^3
        allowed_block_size: 500 * 1024 * 1024 # 500GB
      - path: "/path/to/hot/blocks"
        recovery: false
        size_to_maintain: 1 # In GB
        inodes_to_maintain: 5 # In percent
        allowed_block_numbers: 10^3
        allowed_block_size: 500 * 1024 * 1024 # 500GB
  warm:
    block_moves_in: 720 # In hour
    strategy: "round_robin" # choices; round_robin, min_size_first, min_count_first and random
    volumes:
      - path: "/path/to/store/blocks"
        recovery: false
        size_to_maintain: 4 # In GB
        inodes_to_maintain: 5 # In percent
        allowed_block_numbers: 10^9 #should be <= 10^9; if greater number is provided then it will settle to 10^9
        allowed_block_size: 1024 * 1024 * 1024
      - path: "another/path/to/store/blocks"
        recovery: false
        size_to_maintain: 4 # In GB
        inodes_to_maintain: 5 # In percent
        allowed_block_numbers: 10^9
        allowed_block_size: 1024 * 1024 * 1024
  cold:
    #Can be either disk, minio or blobber but never combination of them.
    delete_local: true
    storage:
      type: "minio" # one of disk, minio and blobber
      disk: # Cold storage can also be some mounted volumes
        strategy: "some strategy"
        volumes:
          - path: "/path/to/store/blocks"
            recovery: false
            size_to_maintain: 10 # In GB
            inodes_to_maintain: 10 # In percent
            allowed_block_numbers: 10^10 # Can be any numbers
            allowed_block_size: 1000 # In GB
          - path: "/path/to/store/blocks"
            recovery: false
            size_to_maintain: 10 # In GB
            inodes_to_maintain: 10 # In percent
            allowed_block_numbers: 10^10 # Can be any numbers
            allowed_block_size: 1000 # In GB
      minio:
        strategy: "some cold strategy"
        cloud_storages:
          - storage_service_url: ""
            access_id: ""
            secret_access_key: ""
            bucket_name: ""
            allowed_bock_numbers: 10^15 # Can be any numbers
            allowed_block_size: 10^10 # In GB
          - storage_service_url: ""
            access_id: ""
            secret_access_key: ""
            bucket_name: ""
            allowed_bock_numbers: 10^15 # Can be any numbers
            allowed_block_size: 10^10 # In GB
      blobber:
        strategy: "some blobber strategy"
        blobbers:
          - wallet: ""
            allocation_id: ""
            allowed_block_numbers: 10^10
            allowed_block_size: 10^4 # In GB
          - wallet: ""
            allocation_id: ""
            allowed_block_numbers: 10^10
            allowed_block_size: 10^4 # In GB
