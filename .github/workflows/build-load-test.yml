name: LOAD_TEST

on:
  workflow_dispatch:
    inputs:
      configFile:
        description: 'load test yaml file located in config directory'
        required: true
        default: loadTest-test.yaml
      wallets:
        required: true
        default: '{"count": 100, "max_concurrency": 10, "max_qps": 50}'
      transactions:
        required: true
        default: '{"count": 100, "max_concurrency": 10, "max_qps": 50}'
      allocations:
        required: true
        default: '{"count": 100, "max_concurrency": 10, "max_qps": 50}'
      storage_wallets:
        required: true
        default: '{"count": 20, "max_concurrency": 5, "max_qps": 20}'
      storage_txns:
        required: true
        default: '{"count": 50, "max_concurrency": 5, "max_qps": 20}'
      thirdparty_txns:
        required: true
        default: '{"count": 20, "max_concurrency": 5, "max_qps": 20}'

jobs:
  loadTest:
    name: LOADTEST
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
        with:
          repository: 0chain/loadTest
          token: ${{ secrets.SVC_ACCOUNT_SECRET }}
      - name: Print config used
        run: |
          echo "Config file used: ${{ github.event.inputs.configFile }}"
      - name: Install yq
        run: |
          sudo wget -O /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/v4.6.1/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq
      - name: Setup yaml config
        run: |
          if test -z "${{ github.event.inputs.configFile }}"; then echo "please supply a config yaml file like: config=loadTest-test.yaml"; exit 1; fi
          rm $NEW_CONFIG || true
          cat ./config/${{ github.event.inputs.configFile }} | \
          yq e ".wallets.count = $(echo '${{ github.event.inputs.wallets }}' | jq '.count')" - | \
          yq e ".wallets.max_concurrency = $(echo '${{ github.event.inputs.wallets }}' | jq '.max_concurrency')" - | \
          yq e ".wallets.max_qps = $(echo '${{ github.event.inputs.wallets }}' | jq '.max_qps')" - | \
          yq e ".transactions.count = $(echo '${{ github.event.inputs.transactions }}' | jq '.count')" - | \
          yq e ".transactions.max_concurrency = $(echo '${{ github.event.inputs.transactions }}' | jq '.max_concurrency')" - | \
          yq e ".transactions.max_qps = $(echo '${{ github.event.inputs.transactions }}' | jq '.max_qps')" - | \
          yq e ".allocations.count = $(echo '${{ github.event.inputs.allocations }}' | jq '.count')" - | \
          yq e ".allocations.max_concurrency = $(echo '${{ github.event.inputs.allocations }}' | jq '.max_concurrency')" - | \
          yq e ".allocations.max_qps = $(echo '${{ github.event.inputs.allocations }}' | jq '.max_qps')" - | \
          yq e ".storage_wallets.count = $(echo '${{ github.event.inputs.storage_wallets }}' | jq '.count')" - | \
          yq e ".storage_wallets.max_concurrency = $(echo '${{ github.event.inputs.storage_wallets }}' | jq '.max_concurrency')" -  \
          yq e ".storage_wallets.max_qps = $(echo '${{ github.event.inputs.storage_wallets }}' | jq '.max_qps')" - | \
          yq e ".storage_txns.count = $(echo '${{ github.event.inputs.storage_txns }}' | jq '.count')" - | \
          yq e ".storage_txns.max_concurrency =  $(echo '${{ github.event.inputs.storage_txns }}' | jq '.max_concurrency')" - | \
          yq e ".storage_txns.max_qps =  $(echo '${{ github.event.inputs.storage_txns }}' | jq '.max_qps')" - | \
          yq e ".thirdparty_txns.count = $(echo '${{ github.event.inputs.thirdparty_txns }}' | jq '.count')" - | \
          yq e ".thirdparty_txns.max_concurrency =  $(echo '${{ github.event.inputs.thirdparty_txns }}' | jq '.max_concurrency')" - | \
          yq e ".thirdparty_txns.max_qps =  $(echo '${{ github.event.inputs.thirdparty_txns }}' | jq '.max_qps')" - | \
          tee $NEW_CONFIG
        env:
          NEW_CONFIG: ./config/loadTest.yaml
      - name: Test
        run: make run config=loadTest.yaml
