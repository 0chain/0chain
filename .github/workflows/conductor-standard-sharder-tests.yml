name: CONDUCTOR SHARDER STANDARD TESTS

on:
  schedule:
    # Runs everyday at 01:00 am
    - cron: '0 0 * * * '
  workflow_dispatch:

env:
  ZCHAIN_BUILDBASE: zchain_build_base
  ZCHAIN_BUILDRUN: zchain_run_base

jobs:
  CONDUCTOR_SHARDER_STANDARD_TESTS:
    name: CONDUCTOR-SHARDER-STANDARD-TESTS
    runs-on: [self-hosted, arc-runner]

    steps:
    - uses: actions/checkout@v1

    - name: Get Branch
      id: get_branch
      run: |
        BRANCH=$(echo ${GITHUB_REF#refs/heads/})
        echo ::set-output name=BRANCH::${BRANCH}
        echo "Branch name is ${BRANCH}"

    - name: Go 1.18 setup.
      uses: actions/setup-go@v2
      with:
        go-version: '1.18'

    - name: Docker Compose Setup.
      run: |
        sudo curl -L https://github.com/docker/compose/releases/download/1.29.2/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version
      
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    
    - name: Docker Init Setup.
      run: |
        make install-mockery
        make build-mocks
        bash ./docker.local/bin/init.setup.sh

    - name: Docker Network Setup.
      run: |
        bash ./docker.local/bin/setup.network.sh || true

    - name: Building Base Images
      run: |
        bash ./docker.local/bin/build.base.sh

    - name: Build Miner Docker Image For Integration Test.
      run: |
        bash ./docker.local/bin/build.miners-integration-tests.sh

    - name: Build Sharder Docker Image For Integration Test.
      run: |
        bash ./docker.local/bin/build.sharders-integration-tests.sh

    - name: View Change Rounds
      run: |
        awk 'NR >= 30 && NR <= 34' ./docker.local/config/sc.yaml
        awk 'NR >= 9 && NR <= 14' ./docker.local/config/0chain.yaml

    - name: Running Standard Tests for Sharders.
      run: |
        bash ./docker.local/bin/start.conductor.sh sharders

    - name: Creating Artifact con-tests-logs.tar.gz file.
      run: |
        find . -regex '.*/log/[^/]*.log' -print0 | tar -czvf con-tests-logs.tar.gz --null --files-from -

    - name: Uploading artifact con-tests-logs.tar.gz file.
      uses: actions/upload-artifact@v2
      with:
        name: Conductor-test-logs
        path: ./con-tests-logs.tar.gz

    # - name: Creating Artifact con-tests-backup-logs.tar.gz file.
    #   run: |
    #     tar -czvf con-tests-backup-logs.tar.gz ./docker.local/conductor.backup_logs

    # - name: Uploading artifact con-tests-backup-logs.tar.gz file.
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: Conductor-test-logs
    #     path: ./con-tests-backup-logs.tar.gz

  # notify_slack:
  #   runs-on: [self-hosted, arc-runner]
  #   needs: [CONDUCTOR_SHARDER_STANDARD_TESTS]
  #   if: always() && (needs.CONDUCTOR_SHARDER_STANDARD_TESTS.result == 'failure')
  #   steps:
  #     - name: "Check if should send slack notification"
  #       id: send-slack-notification
  #       uses: peter-murray/value-as-flag-action@0.0.1
  #       with:
  #         value: ${{ secrets.SEND_SLACK_NOTIFICATION }}
  #         default: false

  #     - name: "Notify Slack"
  #       if: github.event_name != 'workflow_dispatch' && steps.send-slack-notification.outputs.value == 'true'
  #       run: |
  #         curl -X POST -H "Content-type: application/json" --data "{\"text\":\"<!here> CONDUCTOR_SHARDER_STANDARD_TESTS FAILED on $(echo ${GITHUB_REF#refs/heads/})!. View the test results on Github: https://github.com/0chain/0chain/actions/runs/${{ github.run_id }}\"}" ${{ secrets.DEVOPS_CHANNEL_WEBHOOK_URL }}
