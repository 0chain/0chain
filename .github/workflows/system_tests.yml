name: "0Chain System Tests"

concurrency:
  group: "${{ github.ref }}"
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
       system_tests_branch:
        description: 'system_tests branch containing the tests you wish to run'
        default: 'master'
        required: true
       zbox_cli_branch:
        description: '0Box CLI branch which the tests will use'
        default: 'staging'
        required: true
       zwallet_cli_branch:
        description: '0Wallet CLI branch which the tests will use'
        default: 'staging'
        required: true
       blobber_branch:
        description: 'blobber branch to deploy'
        default: 'staging'
        required: true
       validator_branch:
        description: 'validator branch to deploy'
        default: 'staging'
        required: true
       zbox_branch:
        description: '0box branch to deploy'
        default: 'staging'
        required: true
       zblock_branch:
        description: '0block branch to deploy'
        default: 'staging'
        required: true
       skip_tests:
        description: '(LAST RESORT ONLY) Skip system tests. This will allow a PR to merge without requiring a green test run.  *By using you certify that the code being merged is not causing system tests to fail*'
        default: 'FALSE'
        required: true
jobs:
  system-tests:
    runs-on: [ tests-suite ]
    steps:

    - uses: actions/checkout@v2

    - name: "Setup Test Run"
      run: |
        echo "NETWORK_URL=$(echo dev-${RUNNER_NAME:(-1)}.devnet-0chain.net)" >> $GITHUB_ENV
        echo "RUNNER_NUMBER=${RUNNER_NAME:(-1)}" >> $GITHUB_ENV
        echo "BRANCH=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

        echo '#!/bin/bash
        exit_code=0
        SHORT_SHA=$(curl --silent -u ${{ secrets.SVC_ACCOUNT_SECRET }}:x-oauth-basic https://api.github.com/repos/0chain/$1/git/refs/heads/$2 | jq --raw-output .object.sha | head -c 8)
        PR_ID=$(curl --silent -u ${{ secrets.SVC_ACCOUNT_SECRET }}:x-oauth-basic https://api.github.com/search/issues?q=sha:$SHORT_SHA | jq --raw-output .items[0].number)
        TAG=$(echo $2 | sed '"'"'s/\//-/g'"'"')

        echo
        echo "================================================================="
        echo "Finding [$3] docker image for [$2]..."
        echo "================================================================="
        echo "Searching for image [${TAG}-${SHORT_SHA}]..."
        docker pull 0chaindev/$3:${TAG}-${SHORT_SHA} > /dev/null || exit_code=$?

        if [[ $exit_code == 0 ]];
          then
            echo "Image found for [${TAG}-${SHORT_SHA}]"
            echo "$(echo $3 | tr 0 Z | awk '"'"'{ print toupper($0) }'"'"')_TAG=${TAG}-${SHORT_SHA}" >> $GITHUB_ENV
          else
            if [ -z "$PR_ID" ];
              then
                echo "::error title=$3 docker image not found::$3 docker image could not be found with tag [${TAG}-${SHORT_SHA}]. Please publish image manually at https://github.com/0chain/$1/actions/workflows/build-&-publish-docker-image.yml and try again" && exit 1
            fi
            echo "Docker image NOT found for [${TAG}-${SHORT_SHA}]"
            MERGE_SHORT_SHA=$(curl --silent -u ${{ secrets.SVC_ACCOUNT_SECRET }}:x-oauth-basic https://api.github.com/repos/0chain/$1/pulls/$PR_ID | jq --raw-output .merge_commit_sha | head -c 8)
            echo "Searching for image [merge-$MERGE_SHORT_SHA]..."
            docker pull 0chaindev/$3:merge-$MERGE_SHORT_SHA > /dev/null || { echo "::error title=$3 docker image not found::$3 docker image could not be found with tag [merge-$MERGE_SHORT_SHA]. Please publish image manually at https://github.com/0chain/$1/actions/workflows/build-&-publish-docker-image.yml and try again" && exit 1; }
            echo "Docker image found for [merge-$MERGE_SHORT_SHA]"
            echo "$(echo $3 | tr 0 Z | awk '"'"'{ print toupper($0) }'"'"')_TAG=merge-$MERGE_SHORT_SHA" >> $GITHUB_ENV
        fi
        unset SHORT_SHA
        unset PR_ID
        unset TAG
        unset MERGE_SHORT_SHA

        ' > ./get_tag.sh;
        chmod 777 ./get_tag.sh;

    - name: "Check images have been published"
      if: ${{ github.event.inputs.skip_tests == 'FALSE' }}
      run: |
        ./get_tag.sh 0chain ${{ env.BRANCH }} miner
        ./get_tag.sh 0chain ${{ env.BRANCH }} sharder
        ./get_tag.sh blobber ${{ github.event.inputs.blobber_branch }} blobber
        ./get_tag.sh blobber ${{ github.event.inputs.validator_branch }} validator
        ./get_tag.sh 0box ${{ github.event.inputs.zbox_branch }} 0box
        ./get_tag.sh 0block ${{ github.event.inputs.zblock_branch }} 0block

    - name: "Set PR Status Pending"
      uses: 0chain/actions/notify-pull-request@feature/notify-PR-convenience
      continue-on-error: true
      with:
        state: "pending"
        message: "manual tests running"
        system_tests_branch: ${{ github.event.inputs.system_tests_branch }}
        zbox_cli_branch: ${{ github.event.inputs.zbox_cli_branch }}
        zwallet_cli_branch: ${{ github.event.inputs.zwallet_cli_branch }}
        zerochain_branch: ${{ env.BRANCH }}
        blobber_branch: ${{ github.event.inputs.blobber_branch }}
        github_token: ${{ secrets.SVC_ACCOUNT_SECRET }}

    - name: "Deploy 0Chain"
      if: ${{ github.event.inputs.skip_tests == 'FALSE' }}
      uses: 0chain/actions/deploy-0chain@master
      with:
        kube_config: ${{ secrets[format('DEV{0}KC', env.RUNNER_NUMBER)] }}
        teardown_condition: "TESTS_PASSED"
        miner_image:  ${{ env.IMAGE_MINER }}
        sharder_image: ${{ env.IMAGE_SHARDER }}
        blobber_image: ${{ env.IMAGE_BLOBBER }}
        validator_image: ${{ env.IMAGE_VALIDATOR }}
        zbox_image: ${{ env.IMAGE_0BOX }}
        zblock_image: ${{ env.IMAGE_0BLOCK }}
        zdns_image: staging
        explorer_image: latest
        zproxy_image: staging
        zsearch_image: staging
        blobber_stake_image: latest

    - name: "Run System tests"
      if: ${{ github.event.inputs.skip_tests == 'FALSE' }}
      uses: 0chain/actions/run-system-tests@master
      with:
        system_tests_branch: ${{ github.event.inputs.system_tests_branch }}
        network: ${{ env.NETWORK_URL }}
        zbox_cli_branch: ${{ github.event.inputs.zbox_cli_branch }}
        zwallet_cli_branch: ${{ github.event.inputs.zwallet_cli_branch }}
        smart_contract_owner_wallet_json: ${{ secrets.SMART_CONTRACT_OWNER_WALLET_JSON }}
        svc_account_secret: ${{ github.token }}
        deploy_report_page: false
        archive_results: true
        run_flaky_tests: false
        retry_failures: true

    - name: "Set PR Status Success"
      if: ${{ success() }}
      uses: 0chain/actions/notify-pull-request@feature/notify-PR-convenience
      continue-on-error: true
      with:
        state: ${{ job.status }}
        message: "manual tests success"
        system_tests_branch: ${{ github.event.inputs.system_tests_branch }}
        zbox_cli_branch: ${{ github.event.inputs.zbox_cli_branch }}
        zwallet_cli_branch: ${{ github.event.inputs.zwallet_cli_branch }}
        zerochain_branch: ${{ env.BRANCH }}
        blobber_branch: ${{ github.event.inputs.blobber_branch }}
        github_token: ${{ secrets.SVC_ACCOUNT_SECRET }}

    - name: "Set PR Status Failed"
      if: ${{ failure() }}
      uses: 0chain/actions/notify-pull-request@feature/notify-PR-convenience
      continue-on-error: true
      with:
        state: ${{ job.status }}
        message: "manual tests failed"
        system_tests_branch: ${{ github.event.inputs.system_tests_branch }}
        zbox_cli_branch: ${{ github.event.inputs.zbox_cli_branch }}
        zwallet_cli_branch: ${{ github.event.inputs.zwallet_cli_branch }}
        zerochain_branch: ${{ env.BRANCH }}
        blobber_branch: ${{ github.event.inputs.blobber_branch }}
        github_token: ${{ secrets.SVC_ACCOUNT_SECRET }}