name: CICD_Hetzner

on:
  workflow_dispatch:
    inputs:
      latest_tag:
        description: 'type yes for building latest tag'
        default: 'no'
        required: true

env:
  ZCHAIN_BUILDBASE: zchain_build_base
  ZCHAIN_BUILDRUN: zchain_run_base
  SHARDER_REGISTRY: ${{ secrets.SHARDER_REGISTRY }}
  MINER_REGISTRY: ${{ secrets.MINER_REGISTRY }}
  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  KUBE_NAMESPACE: nine

jobs:
  dockerize_miner:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2

    - name: Build base images
      run: |
        docker build -f docker.local/build.base/Dockerfile.build_base . -t $ZCHAIN_BUILDBASE
        docker build -f docker.local/build.base/Dockerfile.run_base docker.local/build.base -t $ZCHAIN_BUILDRUN

    - name: Get info
      id: get_info
      run: |
        BRANCH=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//-/g')
        SHORT_SHA=$(echo $GITHUB_SHA | head -c 8)
        echo ::set-output name=BRANCH::${BRANCH}
        echo ::set-output name=IMAGE_TAG::${BRANCH}-${SHORT_SHA}

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build & Push Miner Image
      run: |
        sed 's,%COPY%,COPY --from=miner_build $APP_DIR,g' "$DOCKERFILE_MINER.template" > "$DOCKERFILE_MINER"
        docker build --build-arg GIT_COMMIT=$GITHUB_SHA -t $MINER_REGISTRY:$TAG -f "$DOCKERFILE_MINER" .
        docker push $MINER_REGISTRY:$TAG
        docker tag $MINER_REGISTRY:$TAG $MINER_REGISTRY:latest
      env:
        TAG: ${{ steps.get_info.outputs.IMAGE_TAG }}
        DOCKERFILE_MINER: "docker.local/build.miner/Dockerfile"

    - name: Push Miner Image with Latest TAG
      run: |
        if [[ "$PUSH_LATEST" == "yes" ]]; then
          docker push $MINER_REGISTRY:latest
        fi
      env:
        PUSH_LATEST: ${{ github.event.inputs.latest_tag }}

    - name: Update Miner Image to Kubernetes Cluster
      uses: kodermax/kubectl-aws-eks@master
      with:
        args: set image deployment/miner-01 app=$MINER_REGISTRY:$TAG --record -n $KUBE_NAMESPACE
        args: set image deployment/miner-02 app=$MINER_REGISTRY:$TAG --record -n $KUBE_NAMESPACE
        args: set image deployment/miner-03 app=$MINER_REGISTRY:$TAG --record -n $KUBE_NAMESPACE
      env:
        TAG: ${{ steps.get_info.outputs.IMAGE_TAG }}
    
    - name: Verify Kubernetes Deployment
      uses: kodermax/kubectl-aws-eks@master
      with:
        args: rollout status miner-01 my-pod -n $KUBE_NAMESPACE
        args: rollout status miner-02 my-pod -n $KUBE_NAMESPACE
        args: rollout status miner-03 my-pod -n $KUBE_NAMESPACE

    # - name: Triggering LoadTest Repo build
    #   uses: convictional/trigger-workflow-and-wait@v1.3.0
    #   with:
    #     owner: 0chain
    #     repo: loadTest
    #     github_token: ${{ secrets.GOSDK }}
    #     workflow_file_name: load-test-v1.yml
    #     ref: master
    #     inputs: '{}'
    #     propagate_failure: true
    #     trigger_workflow: true
    #     wait_workflow: true 


  dockerize_sharder:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v1

    - name: Build Base Images for ZCHAIN_BUILDBASE & ZCHAIN_BUILDRUN
      run: |
        docker build -f docker.local/build.base/Dockerfile.build_base . -t $ZCHAIN_BUILDBASE
        docker build -f docker.local/build.base/Dockerfile.run_base docker.local/build.base -t $ZCHAIN_BUILDRUN

    - name: Get Info
      id: get_info
      run: |
        BRANCH=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//-/g')
        SHORT_SHA=$(echo $GITHUB_SHA | head -c 8)
        echo ::set-output name=BRANCH::${BRANCH}
        echo ::set-output name=IMAGE_TAG::${BRANCH}-${SHORT_SHA}

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build & Push Sharder Image
      run: |
        docker build --build-arg GIT_COMMIT=$GITHUB_SHA -t sharder -f docker.local/build.sharder/Dockerfile .
        docker tag sharder $SHARDER_REGISTRY:$TAG
        docker push $SHARDER_REGISTRY:$TAG
        docker tag sharder $SHARDER_REGISTRY:latest
      env:
        TAG: ${{ steps.get_info.outputs.IMAGE_TAG }}

    - name: Push Sharder Image with Latest TAG
      run: |
        if [[ "$PUSH_LATEST" == "yes" ]]; then
          docker push $SHARDER_REGISTRY:latest
        fi
      env:
        PUSH_LATEST: ${{ github.event.inputs.latest_tag }}

    - name: Update Sharder Image to Kubernetes Cluster
      uses: kodermax/kubectl-aws-eks@master
      with:
        args: set image deployment/sharder-01 app=$SHARDER_REGISTRY:$TAG --record -n $KUBE_NAMESPACE
        args: set image deployment/sharder-02 app=$SHARDER_REGISTRY:$TAG --record -n $KUBE_NAMESPACE
      env:
        TAG: ${{ steps.get_info.outputs.IMAGE_TAG }}
    
    - name: Verify Kubernetes Deployment
      uses: kodermax/kubectl-aws-eks@master
      with:
        args: rollout status sharder-01 my-pod -n $KUBE_NAMESPACE
        args: rollout status sharder-02 my-pod -n $KUBE_NAMESPACE

    # - name: Triggering LoadTest Repo build
    #   uses: convictional/trigger-workflow-and-wait@v1.3.0
    #   with:
    #     owner: 0chain
    #     repo: loadTest
    #     github_token: ${{ secrets.GOSDK }}
    #     workflow_file_name: load-test-v1.yml
    #     ref: master
    #     inputs: '{}'
    #     propagate_failure: true
    #     trigger_workflow: true
    #     wait_workflow: true 