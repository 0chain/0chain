name: CONDUCTOR VALIDATOR-01 TESTS

on:
  schedule:
    # Runs everyday at 03:00 am
    - cron: '0 7 * * * '
  workflow_dispatch:

jobs:
  CONDUCTOR_VALIDATORS_01_TESTS:
    name: CONDUCTOR-VALIDATORS-01-TESTS
    runs-on: [self-hosted, conductor-test03]

    steps:
    - name: Cleanup before restarting conductor tests.
      run: |
        rm -rf *
      
    - name: Go 1.18 setup.
      uses: actions/setup-go@v3
      with:
        go-version: '1.18'

    - name: Docker Compose Setup.
      run: |
        sudo curl -L https://github.com/docker/compose/releases/download/1.29.2/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Get Branch
      id: get_branch
      run: |
        BRANCH=$(echo ${GITHUB_REF#refs/heads/})
        echo ::set-output name=BRANCH::${BRANCH}
        echo "Branch name is ${BRANCH}"

    - name: Git clone 0chain
      run: |
        git clone https://github.com/0chain/0chain.git
        cd 0chain && git checkout ${{ steps.get_branch.outputs.BRANCH }}

    - name: Docker Init Setup.
      run: |
        sudo apt update -y
        sudo apt -y install build-essential nghttp2 libnghttp2-dev libssl-dev wget
        cd 0chain
        make install-mockery
        make build-mocks
        bash ./docker.local/bin/init.setup.sh

    - name: Docker Network Setup.
      run: |
        cd 0chain
        bash ./docker.local/bin/setup.network.sh || true

    - name: Building Base Images
      run: |
        cd 0chain
        bash ./docker.local/bin/build.base.sh

    - name: Build Miner Docker Image For Integration Test.
      run: |
        cd 0chain
        bash ./docker.local/bin/build.miners-integration-tests.sh

    - name: Build Sharder Docker Image For Integration Test.
      run: |
        cd 0chain
        bash ./docker.local/bin/build.sharders-integration-tests.sh

    - name: View Change Rounds
      run: |
        awk 'NR >= 30 && NR <= 34' ./0chain/docker.local/config/sc.yaml
        awk 'NR >= 9 && NR <= 14' ./0chain/docker.local/config/0chain.yaml

    - name: Git clone blobber
      run: |
        git clone https://github.com/0chain/blobber.git

    - name: Git clone zboxcli
      run: |
        git clone https://github.com/0chain/zboxcli.git

    - name: Git clone zwalletcli
      run: |
        git clone https://github.com/0chain/zwalletcli.git

    - name: Git clone 0dns
      run: |
        git clone https://github.com/0chain/0dns.git

    - name: list pwd
      run: |
        ls -lha
        cd 0chain && git status
        cd ../0dns && git status
        pwd

    - name: Install zboxcli
      run: |
        cd zboxcli && make install

    - name: Install zwalletcli
      run: |
        cd zwalletcli && make install

    - name: 0dns Patching
      run: |
        cd 0dns && ../0chain/docker.local/bin/conductor/patch-0dns-tests.sh

    - name: Blobbers Patching
      run: |
        cd blobber && ../0chain/docker.local/bin/conductor/patch-blobber-tests.sh

    - name: Build 0dns
      run: |
        cd 0dns
        ./docker.local/bin/init.sh
        ./docker.local/bin/build.sh

    - name: Init setup for blobbers
      run: |
        chmod +x blobber/docker.local/bin/blobber.init.setup.sh
        cd blobber && ./docker.local/bin/blobber.init.setup.sh

    - name: Build blobber base
      run: |
        cd blobber && ./docker.local/bin/build.base.sh

    - name: Build blobber
      run: |
        cd blobber && ./docker.local/bin/build.blobber-integration-tests.sh

    - name: Add ZCN config
      run: |
        rm -rf ~/.zcn || true
        mkdir ~/.zcn
        cat <<\EOF > ~/.zcn/config.yaml
        block_worker: http://127.0.0.1:9091
        signature_scheme: bls0chain
        min_submit: 50
        min_confirmation: 50
        confirmation_chain_length: 3
        max_txn_query: 5
        query_sleep_time: 5
        EOF

    - name: List pwd zcn
      run: |
        pwd
        ls -lha ./
        ls -lha ~/.zcn
        cat ~/.zcn/config.yaml

    - name: Starting validator Tests.
      run: |
        cd 0chain && ./docker.local/bin/start.conductor.sh validator-1

    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: conductor-blobber-logs
        path: |
          0chain/conductor/logs
          0chain/docker.local
          blobber/docker.local

    # - name: Creating Artifact con-tests-logs.tar.gz file.
    #   run: |
    #     find . -regex '.*/log/[^/]*.log' -print0 | tar -czvf con-tests-logs.tar.gz --null --files-from -

    # - name: Uploading artifact con-tests-logs.tar.gz file.
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: Conductor-test-logs
    #     path: ./con-tests-logs.tar.gz

    # - name: Creating Artifact con-tests-backup-logs.tar.gz file.
    #   run: |
    #     tar -czvf con-tests-backup-logs.tar.gz ./docker.local/conductor.backup_logs

    # - name: Uploading artifact con-tests-backup-logs.tar.gz file.
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: Conductor-test-logs
    #     path: ./con-tests-backup-logs.tar.gz

  notify_slack:
    runs-on: [self-hosted, arc-runner]
    needs: [CONDUCTOR_VALIDATORS_01_TESTS]
    if: always() && (needs.CONDUCTOR_VALIDATORS_01_TESTS.result == 'failure')
    steps:
      - name: "Notify Slack"
        run: |
          curl -X POST -H "Content-type: application/json" --data "{\"text\":\"<!here> CONDUCTOR_VALIDATORS_01_TESTS FAILED on $(echo ${GITHUB_REF#refs/heads/})!. View the test results on Github: https://github.com/0chain/0chain/actions/runs/${{ github.run_id }}\"}" ${{ secrets.DEVOPS_CHANNEL_WEBHOOK_URL }}
