name: Benchmark Tests

on:
  push:
    branches: [ master, staging, feature/add-slack-notifications-for-benchmark-tests ]
  pull_request:
    branches: [ master, staging ]

jobs:
  build:
    runs-on: [self-hosted, build]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.18'

      - name: Run Init
        run: ./docker.local/bin/init.setup.sh

      - name: Build Base
        run: ./docker.local/bin/build.base.sh

      - name: Install Docker Compose
        run: |
          sudo curl -L https://github.com/docker/compose/releases/download/1.29.2/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose || true
          sudo chmod +x /usr/local/bin/docker-compose || true 
          docker-compose --version
          
      - name: Docker Build Image
        run: ./docker.local/bin/build.benchmark.sh

      - name: Run tests
        run: |
          cd docker.local/benchmarks
          ../bin/start.benchmarks.sh | tee benchmark_run_output
          grep -R "Results" -A 1000 benchmark_run_output > benchmark_results
          echo "TESTS_RAN=true" >> $GITHUB_ENV

      - name: "Notify Slack"
        if: failure() && steps.send-slack-notification.outputs.value == 'true'
        run: |
          cd docker.local/benchmarks
          benchmark_results=$(cat benchmark_results | sed "s,\x1B\[[0-9;]*[a-zA-Z],,g" | awk -F'|' '{print $2}' | awk '{$1=$1};1' | sed 's/OK/:passed:/g' | sed 's/FAILED/:failed:/g')
          echo $benchmark_results
          curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"Benchmark results: $benchmark_results\"}" ${{ secrets.DEVOPS_CHANNEL_WEBHOOK_URL }}    
