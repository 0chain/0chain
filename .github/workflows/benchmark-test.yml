name: Benchmark Tests

concurrency:
  group: "publish-benchmark-${{ github.ref }}"
  cancel-in-progress: true
  
on:
  push:
    branches: [ master, staging ]
  pull_request:
    branches: [ master, staging ]
  workflow_dispatch:

jobs:
  build:
    runs-on: [self-hosted, build]
    steps:
      - name: Actions checkout
        uses: actions/checkout@v2
        
      - name: "Setup Go"
        shell: 'script --return --quiet --command "bash {0}"'
        run: |
          echo "GOMODCACHE=/root/actions-runner/_work/_tool/go/pkg/mod" >> $GITHUB_ENV
          echo "GOCACHE=/root/actions-runner/_work/_tool/.cache/go-build" >> $GITHUB_ENV
          echo "HOME=/root" >> $GITHUB_ENV
          export GOMODCACHE="/root/actions-runner/_work/_tool/go/pkg/mod"
          export GOCACHE="/root/actions-runner/_work/_tool/.cache/go-build"
          export HOME="/root"
          [ -f ./https://go.dev/dl/go1.20.3.linux-amd64.tar.gz ] || wget https://go.dev/dl/go1.20.3.linux-amd64.tar.gz
          [ -d /usr/local/go ] &&  sudo rm -rf /usr/local/go
          [ -f /usr/local/bin/go ] &&  sudo rm -rf /usr/local/bin/go
          sudo tar -C /usr/local -xzf ./go1.20.3.linux-amd64.tar.gz
          echo "PATH=$PATH:/usr/local/go/bin" >> $GITHUB_ENV
          export PATH=$PATH:/usr/local/go/bin
          which go
          go env
        
      - name: Docker Compose Setup.
        run: |
          sudo curl -L https://github.com/docker/compose/releases/download/1.29.2/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
  
      - name: Installing dependencies.
        run: |
          sudo apt update -y
          sudo apt -y install build-essential nghttp2 libnghttp2-dev libssl-dev wget

      - name: Run Init
        run: |
          ./docker.local/bin/init.setup.sh

      - name: Build Base
        run: |
          export HOME="/root"
          sudo ./docker.local/bin/build.base.sh
          
      - name: Docker Build Image
        run: |
          sudo ./docker.local/bin/build.benchmark.sh

      - name: Run tests
        run: |
          cd docker.local/benchmarks
          sudo ../bin/start.benchmarks.sh | tee benchmark_run_output
          grep -R "Results" -A 1000 benchmark_run_output > benchmark_results
          echo "TESTS_RAN=true" >> $GITHUB_ENV   
          if grep -aq "FAILED" benchmark_results; then
            echo "::error::Benchmark tests failed"
            exit 1
          fi
