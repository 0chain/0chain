name: Benchmark Tests

concurrency:
  group: "publish-benchmark-${{ github.ref }}"
  cancel-in-progress: true
  
on:
  push:
    branches: [ master, staging ]
  pull_request:
    branches: [ master, staging ]
  workflow_dispatch:

jobs:
  benchmark:
    runs-on: [self-hosted, arc-runner]
    steps:
      - name: Actions checkout
        uses: actions/checkout@v2

      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: '1.20'

      - name: Install Docker Compose
        run: |
          sudo curl -L https://github.com/docker/compose/releases/download/1.29.2/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose || true
          sudo chmod +x /usr/local/bin/docker-compose || true 
          docker-compose --version

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Run Init
        run: |
          sudo apt update && sudo apt install build-essential nghttp2 libnghttp2-dev libssl-dev wget -y
          detected_OS=$(sh -c 'uname 2>/dev/null || echo Unknown')
          detected_ARCH=$(sh -c 'uname -m 2>/dev/null || echo Unknown')
          curl -L -o ./tmp/mockery/mockery.tar.gz https://github.com/vektra/mockery/releases/download/v2.28.1/mockery_2.28.1_$(detected_OS)_$(detected_ARCH).tar.gz
          tar zxvfC ./tmp/mockery/mockery.tar.gz ./tmp/mockery
          cp ./tmp/mockery/mockery /usr/bin /usr/sbin
          ./docker.local/bin/init.setup.sh

      - name: Build Base
        run: ./docker.local/bin/build.base.sh
        
      - name: Docker Build Image
        run: |
          make install-mockery
          ls -lha
          ./docker.local/bin/build.benchmark.sh
        
      - name: Docker Build Image
        run: |
          sudo curl -L https://github.com/docker/compose/releases/download/1.29.2/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose || true
          sudo chmod +x /usr/local/bin/docker-compose || true 
          docker-compose --version

      - name: Run tests
        run: |
          cd docker.local/benchmarks
          ../bin/start.benchmarks.sh | tee benchmark_run_output
          grep -R "Results" -A 1000 benchmark_run_output > benchmark_results
          echo "TESTS_RAN=true" >> $GITHUB_ENV   
          if grep -aq "FAILED" benchmark_results; then
            echo "::error::Benchmark tests failed"
            exit 1
          fi
