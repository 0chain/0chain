name: CICD-01

on:
  workflow_dispatch:
    inputs:
      chainimage:
        description: '0chain image tag'
        required: true
        default: latest
      blobberimage:
        description: 'blobber image tag'
        required: true
        default: latest
      dnsimage:
        description: '0dns image tag'
        required: true
        default: latest
      blockimage:
        description: '0block image tag'
        required: true
        default: latest
      boximage:
        description: '0box image tag'
        required: true
        default: latest
      searchimage:
        description: '0search image tag'
        required: true
        default: latest
      proxyimage:
        description: '0proxy image tag'
        required: true
        default: latest
      explorerimage:
        description: 'explorer image tag'
        required: true
        default: latest


jobs:
  deploy:
    runs-on: self-hosted
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
      - uses: azure/setup-helm@v1
        with:
          version: 'v3.2.2'
      - uses: azure/setup-kubectl@v1
        id: install
      - name: Setup helm repo
        run: |
          helm repo add 0chain-helm http://0chain-helm-chart.s3-website.us-east-2.amazonaws.com/helmCharts/
          helm repo update
      - name: Setup kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.CICD01KC }}" | base64 -d > ~/.kube/config

      - name: Cleanup
        run: |
          helm list --short -n helmtest | xargs -L1 helm delete -n helmtest
          sleep 30
          helm upgrade --install --wait --timeout 120s cleanup -n helmtest 0chain-helm/cleanDir
          kubectl wait --for=condition=complete --timeout 900s job/helm-clean-directory -n helmtest

      - name: Setup chain
        if: always()
        run: |
          helm upgrade --install --wait --timeout 120s 0chain -n helmtest --set sharder.sharderImage.tag=${{ github.event.inputs.chainimage }} --set miner.minerImage.tag=${{ github.event.inputs.chainimage }} 0chain-helm/zchain
     
          helm upgrade --install --wait --timeout 120s 0dns -n helmtest --set zdns.image.tag=${{ github.event.inputs.dnsimage }} --set zdns.host=devnet-0chain.net 0chain-helm/zdns

          helm upgrade --install --wait --timeout 120s blobber -n helmtest --set blobber.blobberImage.tag=${{ github.event.inputs.blobberimage }} --set validator.validatorImage.tag=${{ github.event.inputs.blobberimage }} 0chain-helm/blobber

          helm upgrade --install --wait --timeout 120s 0block -n helmtest --set block.blockImage.tag=${{ github.event.inputs.blockimage }} --set block.host=devnet-0chain.net 0chain-helm/zblock

          helm upgrade --install --wait --timeout 120s explorer -n helmtest --set explorer.explorerImage.tag=${{ github.event.inputs.explorerimage }} --set explorer.host=devnet-0chain.net 0chain-helm/blockExplorer

          helm upgrade --install --wait --timeout 120s 0proxy -n helmtest --set proxy.image.tag=${{ github.event.inputs.proxyimage }} --set proxy.host=devnet-0chain.net 0chain-helm/zproxy

          helm upgrade --install --wait --timeout 120s 0box -n helmtest --set zbox.zboxImage.tag=${{ github.event.inputs.boximage }} --set zbox.host=devnet-0chain.net 0chain-helm/zbox

          helm upgrade --install --wait --timeout 120s 0search -n helmtest --set blockRecorder.blockRecorderImage.tag=${{ github.event.inputs.searchimage }} --set blockRecorder.host=devnet-0chain.net 0chain-helm/zsearch

          helm upgrade --install --wait --timeout 120s blobber-stake -n helmtest --set blobberStack.blobberCount=6 --set blobberStack.host=devnet-0chain.net --set blobberStack.image.tag=latest 0chain-helm/blobberStake

          rm -rf ~/.kube