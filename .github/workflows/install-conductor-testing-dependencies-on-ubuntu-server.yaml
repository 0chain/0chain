name:  Install Conductor Testing Dependencies on a new Ubuntu machine

on:
  workflow_dispatch:
    inputs:
      runner-label:
        description: 'Label of the runner to install the dependencies on'
        required: true
        default: 'conductor-test'
  workflow_call:
    inputs:
      runner-label:
        type: string
        description: 'Label of the runner to install the dependencies on'
        required: true
        default: 'conductor-test'
jobs:
  INSTALL_DEPS:
    name: INSTALL_DEPS
    runs-on: ${{ inputs.runner-label }}
  
    steps:
      - name: Check the OS is Ubuntu 20.04
        run: |
          cat /etc/os-release
          grep -q "Ubuntu 20.04" /etc/os-release || exit 1

      - name: Install APT dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            git \
            nghttp2 \
            libnghttp2-dev \
            libssl-dev \
            wget \
            build-essential \
            manpages-dev \
            software-properties-common \
            zip \
            unzip
      
      - name: Install g++-11/gcc-11
        run: |
          gcc -v || true
          g++ -v || true
          export FOUND=$(dpkg -l | grep -c gcc-11)
          [ $FOUND -gt 0 ] && exit 0 || true

          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo apt-get update -y
          sudo apt-get install -y gcc-11 g++-11
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 110 \
            --slave /usr/bin/g++ g++ /usr/bin/g++-11 \
            --slave /usr/bin/gcov gcov /usr/bin/gcov-11 \
            --slave /usr/bin/gcc-ar gcc-ar /usr/bin/gcc-ar-11 \
            --slave /usr/bin/gcc-ranlib gcc-ranlib /usr/bin/gcc-ranlib-11
          gcc -v
          g++ -v
          gcov -v

      - name: Install Go (v1.22.1)
        run: |
          rm /usr/bin/go || true
          rm go1.22.1.linux-amd64.tar.gz || true
          wget https://go.dev/dl/go1.22.1.linux-amd64.tar.gz
          rm -rf /usr/local/go && tar -C /usr/local -xzf go1.22.1.linux-amd64.tar.gz
          echo $GITHUB_ENV
          echo "PATH=$PATH:/usr/local/go/bin" >> $GITHUB_ENV
          export PATH=$PATH:/usr/local/go/bin
          go version
          ln -fs /usr/local/go/bin/go /usr/bin/go

      - name: Install Docker (5:26.0.1-1~ubuntu.20.04~focal)
        run: |
          for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg || true; done
          sudo apt-get update
          sudo apt-get install -y ca-certificates curl gnupg
          install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --batch --yes --dearmor -o /etc/apt/keyrings/docker.gpg
          chmod a+r /etc/apt/keyrings/docker.gpg            

          echo \
            "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          
          VERSION_STRING=5:26.0.1-1~ubuntu.20.04~focal
          sudo apt-get install docker-ce=$VERSION_STRING docker-ce-cli=$VERSION_STRING containerd.io docker-buildx-plugin docker-compose-plugin          
          docker version
          docker run --rm hello-world
      
      - name: Install legacy docker-compose (v1.29.2)
        run: |
          rm /usr/local/bin/docker-compose || true
          sudo curl -L https://github.com/docker/compose/releases/download/v2.26.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version
      
      - name: Install Herumi BLS/MCL (v1.89)
        run: |
          cd /tmp
          rm -rf bls* mcl* || true
          wget https://github.com/herumi/bls/archive/refs/tags/v1.89.zip -O herumi-bls.zip
          wget https://github.com/herumi/mcl/archive/refs/tags/v1.89.zip -O herumi-mcl.zip

          unzip herumi-bls.zip
          unzip herumi-mcl.zip

          rm herumi-bls.zip herumi-mcl.zip

          mv bls* bls
          mv mcl* mcl

          make -C mcl -j 4 lib/libmclbn256.a install
          make MCL_USE_GMP=0 MCL_DIR=./mcl -C bls -j 4 install
          ls -la /usr/local/lib

      
      - name: Install mockery (v2.42.1)
        run: |
          export HOME=/root
          go env -w GO111MODULE=auto
          go env -w GOPATH=$HOME/go
          go env -w GOMODCACHE=$HOME/go/pkg/mod
          go install github.com/vektra/mockery/v2@v2.42.1
          echo "PATH=$PATH:$(go env GOPATH)/bin" >> $GITHUB_ENV
          export PATH=$PATH:$(go env GOPATH)/bin
          mockery --version