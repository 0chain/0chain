name: Manual API Regressions

on: 
  workflow_dispatch:
    inputs:
      network:
        description: '[Overridden by custom network below] Which network do you wish to run API regressions against? Valid options: beta | dev | grpc | magma | stream | test'
        required: false
        default: 'beta'
      custom_network:
        description: '[OPTIONAL] Which custom network do you wish to run API regressions against? Format: my_custom_network.0chain.net'
        required: false
        default: ''  

env:
  NETWORK: ${{ github.event.inputs.network }}
  NETWORKS: beta | dev | grpc | magma | stream | test

jobs: 
  api_tests:
    runs-on: ubuntu-20.04
    steps:   
      - name: Validate network option
        id: network-check
        run: (echo -n "${{ github.event.inputs.custom_network }}" | xargs | wc -c | grep -vw 1 && echo 'NETWORK=custom' >> $GITHUB_ENV) || (echo '${{ env.NETWORKS }}' | grep -w "${{ env.NETWORK }}" > /dev/null || (echo "INVALID NETWORK [${{ env.NETWORK }}] SUPPLIED" && exit 1))
   
      - name: checkout
        uses: actions/checkout@v2
        with:
          repository: 0chain/0chainAPI
          token: ${{ secrets.SVC_ACCOUNT_SECRET }}
          
      - name: Install Node
        uses: actions/setup-node@v1
        with: 
          node-version: '12.x'

      - name: Install newman
        run: |
         npm install -g newman
         npm install -g newman-reporter-htmlextra

      - name: Make Directory for results
        run: mkdir -p ./${{ env.NETWORK }}/latest
        
      - name: Get Time
        id: time
        uses: nanzm/get-time-action@v1.1  
        with:
          format: 'YYYY-MM-DD_HH.mm.ss'

      - name: Run POSTMAN collection
        run: |
           exit_code=0           
           (echo ${{ env.NETWORK }} | grep -w "custom" > /dev/null && custom_network=$(echo ${{ github.event.inputs.custom_network }} | xargs | sed -E 's/^\s*.*:\/\///g' | sed 's:/*$::') && sed -i "0,/REPLACE/s//$custom_network/" './Postman Collections/Environments/custom.postman_environment.json') || custom_network=""
           newman run "./Postman Collections/0chain-regressions.json" -e "./Postman Collections/Environments/${{ env.NETWORK }}.postman_environment.json" -r cli,htmlextra --reporter-htmlextra-export "./${{ env.NETWORK }}/latest/index.html" --reporter-htmlextra-darkTheme --reporter-htmlextra-showEnvironmentData --reporter-htmlextra-showGlobalData --reporter-htmlextra-logs --reporter-htmlextra-title "0Chain API Regression Tests" --reporter-htmlextra-template "./Postman Collections/Data/0chain-dashboard-template.hbs" --reporter-htmlextra-browserTitle "Tests ran against ${{ env.NETWORK }} network ${{ github.event.inputs.custom_network }}"  --color on || exit_code=$? 
           cp -R ./${{ env.NETWORK }}/latest ./${{ env.NETWORK }}/${{ steps.time.outputs.time }}
           exit $exit_code
    
      - name: Output the run Details
        if: always()
        uses: actions/upload-artifact@v2
        with: 
         name: "TestReport-${{ env.NETWORK }}-${{ steps.time.outputs.time }}"
         path: "./${{ env.NETWORK }}/latest"
         
      - name: Deploy report page
        if:  always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          publish_branch: test_reports
          keep_files: true
          github_token: "${{ secrets.SVC_ACCOUNT_SECRET }}"
          publish_dir: "./${{ env.NETWORK }}"
          destination_dir: "./${{ env.NETWORK }}"
          user_name: "github-actions[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"    
      
      - name: Wait for report deployment to complete
        if:  always()
        run: counter=0; while [ $counter -lt 5 ] && curl -o /dev/null -Isw '%{http_code}\n' "https://0chain.github.io/0chain/${{ env.NETWORK }}/${{ steps.time.outputs.time }}/index.html" | grep -v 200 > /dev/null; do sleep 10 && echo "Waiting for report page to deploy..." && ((counter=counter+1)); done
    
      - name: Report Link
        if:  always()
        run: echo "https://0chain.github.io/0chain/${{ env.NETWORK }}/${{ steps.time.outputs.time }}/index.html" 
