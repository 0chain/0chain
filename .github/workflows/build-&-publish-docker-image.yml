name: build-&-publish-docker-image

concurrency:
  group: "${{ github.ref }}"
  cancel-in-progress: true

on:
  push:
    branches: [ staging, feature/notify-pr ]
    tags:
  pull_request:
  workflow_dispatch:
    inputs:
      latest_tag:
        description: 'type yes for building latest / staging tag'
        default: 'no'
        required: true

env:
  ZCHAIN_BUILDBASE: zchain_build_base
  ZCHAIN_BUILDRUN: zchain_run_base
  SHARDER_REGISTRY: ${{ secrets.SHARDER_REGISTRY }}
  MINER_REGISTRY: ${{ secrets.MINER_REGISTRY }}

jobs:
  dockerize-miner:
    runs-on: [self-hosted, build]
    steps:
    
    - name: Get info
      id: get_info
      run: |
        echo "GITHUB_HEAD_REF            [${GITHUB_HEAD_REF}]"
        echo "GITHUB_HEAD_REF STRIPPED   [${GITHUB_HEAD_REF#refs/*/}]"
        echo "GITHUB_REF                 [${GITHUB_REF}]"
        echo "GITHUB_REF STRIPPED BRANCH [${GITHUB_REF##*/}]"
        echo "GITHUB_REF STRIPPED TAG    [${GITHUB_REF#refs/*/}]"
        echo "github.event.pull_request.head.sha [${{ github.event.pull_request.head.sha }}]"

        echo "BRANCH=$([ -z '$GITHUB_HEAD_REF' ] && echo '${GITHUB_REF##*/}' || echo ${GITHUB_HEAD_REF#refs/*/})" >> $GITHUB_ENV
        echo "TAG=$(([ -z '${{ github.event.pull_request.head.sha }}' ] && echo ${GITHUB_REF#refs/*/} || echo '${{ github.event.pull_request.head.sha }}') | sed 's/\//-/g')" >> $GITHUB_ENV

    - uses: actions/checkout@v2

    - name: Build base images
      run: |
        docker build -f docker.local/build.base/Dockerfile.build_base . -t $ZCHAIN_BUILDBASE
        docker build -f docker.local/build.base/Dockerfile.run_base docker.local/build.base -t $ZCHAIN_BUILDRUN

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build & Push Miner Docker Image
      run: |
        sed 's,%COPY%,COPY --from=miner_build $APP_DIR,g' "$DOCKERFILE_MINER.template" > "$DOCKERFILE_MINER"
        docker build --build-arg GIT_COMMIT=$GITHUB_SHA -t miner:latest -f "$DOCKERFILE_MINER" .
        
        docker tag miner:latest ${MINER_REGISTRY}:$TAG
        echo ${MINER_REGISTRY}:$TAG

        SHORT_SHA=$(echo $GITHUB_SHA | head -c 8)
        docker tag miner:latest ${MINER_REGISTRY}:$TAG-$SHORT_SHA
        echo ${MINER_REGISTRY}:$TAG-$SHORT_SHA

      env:
        DOCKERFILE_MINER: "docker.local/build.miner/Dockerfile"

#    - name: Push Miner Docker Image With latest Tag
#      if: ${{ github.event.inputs.latest_tag == 'yes' || github.ref == 'refs/heads/master' }}
#      run: |
#          docker push $MINER_REGISTRY:latest


  dockerize-sharder:
    runs-on: [self-hosted, build]
    steps:

    - name: Get info
      id: get_info
      run: |
        echo "BRANCH=$(echo ${GITHUB_REF##*/})" >> $GITHUB_ENV
        echo "TAG=$(echo ${GITHUB_REF##*/} | sed 's/\//-/g' )" >> $GITHUB_ENV

    - uses: actions/checkout@v1

    - name: Build base images
      run: |
        docker build -f docker.local/build.base/Dockerfile.build_base . -t $ZCHAIN_BUILDBASE
        docker build -f docker.local/build.base/Dockerfile.run_base docker.local/build.base -t $ZCHAIN_BUILDRUN

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build & Push Sharder Docker Image
      run: |
        docker build --build-arg GIT_COMMIT=$GITHUB_SHA -t sharder:latest -f docker.local/build.sharder/Dockerfile .

        docker tag sharder:latest ${SHARDER_REGISTRY}:$TAG
        docker push ${SHARDER_REGISTRY}:$TAG

        SHORT_SHA=$(echo $GITHUB_SHA | head -c 8)
        docker tag sharder:latest ${SHARDER_REGISTRY}:$TAG-$SHORT_SHA
        docker push ${SHARDER_REGISTRY}:$TAG-$SHORT_SHA  


    - name: Push Sharder Docker Image With latest Tag
      if: ${{ github.event.inputs.latest_tag == 'yes' || github.ref == 'refs/heads/master' }}
      run: |
          docker push $SHARDER_REGISTRY:latest


  system-tests:
    if: github.event_name != 'workflow_dispatch'
    needs: [dockerize-miner, dockerize-sharder]
    runs-on: [ tests-suite ]
    steps:
      - name: "Get current PR"
        uses: jwalton/gh-find-current-pr@v1
        id: findPr
        with:
          github-token: ${{ github.token }}

      - name: "Set PR Status Pending"
        uses: niteoweb/pull_request_status_action@v1.0.0
        if: steps.findPr.outputs.number
        with:
          pr_number: ${{ steps.findPr.outputs.pr }}
          description: "System tests running with default config..."
          state: "pending"
          repository: ${{ github.repository }}
          context: "0Chain System Tests"
          target_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: "Setup"
        run: |
          echo "BRANCH=$(echo ${GITHUB_REF##*/})" >> $GITHUB_ENV
          echo "SHORT_SHA=$(echo $GITHUB_SHA | head -c 8)" >> $GITHUB_ENV
          echo "TAG=$(echo ${GITHUB_REF##*/} | sed 's/\//-/g')" >> $GITHUB_ENV
          echo "NETWORK_URL=$(echo dev-${RUNNER_NAME:(-1)}.devnet-0chain.net)" >> $GITHUB_ENV
          echo "RUNNER_NUMBER=${RUNNER_NAME:(-1)}" >> $GITHUB_ENV

      - name: "Deploy 0Chain"
        uses: 0chain/actions/deploy-0chain@master
        with:
          kube_config: ${{ secrets[format('DEV{0}KC', env.RUNNER_NUMBER)] }}
          teardown_condition: "TESTS_PASSED"
          miner_image:  ${{ env.TAG }}-${{ env.SHORT_SHA }}
          sharder_image: ${{ env.TAG }}-${{ env.SHORT_SHA }}
          blobber_image: staging
          validator_image: staging
          zbox_image: staging
          zblock_image: staging
          zdns_image: staging
          explorer_image: latest
          zproxy_image: staging
          zsearch_image: staging
          blobber_stake_image: latest

      - name: "Run System tests"
        uses: 0chain/actions/run-system-tests@master
        with:
          system_tests_branch: master
          network: ${{ env.NETWORK_URL }}
          zbox_cli_branch: staging
          zwallet_cli_branch: staging
          smart_contract_owner_wallet_json: ${{ secrets.SMART_CONTRACT_OWNER_WALLET_JSON }}
          svc_account_secret: ${{ github.token }}
          deploy_report_page: false
          archive_results: true
          run_flaky_tests: false
          retry_failures: true

      - name: "Set PR Status Success"
        if: ${{ success() && steps.findPr.outputs.number }}
        uses: niteoweb/pull_request_status_action@v1.0.0
        with:
          pr_number: ${{ steps.findPr.outputs.pr }}
          description: "System tests with default config completed successfully"
          state: ${{ job.status }}
          repository: ${{ github.repository }}
          context: "0Chain System Tests"
          target_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: "Set PR Status Failed"
        if: ${{ failure() && steps.findPr.outputs.number }}
        uses: niteoweb/pull_request_status_action@v1.0.0
        with:
          pr_number: ${{ steps.findPr.outputs.pr }}
          description: "System tests with default config failed. Try running manually with more specific config"
          state: ${{ job.status }}
          repository: ${{ github.repository }}
          context: "0Chain System Tests"
          target_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ github.token }}