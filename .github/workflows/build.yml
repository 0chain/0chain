name: BUILD-0CHAIN

on:
  workflow_dispatch:
    inputs:
      latest_tag:
        description: 'type yes for building latest tag'
        default: 'no'
        required: true

env:
  ZCHAIN_BUILDBASE: zchain_build_base
  ZCHAIN_BUILDRUN: zchain_run_base
  SHARDER_REGISTRY: ${{ secrets.SHARDER_REGISTRY }}
  MINER_REGISTRY: ${{ secrets.MINER_REGISTRY }}

jobs:
  dockerize_miner:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2

    - name: Build base images
      run: |
        docker build -f docker.local/build.base/Dockerfile.build_base . -t $ZCHAIN_BUILDBASE
        docker build -f docker.local/build.base/Dockerfile.run_base docker.local/build.base -t $ZCHAIN_BUILDRUN

    - name: Get info
      id: get_info
      run: |
        BRANCH=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//-/g')
        SHORT_SHA=$(echo $GITHUB_SHA | head -c 8)
        echo ::set-output name=BRANCH::${BRANCH}
        echo ::set-output name=IMAGE_TAG::${BRANCH}-${SHORT_SHA}

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build & Push Miner Docker Image
      run: |
        sed 's,%COPY%,COPY --from=miner_build $APP_DIR,g' "$DOCKERFILE_MINER.template" > "$DOCKERFILE_MINER"
        docker build --build-arg GIT_COMMIT=$GITHUB_SHA -t $MINER_REGISTRY:$TAG -f "$DOCKERFILE_MINER" .
        docker tag $MINER_REGISTRY:$TAG $MINER_REGISTRY:latest
        docker tag $MINER_REGISTRY:$TAG $MINER_REGISTRY:staging
        docker push $MINER_REGISTRY:$TAG
      env:
        TAG: ${{ steps.get_info.outputs.IMAGE_TAG }}
        DOCKERFILE_MINER: "docker.local/build.miner/Dockerfile"

    - name: Push Miner Docker Image With latest Tag
      run: |
        if [[ "$PUSH_LATEST" == "yes" ]] && [[ "$BRANCH" == "master" ]]; then
          docker push $MINER_REGISTRY:latest
         elif [[ "$BRANCH" == "staging" ]]; then
           docker push $MINER_REGISTRY:staging
        fi
      env:
        PUSH_LATEST: ${{ github.event.inputs.latest_tag }}
        BRANCH: ${{ steps.get_info.outputs.BRANCH }}

  dockerize_sharder:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v1

    - name: Build base images
      run: |
        docker build -f docker.local/build.base/Dockerfile.build_base . -t $ZCHAIN_BUILDBASE
        docker build -f docker.local/build.base/Dockerfile.run_base docker.local/build.base -t $ZCHAIN_BUILDRUN

    - name: Get info
      id: get_info
      run: |
        BRANCH=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//-/g')
        SHORT_SHA=$(echo $GITHUB_SHA | head -c 8)
        echo ::set-output name=BRANCH::${BRANCH}
        echo ::set-output name=IMAGE_TAG::${BRANCH}-${SHORT_SHA}

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build & Push Sharder Docker Image
      run: |
        docker build --build-arg GIT_COMMIT=$GITHUB_SHA -t $SHARDER_REGISTRY:$TAG -f docker.local/build.sharder/Dockerfile .
        docker tag $SHARDER_REGISTRY:$TAG $SHARDER_REGISTRY:latest
        docker tag $SHARDER_REGISTRY:$TAG $SHARDER_REGISTRY:staging
        docker push $SHARDER_REGISTRY:$TAG
      env:
        TAG: ${{ steps.get_info.outputs.IMAGE_TAG }}

    - name: Push Sharder Docker Image With latest Tag
      run: |
        if [[ "$PUSH_LATEST" == "yes" ]] && [[ "$BRANCH" == "master" ]]; then
          docker push $SHARDER_REGISTRY:latest
        elif [[ "$BRANCH" == "staging" ]]; then
          docker push $SHARDER_REGISTRY:staging
        fi
      env:
        PUSH_LATEST: ${{ github.event.inputs.latest_tag }}
        BRANCH: ${{ steps.get_info.outputs.BRANCH }}
