name: Dockerize

on:
  push:
    branches: [ master ]

env:
  ZCHAIN_BUILDBASE: zchain_build_base
  ZCHAIN_BUILDRUN: zchain_run_base
  SHARDER_REGISTRY: ${{ secrets.SHARDER_REGISTRY }}
  MINER_REGISTRY: ${{ secrets.MINER_REGISTRY }}

jobs:
  dockerize_miner:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2

    - name: Build base images
      run: |
        docker build -f docker.local/build.base/Dockerfile.build_base . -t $ZCHAIN_BUILDBASE
        docker build -f docker.local/build.base/Dockerfile.run_base docker.local/build.base -t $ZCHAIN_BUILDRUN

    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

    - name: Get short sha
      id: get_short_sha
      run: echo ::set-output name=SHA::$(echo ${GITHUB_SHA::8})

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build miner
      run: |
        sed 's,%COPY%,COPY --from=miner_build $APP_DIR,g' "$DOCKERFILE_MINER.template" > "$DOCKERFILE_MINER"
        docker build --build-arg GIT_COMMIT=$GITHUB_SHA -t $MINER_REGISTRY:$TAG -f "$DOCKERFILE_MINER" .
        docker tag $MINER_REGISTRY:$TAG $MINER_REGISTRY:latest
        docker push $MINER_REGISTRY:$TAG
        docker push $MINER_REGISTRY:latest
      env:
        TAG: ${{ steps.get_version.outputs.VERSION }}-${{ steps.get_short_sha.outputs.SHA }}
        DOCKERFILE_MINER: "docker.local/build.miner/Dockerfile"

  dockerize_sharder:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v1

    - name: Build base images
      run: |
        docker build -f docker.local/build.base/Dockerfile.build_base . -t $ZCHAIN_BUILDBASE
        docker build -f docker.local/build.base/Dockerfile.run_base docker.local/build.base -t $ZCHAIN_BUILDRUN

    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

    - name: Get short sha
      id: get_short_sha
      run: echo ::set-output name=SHA::$(echo ${GITHUB_SHA::8})

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build sharder
      run: |
        docker build --build-arg GIT_COMMIT=$GITHUB_SHA -t sharder -f docker.local/build.sharder/Dockerfile .
        docker tag sharder $SHARDER_REGISTRY:$TAG
        docker tag sharder $SHARDER_REGISTRY:latest
        docker push $SHARDER_REGISTRY:$TAG
        docker push $SHARDER_REGISTRY:latest
      env:
        TAG: ${{ steps.get_version.outputs.VERSION }}-${{ steps.get_short_sha.outputs.SHA }}
