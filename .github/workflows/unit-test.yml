name: Unit test & Lint

on:
  push:
    branches: [ master, staging ]
  pull_request:
    branches: [ master, staging ]
  workflow_dispatch:

jobs:
  build:
    runs-on: [self-hosted, arc-runner]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: '1.18'

      - name: Check msgp changes
        run: |
          sudo apt update
          sudo apt install build-essential nghttp2 libnghttp2-dev libssl-dev wget -y
          ./docker.local/bin/check.msgp.sh

      - name: Set up Docker Buildx
        run: |
          sudo apt-get update -y
          sudo apt-get install wget
          sudo apt-get install ca-certificates curl gnupg lsb-release -y
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update -y
          sudo apt-get install docker-ce docker-ce-cli containerd.io -y
          export DOCKER_CLI_EXPERIMENTAL=enabled
          docker run --privileged --rm tonistiigi/binfmt --install all

      - name: Build Base
        run: ./docker.local/bin/build.base.sh

      - name: Check swagger generation
        run: docker.local/bin/test.swagger.sh

      - name: Run unit tests
        run: |
          ./docker.local/bin/unit_test_build.sh

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          files: ./code/coverage.txt
          flags: Unit-Tests
          verbose: true

  lint:
    runs-on: [self-hosted, arc-runner]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.18'

      - name: Check msgp changes
        run: |
          sudo apt update -y
          sudo apt install build-essential nghttp2 libnghttp2-dev libssl-dev wget -y
          ./docker.local/bin/check.msgp.sh

      - name: Build Base
        run: ./docker.local/bin/build.base.sh

      - name: Check swagger generation
        run: docker.local/bin/test.swagger.sh

      - name: Run Linter
        run: ./docker.local/bin/linter.sh
