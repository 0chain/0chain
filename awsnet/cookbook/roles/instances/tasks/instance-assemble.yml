#- name: Get all the instances
#  set_fact:
#    agents: "{{zchain.blueprint.sharders| dict2items | union(zchain.blueprint.miners | dict2items)}}"

- name: "Launch the server instances..."
  ec2:
    region: "{{regions[item.value.region]}}"
    key_name: "{{aws_key_pair}}"
    instance_type: "{{zchain.blueprint.instance_type[item.value.role]}}"
    image: "{{instance_images[item.value.region]['ami_id']}}"
    wait: no
    termination_protection: no
    group:
    instance_tags:
      Name: "{{item.key}}"
      role: "{{item.value.role}}"
      network: "{{zchain.blueprint.network_type}}"
    exact_count: 1
    count_tag:
      Name: "{{item.key}}"
      role: "{{item.value.role}}"
      network: "{{zchain.blueprint.network_type}}"
  register: ec2
  with_items: "{{agents}}"
  check_mode: no

- set_fact:
    nascent: "{{ec2 | json_query('results[*].tagged_instances')}}"

- name: Nodefiles
  debug:
    msg: "Node files storage: {{nodefiles}}"

- name: Clean the old nodefile
  file:
    state: absent
    path: "{{nodefiles.nodes.local}}"

- name: "Show name and public ip mapping..."
  lineinfile:
    path: "{{nodefiles.nodes.local}}"
    create: yes
    line: >-
      {{item.tags.Name[0:3]}},
      {{item.public_ip}},
      {{zchain.blueprint.ports[item.tags.role]}},
      {{clientid[item.tags.Name].client}},
      {{clientid[item.tags.Name].public}}

  with_items: "{{nascent}}"

- name: Wait for SSH to come up...
  wait_for:
    host: "{{item.public_ip}}"
    port: 22
    state: started
  with_items: "{{nascent}}"

- debug: var=item
  with_items: "{{nascent}}"

- name: "Add the instance to the groups..."
  add_host:
    name: "{{item.tags.Name}}"
    hostname: "{{item.public_ip}}"
    groupname: "zservers"
    ansible_host: "{{item.public_ip}}"
    ansible_port: 22
    ansible_user: ubuntu
    ansible_ssh_private_key_file: "{{aws_key_pair_file}}"
    ansible_ssh_extra_args: "-i {{aws_key_pair_file}} -o StrictHostKeyChecking=no"
  with_items: "{{nascent}}"

...

