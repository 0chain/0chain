---
#The common script depends upon the following variables which are set in the Makefile
# credential - The location of the AWS keys
# network - The network to launch. Check receipes for the name of the network
# repodest - The destination directory to copy out the 0chain repository.

#AWS Key Setup
aws_credentials: "{{credential}}/aws/credentials"
aws_key_pair: "{{blueprint.aws_key_pair}}"
aws_key_dir: "{{credential}}/{{aws_key_pair}}"

aws_key_pair_file: "{{aws_key_dir}}/{{aws_key_pair}}.pem"
aws_public_key_file: "{{aws_key_dir }}/{{aws_key_pair}}.pub"

#Git Key Setup
git_key_dir: "{{credential}}/git"
git_key_pair: "github"
git_key_pair_file: "{{git_key_dir}}/{{git_key_pair}}.pem"
git_public_key_file: "{{git_key_dir }}/{{git_key_pair}}.pub"

#Regions that are supported
regions:
  'california':  "us-west-1"
  'canada':  "ca-central-1"
  'frankfurt':  "eu-central-1"
  'ireland':  "eu-west-1"
  'london': "eu-west-2"
  'mumbai': "ap-south-1"
  'ohio': "us-east-2"
  'oregon': "us-west-2"
  'paris': "eu-west-3"
  'saopaulo': "sa-east-1"
  'seoul': "ap-northeast-2"
  'singapore': "ap-southeast-1"
  'sydney': "ap-southeast-2"
  'tokyo': "ap-northeast-1"
  'virginia': "us-east-1"


#Miners can be installed in the 16 regions for miners.
miner_regions:
  -  california
  -  canada
  -  frankfurt
  -  ireland
  -  london
  -  mumbai
  -  ohio
  -  oregon
  -  paris
  -  saopaulo
  -  seoul
  -  singapore
  -  sydney
  -  tokyo
  -  virginia

#Currently shareder use EFS.
#Hence allow only following 10 regions for sharders.
sharder_regions:
  - virginia
  - ohio
  - california
  - oregon
  - seoul
  - singapore
  - sydney
  - tokyo
  - frankfurt
  - ireland

region_tags: "{{regions.keys()}}"

primary: 'virginia'

primary_region: "{{regions[primary]}}"

git:
  repo: "ssh://git@0chain.github.com/0chain/0chain.git"
  version: "{{blueprint.git_version}}"
  staging: "{{zchain_artifact}}/0chain"
  zip: "{{zchain_artifact}}/0chain.zip"

zchain_volumes:
  root: "/0chain_root"
  ebs: "/0chain"
  efs: "/0chain_efs"


artifact:
  local:
    base: "{{zchain_artifact}}"
    dirs:
    - 0chain
    - miner
    - sharder


  zchain:
    base: "{{zchain_volumes.ebs}}"
    code: "{{zchain_volumes.ebs}}/0chain"
    config: "{{zchain_volumes.ebs}}/config"

    dirs:
      'miner':
      - { canonical: "/0chain/0chain" }
      - { canonical: "/0chain/config" }
      - { canonical: "/0chain/nodes" }
      - { canonical: "/0chain/log", location:  "/0chain_root/log" }
      - { canonical: "/0chain/data/redis/state" }
      - { canonical: "/0chain/data/redis/transactions" }
      - { canonical: "/0chain/data/rocksdb/state" }


      'sharder':
      - { canonical: "/0chain/0chain" }
      - { canonical: "/0chain/config" }
      - { canonical: "/0chain/nodes" }
      - { canonical: "/0chain/log", location:  "/0chain_root/log" }
      - { canonical: "/0chain/data", location:  "/0chain_efs/data" }
      - { canonical: "/0chain_efs/data/blocks"}
      - { canonical: "/0chain_efs/data/cassandra"}
      - { canonical: "/0chain_efs/data/rocksdb/blocksummary" }
      - { canonical: "/0chain_efs/data/rocksdb/roundsummary" }
      - { canonical: "/0chain_efs/data/rocksdb/state" }

nodefiles:
  file: "nodes.txt"
  dir:
    local: "{{artifact.local.base}}/nodes"
    zchain: "{{artifact.zchain.base}}/nodes"

blueprint.instance_tags: network_type={{blueprint.network_type}} network_name={{blueprint.network_name}}


zchain_config:
  file: "0chain.yaml"
  dir:
    local: "anchor/{{network}}"
    zchain: "{{artifact.zchain.config}}"

zchain:
  blueprint: "{{blueprint}}"
  credentials: "{{credential}}"
  artifact: "{{artifact}}"
  git: "{{git}}"

agents: "{{zchain.blueprint.sharders| dict2items | union(zchain.blueprint.miners | dict2items)}}"
agents_dict: "{{zchain.blueprint.sharders | combine(zchain.blueprint.miners)}}"

...