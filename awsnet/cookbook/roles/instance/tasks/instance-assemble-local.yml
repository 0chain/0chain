---
- block:
  - set_fact:
      agent_role: "{{agent.value.role}}"

  - set_fact:
      #Root EBS Disk
      root_ebs_disk: "{{storage[zchain.blueprint.storage_ebs.root]}}"
      #EFS volume for the agent.
      agent_ebs_disk: "{{storage[zchain.blueprint.storage_ebs[agent_role]]}}"

  - set_fact:
      agent_efs_disk: "{{storage[zchain.blueprint.storage_efs[agent_role]]}}"
    when: agent_role == "sharder"

  - name: "Launch {{agent_role}} => {{agent.key}}"
    ec2:
      region: "{{regions[agent.value.region]}}"
      key_name: "{{aws_key_pair}}"
      instance_type: "{{zchain.blueprint.instance_type[agent.value.role]}}"
      image: "{{instance_images[agent.value.region]['ami_id']}}"
      wait: no
      termination_protection: no
      group:
      instance_tags: "{{instance_tags[agent.key]}}"
      exact_count: 1
      count_tag: "{{instance_tags[agent.key]}}"
      ebs_optimized: yes
      volumes:
        -  "{{root_ebs_disk}}"
        -  "{{agent_ebs_disk}}"
    register: ec2

  - name: "Get subnet {{agent_role}} => {{agent.key}}"
    ec2_instance_facts:
      region: "{{regions[agent.value.region]}}"
      filters:
        instance-state-name: running
        "tag:network_type": "{{zchain.blueprint.network_type}}"
        "tag:network_name": "{{zchain.blueprint.network_name}}"
        "tag:role": "{{agent_role}}"
        "tag:Name": "{{agent.key}}"
    register: ec2_fact

  - set_fact:
      agent_instance: "{{ec2_fact.instances[0]}}"

  - set_fact:
      agent_instance_id: "{{agent_instance.instance_id}}"
      agent_subnet_id: "{{agent_instance.subnet_id}}"

  - debug:
      msg: "{{agent.key}} id={{agent_instance_id}} subnet={{agent_subnet_id}}"

  - name: "Create the EFS file system....for sharder"
    debug:
      msg: "efs={{agent_efs_disk}}"
    when: agent_role == "sharder"

  - name: "Create EFS file system {{agent_role}} => {{agent.key}}"
    efs:
      state: present
      region: "{{regions[agent.value.region]}}"
      performance_mode: "general_purpose"
      name: "EFS"
      tags: "{{instance_tags[agent.key]}}"
      targets:
          - subnet_id: "{{agent_subnet_id}}"
    when: agent_role == "sharder"
    register: efs_result

  - debug:
      msg: "efs={{efs_result}}"

  tags: ['instance-assemble-local']
...

