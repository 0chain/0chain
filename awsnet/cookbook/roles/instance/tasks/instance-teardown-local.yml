---
- block:
  - set_fact:
      agent_role: "{{agent.value.role}}"

  - name: "Fire first request to terminate the servers..."
    ec2:
      region: "{{regions[agent.value.region]}}"
      key_name: "{{aws_key_pair}}"
      instance_type: "{{zchain.blueprint.instance_type[agent.value.role]}}"
      image: "{{instance_images[agent.value.region]}}"
      wait: no
      termination_protection: no
      group:
      instance_tags: "{{instance_tags[agent.key]}}"
      exact_count: 0
      count_tag: "{{instance_tags[agent.key]}}"
    check_mode: no
    ignore_errors: yes

  - name: "Wait for the servers to terminate..."
    ec2:
      region: "{{regions[agent.value.region]}}"
      key_name: "{{aws_key_pair}}"
      instance_type: "{{zchain.blueprint.instance_type[agent.value.role]}}"
      image: "{{instance_images[agent.value.region]}}"
      wait: yes
      termination_protection: no
      group:
      instance_tags: "{{instance_tags[agent.key]}}"
      exact_count: 0
      count_tag: "{{instance_tags[agent.key]}}"
    check_mode: no
    ignore_errors: yes

#  - name: "Teardown the EFS file system {{agent_role}} => {{agent.key}} {{agent.value.region}}"
#    efs:
#      state: absent
#      region: "{{regions[agent.value.region]}}"
#      #name: "{{network_name}}.{{agent.key}}"
#      name: "{{agent.key}}"
#      #tags: "{{instance_tags[agent.key]}}"
#    when: agent_role == "sharder"
#    register: efs_teardown_result

#  - debug:
#      msg: "efs teardown status={{efs_teardown_result}}"


  tags: ['instance-teardown-local']
...