---
- name: Set hostname to match EC2 Name
  hostname:
    name: "{{agent_name}}-{{network_name}}"
  become: yes

- name: Update the apt-get package, install ansible and python3.5
  shell: |
    apt-get -y update
    apt-get -y install python3.5 ansible
  become: yes
  args:
    warn: False

- name: Set packages to update
  set_fact:
    package_list:
      - python3.5
      - ansible
      - python-setuptools
      - tree
      - zip
      - unzip
      - htop
      - ncdu
      - linux-tools-common
      - linux-tools-4.4.0-1061-aws
      - linux-cloud-tools-4.4.0-1061-aws
      - linux-tools-aws
      - iperf
      - nethogs
      - iperf3
      - nfs-common

- name: Install base packages
  apt:
    name: "{{package_list}}"
    state: present

- name: "Set the EBS device to format"
  set_fact:
    ebs_device_name: "{{storage[zchain.blueprint.storage_ebs[agent_role]].ubuntu_disk}}"

- debug:
    msg: "{{agent_role}}:{{agent_name}} => {{ebs_device_name}}"

- name: "Install file-system for {{agent_name}} on {{ebs_device_name}}"
  filesystem:
    fstype: ext4
    dev: "{{ebs_device_name}}"
    force: no
  become: yes

- name: "Set the base directory to mount"
  set_fact:
    ebs_mount_point: "{{zchain_volumes.ebs}}"

- name: Create the mount point
  file:
    path: "{{ebs_mount_point}}"
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: 0755
  become: yes

- name: Mount the EBS block device
  mount:
    path: "{{ebs_mount_point}}"
    src: "{{ebs_device_name}}"
    state: mounted
    fstype: ext4
    boot: yes
  become: yes

- block:
  - name: Get the EFS facts for the instance
    local_action:
      module: efs_facts
      aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
      aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY')}}"
      security_token: "{{ lookup('env', 'AWS_SECURITY_TOKEN')}}"
      region: "{{ ansible_ec2_placement_region }}"
      tags: "{{agent_tags}}"
    register: efs_facts_result

  - set_fact:
      efs: "{{efs_facts_result.ansible_facts.efs[0]}}"

  - debug:
      msg: "efs facts={{efs}}"
      verbosity: 2

  - set_fact:
      efs_mount_point: "{{efs.file_system_id}}.efs.{{ansible_ec2_placement_region}}.amazonaws.com:/"

  - debug:
      msg: "efs_mount_point={{agent_name}} => {{efs_mount_point}}"
      verbosity: 2

  - name: "Mount for {{agent_name}} {{efs_mount_point}} at {{zchain_volumes.efs}}"
    mount:
      src: "{{efs_mount_point}}"
      path: "{{zchain_volumes.efs}}"
      fstype: nfs4
      opts: nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport
      state: mounted
    become: yes

  - name: "Register {{zchain_volumes.efs}} to user ubuntu"
    file:
      path: "{{zchain_volumes.efs}}"
      owner: ubuntu
      group: ubuntu
      mode: "u=rwx,g=rx,o=rx"
    become: yes

  when: agent_role == "sharder"


- set_fact:
    agent_dirs: "{{artifact.zchain.dirs[agent_role]}}"

- name: "Create subdirs for agents"
  file:
    path : "{{agent_dir.location | default(agent_dir.canonical)}}"
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: 0755
  loop: "{{agent_dirs}}"
  loop_control:
    loop_var: agent_dir
    label: "create dir for {{agent_role}} => {{agent_dir.location | default(agent_dir.canonical)}}"
  become: yes

- name: "Create links to the canonical names"
  file:
    src: "{{agent_dir.location}}"
    dest: "{{agent_dir.canonical}}"
    state: link
    force: yes
  loop: "{{agent_dirs}}"

  loop_control:
    loop_var: agent_dir
    label: "create link if required for {{agent_role}} => {{agent_dir.canonical}}"
  when: agent_dir.location is defined
  become: yes

...
