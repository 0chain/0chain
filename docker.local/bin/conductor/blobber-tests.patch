# Index: docker.local/IntegrationTestsBlobberDockerfile
# IDEA additional info:
# Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
# <+>UTF-8
# ===================================================================
# diff --git a/docker.local/IntegrationTestsBlobberDockerfile b/docker.local/IntegrationTestsBlobberDockerfile
# --- a/docker.local/IntegrationTestsBlobberDockerfile	(revision fdc1434a9e1d97b5bbf5d478ed4852f42d6cee32)
# +++ b/docker.local/IntegrationTestsBlobberDockerfile	(date 1616507120951)
# @@ -1,4 +1,4 @@
# -FROM golang:1.11.4-alpine3.8 as blobber_build
# +FROM golang:1.14.9-alpine3.12 as blobber_build
 
#  RUN apk add --update --no-cache build-base linux-headers git cmake bash perl grep
 
# @@ -34,7 +34,7 @@
#  RUN go build -v -tags "bn256 development integration_tests" -ldflags "-X 0chain.net/core/build.BuildTag=$GIT_COMMIT"
 
#  # Copy the build artifact into a minimal runtime image:
# -FROM golang:1.11.4-alpine3.8
# +FROM golang:1.14.9-alpine3.12
#  RUN apk add gmp gmp-dev openssl-dev
#  COPY --from=blobber_build  /usr/local/lib/libmcl*.so \
#                          /usr/local/lib/libbls*.so \
Index: config/0chain_blobber.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/config/0chain_blobber.yaml b/config/0chain_blobber.yaml
--- a/config/0chain_blobber.yaml	(revision fdc1434a9e1d97b5bbf5d478ed4852f42d6cee32)
+++ b/config/0chain_blobber.yaml	(date 1617001259716)
@@ -36,7 +36,7 @@
 # a task and redeem tokens, it should be big enough
 read_lock_timeout: 1m
 write_lock_timeout: 1m
-max_file_size: 10485760 #10MB
+max_file_size: 52428800 #50MB
 
 # update_allocations_interval used to refresh known allocation objects from SC
 update_allocations_interval: 1m
@@ -55,7 +55,7 @@
 block_worker: http://198.18.0.98:9091
 
 handlers:
-  rate_limit: 0 # 10 per second . it can't too small one if a large file is download with blocks
+  rate_limit: 1000 # 1000 per second . it can't too small one if a large file is download with blocks
 
 server_chain:
   id: "0afc093ffb509f059c55478bc1a60351cef7b4e9c008a53a6cc8241ca8617dfe"
Index: code/go/0chain.net/blobbercore/handler/handler_integration_tests.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/code/go/0chain.net/blobbercore/handler/handler_integration_tests.go b/code/go/0chain.net/blobbercore/handler/handler_integration_tests.go
--- a/code/go/0chain.net/blobbercore/handler/handler_integration_tests.go	(revision fdc1434a9e1d97b5bbf5d478ed4852f42d6cee32)
+++ b/code/go/0chain.net/blobbercore/handler/handler_integration_tests.go	(date 1616507595008)
@@ -41,7 +41,7 @@
 	r.HandleFunc("/v1/file/download/{allocation}", common.UserRateLimit(common.ToByteStream(WithConnection(DownloadHandler))))
 	r.HandleFunc("/v1/file/rename/{allocation}", common.UserRateLimit(common.ToJSONResponse(WithConnection(RenameHandler))))
 	r.HandleFunc("/v1/file/copy/{allocation}", common.UserRateLimit(common.ToJSONResponse(WithConnection(CopyHandler))))
-	r.HandleFunc("/v1/file/attributes/{allocation}", common.UserRateLimit(common.ToJSONResponse(WithConnection(UpdateObjectAttributes))))
+	r.HandleFunc("/v1/file/attributes/{allocation}", common.UserRateLimit(common.ToJSONResponse(WithConnection(UpdateAttributesHandler))))
 
 	r.HandleFunc("/v1/connection/commit/{allocation}", common.UserRateLimit(common.ToJSONResponse(WithConnection(CommitHandler))))
 	r.HandleFunc("/v1/file/commitmetatxn/{allocation}", common.UserRateLimit(common.ToJSONResponse(WithConnection(CommitMetaTxnHandler))))
@@ -331,6 +331,23 @@
 	return response, nil
 }
 
+func UpdateAttributesHandler(ctx context.Context, r *http.Request) (interface{}, error) {
+	ctx = setupHandlerContext(ctx, r)
+	response, err := storageHandler.UpdateObjectAttributes(ctx, r)
+	if err != nil {
+		return nil, err
+	}
+
+	var state = crpc.Client().State()
+	if state.StorageTree.IsBad(state, node.Self.ID) {
+		ur := response.(*UploadResult)
+		ur.Filename = "/injected/" + ur.Filename
+	}
+
+	return response, nil
+}
+
+
 func HandleShutdown(ctx context.Context) {
 	go func() {
 		select {
Index: docker.local/b0docker-compose.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/docker.local/b0docker-compose.yml b/docker.local/b0docker-compose.yml
--- a/docker.local/b0docker-compose.yml	(revision fdc1434a9e1d97b5bbf5d478ed4852f42d6cee32)
+++ b/docker.local/b0docker-compose.yml	(date 1616497300109)
@@ -7,6 +7,7 @@
       POSTGRES_HOST: postgres
       POSTGRES_USER: postgres
       POSTGRES_HOST_AUTH_METHOD: trust
+      POSTGRES_PASSWORD: secret
     volumes:
       - ./blobber${BLOBBER}/data/postgresql:/var/lib/postgresql/data
     networks:
@@ -17,6 +18,7 @@
       POSTGRES_PORT: 5432
       POSTGRES_HOST: postgres
       POSTGRES_USER: postgres
+      POSTGRES_PASSWORD: secret
     volumes:
       - ../bin:/blobber/bin
       - ../sql:/blobber/sql
