version: '3'
services:
  cassandra:
    image: cassandra:3.11.4
    networks:
      default:
    #ports:
    #- "9042:9042"
    volumes:
    - ../sharder${SHARDER}/data/cassandra:/var/lib/cassandra/data

  cassandra-init:
    image: cassandra:latest
    volumes:
      - ../../bin:/0chain/bin
      - ../../sql:/0chain/sql
    command: bash /0chain/bin/cassandra-init.sh
    links:
      - cassandra:cassandra
    restart: on-failure

  postgres:
    image: postgres:14
    environment:
      POSTGRES_PORT: 5432
      POSTGRES_HOST: postgres
      POSTGRES_USER: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - ../config/postgresql.conf:/etc/postgresql/postgresql.conf
      - ../sharder${SHARDER}/data/postgresql:/var/lib/postgresql/data
      - ../sql_script/:/docker-entrypoint-initdb.d/
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    networks:
      default:
  
  postgres-post:
    image: postgres:14
    environment:
      POSTGRES_PORT: 5432
      POSTGRES_HOST: postgres
      POSTGRES_USER: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - ../bin:/0chain/bin
      - ../sql:/0chain/sql
      - ../sql_script/:/docker-entrypoint-initdb.d/
    links:
      - postgres:postgres
  
  sharder:
    image: 0chaindev/sharder:staging
    environment:
      - POSTGRES_HOST=postgres
      - DOCKER=true
      - CASSANDRA_CLUSTER=cassandra
    depends_on:
      - cassandra-init
    links:
      - cassandra-init:cassandra-init
    volumes:
      - ../config:/0chain/config
      - ../sharder${SHARDER}/log:/0chain/log
      - ../sharder${SHARDER}/data:/0chain/data
    ports:
      - "717${SHARDER}:717${SHARDER}"
    networks:
      default:
      testnet0:
        ipv4_address: 198.18.0.8${SHARDER}
    command: ./bin/sharder --deployment_mode 0 --keys_file config/b0snode${SHARDER}_keys.txt --minio_file config/minio_config.txt

networks:
  default:
    driver: bridge
  testnet0:
    external: true

volumes:
  data:
  config:
  bin:
