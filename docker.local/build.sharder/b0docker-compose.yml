version: '3'
services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_PORT: 5432
      POSTGRES_HOST: postgres
      POSTGRES_USER: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - ../sharder${SHARDER}/data/postgresql:/var/lib/postgresql/data
      - ../sql_script/:/docker-entrypoint-initdb.d/
    networks:
      default:
  kafka:
    image: 'bitnami/kafka:latest'
    networks:
      default:
      testnet0:
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
  sharder:
    image: "sharder"
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '0.5'
    #       memory: 500M
    #     reservations:
    #       cpus: '0.1'
    #       memory: 100M
    environment:
      - DOCKER=true
    volumes:
      - ../config:/0chain/config
      - ../sharder${SHARDER}/log:/0chain/log
      - ../sharder${SHARDER}/data:/0chain/data
      - ../sharder${SHARDER}/data/blocks:/0chain/data/blocks
    ports:
      - "717${SHARDER}:717${SHARDER}"
    depends_on:
      - kafka
    networks:
      default:
      testnet0:
        ipv4_address: 198.18.0.8${SHARDER}
    command: ./bin/sharder --deployment_mode 0 --keys_file config${KEYS_CONFIG_PATH}/b0snode${SHARDER}_keys.txt ${CLI_ARGS}

networks:
  default:
    driver: bridge
  testnet0:
    external: true

volumes:
  data:
  config:
  bin:
