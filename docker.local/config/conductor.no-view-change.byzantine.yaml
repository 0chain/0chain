enable:
  - "attack round transfer"
  - "resend past messages"
  - "restart"
  - "attack fetching"
sets:
  - name: "attack round transfer"
    tests:
      - "not notarised block extension"
      - "send different blocks from first generator"
      - "send different blocks from all generators"
      - "breaking single block"
      - "send insufficient proposals"
      - "verifying non existent block"
      - "notarising non existent block"
  - name: "resend past messages"
    tests:
      - "resend proposed block"
      - "resend notarisation"
  - name: "restart"
    tests:
      - "bad timeout VRF share"
      - "half nodes down"
  - name: "attack fetching"
    tests:
      - "attack BlockStateChangeRequestor: neither node reply"
      - "attack BlockStateChangeRequestor: only one node replies"
      - "attack BlockStateChangeRequestor: one node sends state change with changed mpt node"
      - "attack BlockStateChangeRequestor: one node sends state change with deleted mpt node"
      - "attack BlockStateChangeRequestor: one node sends state change with added mpt node"
      - "attack BlockStateChangeRequestor: one node sends partial state from another block"
      - "attack MinerNotarisedBlockRequestor: neither node reply"
      - "attack MinerNotarisedBlockRequestor: only one node replies"
      - "attack MinerNotarisedBlockRequestor: only one node sends valid block (with changed hash)"
      - "attack MinerNotarisedBlockRequestor: only one node sends invalid block (with changed hash)"
      - "attack MinerNotarisedBlockRequestor: only one node sends block without verification tickets"

tests:
  - name: "not notarised block extension"
    flow:
      - set_monitor: "miner-1"
      - cleanup_bc: { }
      - start_lock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - configure_not_notarised_block_extension_test_case:
          test_report:
            round: 50
            by_generator: false
            by_node_with_type_rank: 0
      - unlock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - wait_round:
          round: 70
          allow_beyond: true
      - make_test_case_check:
          wait_time: 5m
      - save_logs: {}

  - name: "send different blocks from first generator"
    flow:
      - set_monitor: "miner-1"
      - cleanup_bc: { }
      - start_lock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - configure_send_different_blocks_from_first_generator_test_case:
          test_report:
            round: 50
      - unlock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - wait_round:
          round: 70
          allow_beyond: true
      - make_test_case_check:
          wait_time: 5m
      - save_logs: { }

  - name: "send different blocks from all generators"
    flow:
      - set_monitor: "miner-1"
      - cleanup_bc: { }
      - start_lock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - configure_send_different_blocks_from_all_generators_test_case:
          test_report:
            round: 50
      - unlock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - wait_round:
          round: 70
          allow_beyond: true
      - make_test_case_check:
          wait_time: 5m
      - save_logs: { }

  - name: "breaking single block"
    flow:
      - set_monitor: "miner-1"
      - cleanup_bc: { }
      - start_lock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - configure_breaking_single_block:
          test_report:
            round: 50
            by_generator: false
            by_node_with_type_rank: 0
      - unlock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - wait_round:
          round: 70
          allow_beyond: true
      - make_test_case_check:
          wait_time: 5m
      - save_logs: { }

  - name: "send insufficient proposals"
    flow:
      - set_monitor: "miner-1"
      - cleanup_bc: { }
      - start_lock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - configure_send_insufficient_proposals_test_case:
          test_report:
            round: 50
            by_generator: false
            by_node_with_type_rank: 0
      - unlock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - wait_round:
          round: 70
          allow_beyond: true
      - make_test_case_check:
          wait_time: 5m
      - save_logs: { }

  - name: "verifying non existent block"
    flow:
      - set_monitor: "miner-1"
      - cleanup_bc: {}
      - start_lock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2"]
      - configure_verifying_non_existent_block_test_case:
          test_report:
            round: 50
          hash: "d0cab02dd0f094eaa2d136fa335d4fbb7858832caebc416982187b2c9b58cecc"
      - unlock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2"]
      - wait_round:
          round: 70
          allow_beyond: true
      - make_test_case_check:
          wait_time: 5m
      - save_logs: { }

  - name: "notarising non existent block"
    flow:
      - set_monitor: "miner-1"
      - cleanup_bc: { }
      - start_lock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - configure_notarising_non_existent_block_test_case:
          test_report:
            round: 50
            by_generator: false
            by_node_with_type_rank: 1
          hash: "d0cab02dd0f094eaa2d136fa335d4fbb7858832caebc416982187b2c9b58cecc"
      - unlock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - wait_round:
          round: 70
          allow_beyond: true
      - make_test_case_check:
          wait_time: 5m
      - save_logs: { }

  - name: "resend proposed block"
    flow:
      - set_monitor: "miner-1"
      - cleanup_bc: { }
      - start_lock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - configure_resend_proposed_block_test_case:
          test_report:
            round: 50
            by_generator: true
            by_node_with_type_rank: 1
      - unlock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - wait_round:
          round: 70
          allow_beyond: true
      - make_test_case_check:
          wait_time: 5m
      - save_logs: { }

  - name: "resend notarisation"
    flow:
      - set_monitor: "miner-1"
      - cleanup_bc: { }
      - start_lock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - configure_resend_notarisation_test_case:
          test_report:
            round: 50
            by_generator: false
            by_node_with_type_rank: 0
      - unlock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - wait_round:
          round: 70
          allow_beyond: true
      - make_test_case_check:
          wait_time: 5m
      - save_logs: { }

  - name: "bad timeout VRF share"
    flow:
      - set_monitor: "miner-1"
      - cleanup_bc: { }
      - start_lock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - configure_bad_timeout_vrfs_test_case:
          test_report:
            round: 50
            by_generator: false
            by_node_with_type_rank: 0
      - unlock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - wait_round:
          round: 70
          allow_beyond: true
      - make_test_case_check:
          wait_time: 5m
          allow_beyond: true
      - save_logs: { }

  - name: "half nodes down"
    flow:
      - set_monitor: "miner-1"
      - cleanup_bc: { }
      - start_lock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - configure_half_nodes_down_test_case:
          test_report:
            round: 50
      - unlock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - make_test_case_check:
          wait_time: 5m
      - save_logs: { }

  - name: "attack BlockStateChangeRequestor: neither node reply"
    flow:
      - set_monitor: "miner-1"
      - cleanup_bc: {}
      - start_lock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2"]
      - configure_block_state_change_requestor_test_case:
          test_report:
            round: 50
            by_generator: true
            by_node_with_type_rank: 0

          ignoring_requests_by:
            miners:
              # Generator0
              - generator: true
                type_rank: 0

              # Generator1
              - generator: true
                type_rank: 1

              # Replica1
              - generator: false
                type_rank: 1

            sharders:
              - "sharder-1"
              - "sharder-2"

      - unlock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2"]
      - wait_round:
          round: 70
          allow_beyond: true
      - make_test_case_check:
          wait_time: 5m
      - save_logs: { }

  - name: "attack BlockStateChangeRequestor: only one node replies"
    flow:
      - set_monitor: "miner-1"
      - cleanup_bc: {}
      - start_lock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2"]
      - configure_block_state_change_requestor_test_case:
          test_report:
            round: 50
            by_generator: false
            by_node_with_type_rank: 0

          ignoring_requests_by:
            miners:
              # Generator1
              - generator: true
                type_rank: 1

              # Replica1
              - generator: false
                type_rank: 1

            sharders:
              - "sharder-1"
              - "sharder-2"

          correct_response_by:
            miners:
              # Generator0
              - generator: true
                type_rank: 0

      - unlock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2"]
      - wait_round:
          round: 70
          allow_beyond: true
      - make_test_case_check:
          wait_time: 5m
      - save_logs: { }

  - name: "attack BlockStateChangeRequestor: one node sends state change with changed mpt node"
    flow:
        - set_monitor: "miner-1"
        - cleanup_bc: { }
        - start_lock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
        - configure_block_state_change_requestor_test_case:
            test_report:
              round: 50
              by_generator: false
              by_node_with_type_rank: 0

            ignoring_requests_by:
              miners:
                # Generator1
                - generator: true
                  type_rank: 1

                # Replica1
                - generator: false
                  type_rank: 1

              sharders:
                - "sharder-1"
                - "sharder-2"

            changed_mpt_node_by:
              miners:
                # Generator0
                - generator: true
                  type_rank: 0

        - unlock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
        - wait_round:
            round: 70
            allow_beyond: true
        - make_test_case_check:
            wait_time: 5m
        - save_logs: { }

  - name: "attack BlockStateChangeRequestor: one node sends state change with deleted mpt node"
    flow:
      - set_monitor: "miner-1"
      - cleanup_bc: { }
      - start_lock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - configure_block_state_change_requestor_test_case:
          test_report:
            round: 50
            by_generator: false
            by_node_with_type_rank: 0

          ignoring_requests_by:
            miners:
              # Generator1
              - generator: true
                type_rank: 1

              # Replica1
              - generator: false
                type_rank: 1

            sharders:
              - "sharder-1"
              - "sharder-2"

          deleted_mpt_node_by:
            miners:
              # Generator0
              - generator: true
                type_rank: 0

      - unlock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - wait_round:
          round: 70
          allow_beyond: true
      - make_test_case_check:
          wait_time: 5m
      - save_logs: { }

  - name: "attack BlockStateChangeRequestor: one node sends state change with added mpt node"
    flow:
      - set_monitor: "miner-1"
      - cleanup_bc: { }
      - start_lock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - configure_block_state_change_requestor_test_case:
          test_report:
            round: 50
            by_generator: false
            by_node_with_type_rank: 0

          ignoring_requests_by:
            miners:
              # Generator1
              - generator: true
                type_rank: 1

              # Replica1
              - generator: false
                type_rank: 1

            sharders:
              - "sharder-1"
              - "sharder-2"

          added_mpt_node_by:
            miners:
              # Generator0
              - generator: true
                type_rank: 0

      - unlock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - wait_round:
          round: 70
          allow_beyond: true
      - make_test_case_check:
          wait_time: 5m
      - save_logs: { }

  - name: "attack BlockStateChangeRequestor: one node sends partial state from another block"
    flow:
      - set_monitor: "miner-1"
      - cleanup_bc: { }
      - start_lock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - configure_block_state_change_requestor_test_case:
          test_report:
            round: 50
            by_generator: false
            by_node_with_type_rank: 0

          ignoring_requests_by:
            miners:
              # Generator1
              - generator: true
                type_rank: 1

              # Replica1
              - generator: false
                type_rank: 1

            sharders:
              - "sharder-1"
              - "sharder-2"

          partial_state_from_another_block_by:
            miners:
              # Generator0
              - generator: true
                type_rank: 0

      - unlock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - wait_round:
          round: 70
          allow_beyond: true
      - make_test_case_check:
          wait_time: 5m
      - save_logs: { }

  - name: "attack MinerNotarisedBlockRequestor: neither node reply"
    flow:
      - set_monitor: "miner-1"
      - cleanup_bc: {}
      - start_lock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2"]
      - configure_miner_notarised_block_requestor_test_case:
          test_report:
            round: 50
            by_generator: true
            by_node_with_type_rank: 0

          ignoring_requests_by:
            miners:
              # Generator0
              - generator: true
                type_rank: 0

              # Generator1
              - generator: true
                type_rank: 1

              # Replica1
              - generator: false
                type_rank: 1

            sharders:
              - "sharder-1"
              - "sharder-2"

      - unlock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2"]
      - wait_round:
          round: 70
          allow_beyond: true
      - make_test_case_check:
          wait_time: 5m
      - save_logs: { }

  - name: "attack MinerNotarisedBlockRequestor: only one node replies"
    flow:
      - set_monitor: "miner-1"
      - cleanup_bc: {}
      - start_lock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2"]
      - configure_miner_notarised_block_requestor_test_case:
          test_report:
            round: 50
            by_generator: false
            by_node_with_type_rank: 0

          ignoring_requests_by:
            miners:
              # Generator1
              - generator: true
                type_rank: 1

              # Replica1
              - generator: false
                type_rank: 1

            sharders:
              - "sharder-1"
              - "sharder-2"

          correct_response_by:
            miners:
              # Generator0
              - generator: true
                type_rank: 0
      - unlock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - wait_round:
          round: 70
          allow_beyond: true
      - make_test_case_check:
          wait_time: 5m
      - save_logs: { }

  - name: "attack MinerNotarisedBlockRequestor: only one node sends valid block (with changed hash)"
    flow:
      - set_monitor: "miner-1"
      - cleanup_bc: {}
      - start_lock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2"]
      - configure_miner_notarised_block_requestor_test_case:
          test_report:
            round: 50
            by_generator: false
            by_node_with_type_rank: 0

          ignoring_requests_by:
            miners:
              # Generator1
              - generator: true
                type_rank: 1

              # Replica1
              - generator: false
                type_rank: 1

            sharders:
              - "sharder-1"
              - "sharder-2"

          # Valid block should be sent by Generator0, because block with changed hash must be resigned for validity
          valid_block_with_changed_hash_by:
            miners:
              # Generator0
              - generator: true
                type_rank: 0
      - unlock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - wait_round:
          round: 70
          allow_beyond: true
      - make_test_case_check:
          wait_time: 5m
      - save_logs: { }

  - name: "attack MinerNotarisedBlockRequestor: only one node sends invalid block (with changed hash)"
    flow:
      - set_monitor: "miner-1"
      - cleanup_bc: {}
      - start_lock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2"]
      - configure_miner_notarised_block_requestor_test_case:
          test_report:
            round: 50
            by_generator: false
            by_node_with_type_rank: 0

          ignoring_requests_by:
            miners:
              # Generator1
              - generator: true
                type_rank: 1

              # Replica1
              - generator: false
                type_rank: 1

            sharders:
              - "sharder-1"
              - "sharder-2"

          invalid_block_with_changed_hash_by:
            miners:
              # Generator0
              - generator: true
                type_rank: 0
      - unlock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - wait_round:
          round: 70
          allow_beyond: true
      - make_test_case_check:
          wait_time: 5m
      - save_logs: { }

  - name: "attack MinerNotarisedBlockRequestor: only one node sends block without verification tickets"
    flow:
      - set_monitor: "miner-1"
      - cleanup_bc: {}
      - start_lock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2"]
      - configure_miner_notarised_block_requestor_test_case:
          test_report:
            round: 50
            by_generator: false
            by_node_with_type_rank: 0

          ignoring_requests_by:
            miners:
              # Generator1
              - generator: true
                type_rank: 1

              # Replica1
              - generator: false
                type_rank: 1

            sharders:
              - "sharder-1"
              - "sharder-2"

          block_without_ver_tickets_by:
            miners:
              # Generator0
              - generator: true
                type_rank: 0
      - unlock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - wait_round:
          round: 70
          allow_beyond: true
      - make_test_case_check:
          wait_time: 5m
      - save_logs: { }