enable:
  - "attack round transfer"
  - "resend past messages"
  - "restart"
  - "attack fetching"
sets:
  - name: "attack round transfer"
    tests:
      - "not notarised block extension"
      - "send different blocks from first generator"
      - "send different blocks from all generators"
      - "breaking single block"
      - "send insufficient proposals"
      - "verifying non existent block"
      - "notarising non existent block"
  - name: "resend past messages"
    tests:
      - "resend proposed block"
      - "resend notarisation"
  - name: "restart"
    tests:
      - "bad timeout VRF share"
      - "half nodes down"
  - name: "attack fetching"
    tests:
      - "attack BlockStateChangeRequestor: neither node reply"
      - "attack BlockStateChangeRequestor: only one node replies"

tests:
  - name: "not notarised block extension"
    flow:
      - set_monitor: "miner-1"
      - cleanup_bc: { }
      - start: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - configure_not_notarised_block_extension_test_case:
          test_report:
            round: 30
            by_generator: false
            by_node_with_type_rank: 0
      - make_test_case_check:
          wait_time: 5m

  - name: "send different blocks from first generator"
    flow:
      - cleanup_bc: { }
      - start: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - configure_send_different_blocks_from_first_generator_test_case:
          test_report:
            round: 30
      - make_test_case_check:
          wait_time: 5m

  - name: "send different blocks from all generators"
    flow:
      - cleanup_bc: { }
      - start: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - configure_send_different_blocks_from_all_generators_test_case:
          test_report:
            round: 30
      - make_test_case_check:
          wait_time: 5m

  - name: "breaking single block"
    flow:
      - cleanup_bc: { }
      - start: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - configure_breaking_single_block:
          test_report:
            round: 30
            by_generator: false
            by_node_with_type_rank: 0
      - make_test_case_check:
          wait_time: 5m

  - name: "send insufficient proposals"
    flow:
      - cleanup_bc: { }
      - start: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - configure_send_insufficient_proposals_test_case:
          test_report:
            round: 30
            by_generator: false
            by_node_with_type_rank: 0
      - make_test_case_check:
          wait_time: 5m

  - name: "verifying non existent block"
    flow:
      - set_monitor: "miner-1"
      - cleanup_bc: {}
      - start_lock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2"]
      - configure_verifying_non_existent_block_test_case:
          test_report:
            round: 30
          hash: "d0cab02dd0f094eaa2d136fa335d4fbb7858832caebc416982187b2c9b58cecc"
      - unlock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2"]
      - wait_round:
          round: 50
      - make_test_case_check:
          wait_time: 5m

  - name: "notarising non existent block"
    flow:
      - set_monitor: "sharder-1"
      - cleanup_bc: { }
      - start_lock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - configure_notarising_non_existent_block_test_case:
          test_report:
            round: 30
            by_generator: false
            by_node_with_type_rank: 1
          hash: "d0cab02dd0f094eaa2d136fa335d4fbb7858832caebc416982187b2c9b58cecc"
      - unlock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - wait_round:
          round: 50
      - make_test_case_check:
          wait_time: 5m

  - name: "resend proposed block"
    flow:
      - set_monitor: "sharder-1"
      - cleanup_bc: { }
      - start: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - configure_resend_proposed_block_test_case:
          test_report:
            round: 30
            by_generator: true
            by_node_with_type_rank: 1
      - make_test_case_check:
          wait_time: 5m

  - name: "resend notarisation"
    flow:
      - set_monitor: "sharder-1"
      - cleanup_bc: { }
      - start: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - configure_resend_notarisation_test_case:
          test_report:
            round: 30
            by_generator: false
            by_node_with_type_rank: 0
      - make_test_case_check:
          wait_time: 5m

  - name: "bad timeout VRF share"
    flow:
      - set_monitor: "miner-1"
      - cleanup_bc: { }
      - start_lock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - configure_bad_timeout_vrfs_test_case:
          test_report:
            round: 30
            by_generator: false
            by_node_with_type_rank: 0
      - unlock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - wait_round:
          round: 50
      - make_test_case_check:
          wait_time: 5m

  - name: "half nodes down"
    flow:
      - set_monitor: "sharder-1"
      - cleanup_bc: { }
      - start: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2" ]
      - configure_half_nodes_down_test_case:
          test_report:
            round: 30
      - make_test_case_check:
          wait_time: 5m

  - name: "attack BlockStateChangeRequestor: neither node reply"
    flow:
      - set_monitor: "miner-1"
      - cleanup_bc: {}
      - start_lock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2"]
      - configure_block_state_change_requestor_test_case:
          test_report:
            round: 30
            by_generator: true
            by_node_with_type_rank: 0

          ignoring_requests_by:
            miners:
              # Generator0
              - generator: true
                type_rank: 0

              # Generator1
              - generator: true
                type_rank: 1

              # Replica1
              - generator: false
                type_rank: 1

            sharders:
              - "sharder-1"
              - "sharder-2"

      - unlock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2"]
      - wait_round:
          round: 50
      - make_test_case_check:
          wait_time: 5m


  - name: "attack BlockStateChangeRequestor: only one node replies"
    flow:
      - set_monitor: "miner-1"
      - cleanup_bc: {}
      - start_lock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2"]
      - configure_block_state_change_requestor_test_case:
          test_report:
            round: 30
            by_generator: false
            by_node_with_type_rank: 0

          ignoring_requests_by:
            miners:
              # Generator1
              - generator: true
                type_rank: 1

              # Replica0
              - generator: false
                type_rank: 1

            sharders:
              - "sharder-1"
              - "sharder-2"

          correct_response_by:
            miners:
              # Generator0
              - generator: true
                type_rank: 0

      - unlock: [ "miner-1", "miner-2", "miner-3", "miner-4", "sharder-1", "sharder-2"]
      - wait_round:
          round: 50
      - make_test_case_check:
          wait_time: 5m

####
#### Blockchain miners Byzantine tests
####
#
#---
## enabled test cases sets
#enable:
#  - "VRF"
#  - "Round timeout"
#  - "Verification tickets"
#  - "Bad block"
#  - "Notarized block"
#  - "Double spend transaction"
#
## sets of test cases
#sets:
#  - name: "VRF"
#    tests:
#      - "Send bad VRFS to everyone"
#      - "Send VRFS only to group"
#      - "Send only the group the correct VRFS (bad VRFS for everyone else)"
#      - "Send no VRFS"
#  - name: "Round timeout"
#    tests:
#      - "Don't send a round timeout"
#      - "Send timeouts only to group"
#      - "Send wrong timeout to everyone"
#      - "Send correct timeout only to group"
#  - name: "Verification tickets"
#    tests:
#      - "Send no tickets to slow down or stall the chain"
#      - "Group send no tickets to slow down or stall the chain"
#      - "Send bad verification ticket with wrong key"
#      - "Send bad verification ticket with wrong hash"
#  - name: "Bad block"
#    tests:
#      - "Create competing block when not a generator"
#      - "Group only signs the competing blocks"
#      - "Send a transaction from an earlier block to create a double spend"
#      - "Sign a different hash than the block hash"
#      - "Use a different private key to sign the block"
#      - "Hash the block incorrectly"
#  - name: "Double spend transaction"
#    tests:
#      - "Double spend transaction: 1/3"
#      - "Double spend transaction: 2/3"
#      - "Double spend transaction: 3/3"
#
##
## test cases
##
#tests:
#  # VRF
#  - name: "Send bad VRFS to everyone"
#    flow:
#      - set_monitor: "sharder-1"
#      - cleanup_bc: {}
#      - start: ["sharder-1"]
#      - start: ["miner-1", "miner-2", "miner-3"]
#      - wait_round:
#          round: 10
#      - vrfs:
#          by: ["miner-3"]
#          good: []
#          bad: ["miner-1", "miner-2"]
#      - wait_round:
#          shift: 10
#          timeout: "3m"
#          must_fail: true
#  - name: "Send VRFS only to group"
#    flow:
#      - set_monitor: "sharder-1"
#      - cleanup_bc: {}
#      - start: ["sharder-1"]
#      - start: ["miner-1", "miner-2", "miner-3", "miner-4"]
#      - wait_round:
#          round: 10
#      - vrfs:
#          by: ["miner-4"]
#          good: ["miner-1", "miner-2"]
#          bad: []
#      - wait_round: # it keeps moving because 1, 2 and 3 still OK (consensus)
#          round: 20
#  - name: "Send only the group the correct VRFS (bad VRFS for everyone else)"
#    flow:
#      - set_monitor: "sharder-1"
#      - cleanup_bc: {}
#      - start: ["sharder-1"]
#      - start: ["miner-1", "miner-2", "miner-3", "miner-4"]
#      - wait_round:
#          round: 10
#      - vrfs:
#          by: ["miner-4"]
#          good: ["miner-1", "miner-2"]
#          bad: ["miner-3"]
#      - wait_round: # it keeps moving because 1, 2 and 3 still OK (consensus)
#          round: 20
#  - name: "Send no vrfs"
#    flow:
#      - set_monitor: "sharder-1"
#      - cleanup_bc: {}
#      - start: ["sharder-1"]
#      - start: ["miner-1", "miner-2", "miner-3"]
#      - wait_round:
#          round: 10
#      - vrfs:
#          by: ["miner-3"]
#          good: []
#          bad: []
#      - wait_round:
#          shift: 10
#          timeout: "3m"
#          must_fail: true
#
#  # Round timeout
#  - name: "Don't send a round timeout"
#    flow:
#      - set_monitor: "sharder-1"
#      - cleanup_bc: {}
#      - start: ["sharder-1"]
#      - start: ["miner-1", "miner-2", "miner-3"]
#      - wait_round:
#          round: 10
#      - round_timeout:
#          by: ["miner-3"]
#          good: []
#          bad: []
#      - wait_no_progress:
#          timeout: "2m"
#  - name: "Send timeouts only to group"
#    flow:
#      - set_monitor: "sharder-1"
#      - cleanup_bc: {}
#      - start: ["sharder-1"]
#      - start: ["miner-1", "miner-2", "miner-3", "miner-4"]
#      - wait_round:
#          round: 10
#      - round_timeout:
#          by: ["miner-4"]
#          good: ["miner-1", "miner-2"]
#          bad: []
#      - wait_round: # it keeps moving because 1, 2 and 3 still OK (consensus)
#          round: 20
#  - name: "Send wrong timeout to everyone"
#    flow:
#      - set_monitor: "sharder-1"
#      - cleanup_bc: {}
#      - start: ["sharder-1"]
#      - start: ["miner-1", "miner-2", "miner-3"]
#      - wait_round:
#          round: 10
#      - round_timeout:
#          by: ["miner-3"]
#          good: []
#          bad: ["miner-1", "miner-2"]
#      - wait_no_progress:
#          timeout: "2m"
#  - name: "Send correct timeout only to group"
#    flow:
#      - set_monitor: "sharder-1"
#      - cleanup_bc: {}
#      - start: ["sharder-1"]
#      - start: ["miner-1", "miner-2", "miner-3", "miner-4"]
#      - wait_round:
#          round: 10
#      - round_timeout:
#          by: ["miner-4"]
#          good: ["miner-1", "miner-2"]
#          bad: []
#      - wait_round: # it keeps moving because 1, 2 and 3 still OK (consensus)
#          round: 20
#
#  - name: "Send no tickets to slow down or stall the chain"
#    flow:
#      - set_monitor: "sharder-1"
#      - cleanup_bc: {}
#      - start: ["sharder-1"]
#      - start: ["miner-1", "miner-2", "miner-3"]
#      - wait_round:
#          round: 10
#      - wrong_verification_ticket_hash:
#          by: ["miner-3"]
#          good: [] # no tickets
#          bad: [] # no bad tickets
#      - wait_round:
#          round: 20 # it keeps going
#  - name: "Group send no tickets to slow down or stall the chain"
#    flow:
#      - set_monitor: "sharder-1"
#      - cleanup_bc: {}
#      - start: ["sharder-1"]
#      - start: ["miner-1", "miner-2", "miner-3", "miner-4"]
#      - wait_round:
#          round: 10
#      - wrong_verification_ticket_hash:
#          by: ["miner-2", "miner-3", "miner-4"]
#          good: [] # no tickets
#          bad: [] # no bad tickets
#      - wait_no_progress:
#          timeout: "30s" # setting greater waiting time will cause eventual notarization via a different route
#  - name: "Send bad verification ticket with wrong key"
#    flow:
#      - set_monitor: "sharder-1"
#      - cleanup_bc: {}
#      - start: ["sharder-1"]
#      - start: ["miner-1", "miner-2", "miner-3"]
#      - wait_round:
#          round: 10
#      - wrong_verification_ticket_key:
#          by: ["miner-3"]
#          good: []
#          bad: ["miner-1", "miner-2"]
#      - wait_round:
#          round: 20 # it keeps going
#          timeout: "15s" # fast
#  - name: "Send bad verification ticket with wrong hash"
#    flow:
#      - set_monitor: "sharder-1"
#      - cleanup_bc: {}
#      - start: ["sharder-1"]
#      - start: ["miner-1", "miner-2", "miner-3"]
#      - wait_round:
#          round: 10
#      - wrong_verification_ticket_hash:
#          by: ["miner-3"]
#          good: []
#          bad: ["miner-1", "miner-2"]
#      - wait_round:
#          round: 20 # it keeps going
#          timeout: "15s" # fast
#
#  # Bad block
#  - name: "Create competing block when not a generator"
#    flow:
#      - set_monitor: "sharder-1"
#      - cleanup_bc: {}
#      - start: ["sharder-1"]
#      - start: ["miner-1", "miner-2", "miner-3"]
#      - wait_round:
#          round: 10
#      - competing_block:
#          by: ["miner-3"]
#      - wait_round:
#          round: 20 # it keeps going
#  - name: "Group only signs the competing blocks"
#    flow:
#      - set_monitor: "sharder-1"
#      - cleanup_bc: {}
#      - start: ["sharder-1"]
#      - start: ["miner-1", "miner-2", "miner-3", "miner-4"]
#      - competing_block:
#          by: ["miner-3"]
#      - sign_only_competing_blocks:
#          by: ["miner-3", "miner-4"]
#      - wait_round:
#          shift: 10
#          must_fail: true
#          timeout: "3m"
#
#  - name: "Sign a different hash than the block hash"
#    flow:
#      - set_monitor: "sharder-1"
#      - cleanup_bc: {}
#      - start: ["sharder-1"]
#      - start: ["miner-1", "miner-2", "miner-3"]
#      - wait_round:
#          round: 10
#      - wrong_block_sign_hash:
#          by: ["miner-3"]
#      - wait_round:
#          round: 20 # it keeps going
#          timeout: "5m"
#  - name: "Use a different private key to sign the block"
#    flow:
#      - set_monitor: "sharder-1"
#      - cleanup_bc: {}
#      - start: ["sharder-1"]
#      - start: ["miner-1", "miner-2", "miner-3"]
#      - wait_round:
#          round: 10
#      - wrong_block_sign_key:
#          by: ["miner-3"]
#      - wait_round:
#          round: 20 # it keeps going
#          timeout: "5m"
#  - name: "Hash the block incorrectly"
#    flow:
#      - set_monitor: "sharder-1"
#      - cleanup_bc: {}
#      - start: ["sharder-1"]
#      - start: ["miner-1", "miner-2", "miner-3"]
#      - wait_round:
#          round: 10
#      - wrong_block_hash:
#          by: ["miner-3"]
#      - wait_round:
#          round: 20 # it keeps going
#          timeout: "5m"
#
#  # Double spend transaction
#
#  - name: "Double spend transaction: 1/3"
#    flow:
#      - set_monitor: "sharder-1"
#      - cleanup_bc: {}
#      - start: ["sharder-1"]
#      - start: ["miner-1", "miner-2", "miner-3"]
#      - wait_round:
#          round: 100
#          timeout: "5m"
#      - double_spend_transaction:
#          by: ["miner-3"]
#      - wait_round:
#          round: 120
#
#  - name: "Double spend transaction: 2/3"
#    flow:
#      - set_monitor: "sharder-1"
#      - cleanup_bc: {}
#      - start: ["sharder-1"]
#      - start: ["miner-1", "miner-2", "miner-3"]
#      - wait_round:
#          round: 100
#          timeout: "5m"
#      - double_spend_transaction:
#          by: ["miner-2", "miner-3"]
#      - wait_round:
#          round: 110
#          timeout: "5m" # can be very slow, but with progress
#
#  - name: "Double spend transaction: 3/3"
#    flow:
#      - set_monitor: "sharder-1"
#      - cleanup_bc: {}
#      - start: ["sharder-1"]
#      - start: ["miner-1", "miner-2", "miner-3"]
#      - wait_round:
#          round: 100
#          timeout: "5m"
#      - double_spend_transaction:
#          by: ["miner-1", "miner-2", "miner-3"]
#      - wait_round:
#          round: 110
#          timeout: "5m" # moves very slow, but moves
#
