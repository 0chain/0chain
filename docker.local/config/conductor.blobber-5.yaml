# enabled test cases sets
enable:
  - "Minority Cases"

# sets of test cases
sets:
  - name: "Minority Cases"
    tests:
      - "Allocation state should be same after rollback"
      - "Allocation state should be same after repair"
      - "Rollback tokenomics"

# test cases
tests:
  - name: "Rollback tokenomics"
    flow:
      - set_monitor: "sharder-1"
      - cleanup_bc: { }
      - command:
          name: "cleanup_blobbers"
      - command:
          name: "cleanup_0dns"
      - start: [ 'sharder-1', 'miner-1', 'miner-2', 'miner-3' ]
      - wait_round:
          round: 15 # just wait the BC starts
      - start: [ '0dns' ]
      # wait the 0dns starts
      - sleep: "20s"
      - wait_add:
          blobbers: [ 'blobber-1', 'blobber-2', 'blobber-3' ]
          validators: [ 'validator-1', 'validator-2', 'validator-3' ]
          timeout: '15m'
          start: true
      # setup blobbers and create allocation with minimum write pool lock
      - command:
          name: 'init_allocation_only'
          params:
            data_shards: "2"
            parity_shards: "1"
      - sleep: "1m"
      - store_allocations_data: { }
      - fail_upload_commit: ['blobber-3']
      - command:
          name: "upload_can_fail"
          params:
            remotepath: /remote/upload.bin
      - sleep: "3m" # simple wait for blobbers to pick up state
      - check_rollback_tokenomics: { }
      - disable_fail_upload_commit: ['blobber-3']

  - name: "Allocation state should be same after rollback"
    flow:
      - set_monitor: "sharder-1"
      - cleanup_bc: {}
      - command:
          name: "cleanup_blobbers"
      - command:
          name: "cleanup_0dns"
      - start: ['sharder-1', 'miner-1', 'miner-2', 'miner-3']
      - wait_round:
          round: 15 # just wait the BC starts
      - start: ['0dns']
      # wait the 0dns starts
      - sleep: "20s"
      - wait_add:
          blobbers: ['blobber-1', 'blobber-2', 'blobber-3']
          validators: ['validator-1', 'validator-2', 'validator-3']
          timeout: '15m'
          start: true
      # setup blobbers and create allocation with minimum write pool lock
      - command:
          name: 'init_allocation_only'
      - command:
          name: "upload"
          params:
            remotepath: /remote/upload.bin
      - command:
          name: "upload"
          params:
            remotepath: /remote/new.bin
      - fail_rename_commit: ['blobber-1', 'blobber-2']
      - sleep: "1m" # simple wait for blobbers to pick up state
      - command:
          name: 'rename_can_fail'
          params:
            remotepath: /remote/upload.bin
            destname: upload_renamed.bin
      - disable_fail_rename_commit: ['blobber-1', 'blobber-2']
      - sleep: "1m" # simple wait for blobbers to pick up state
      - command:
          name: 'rename'
          params:
            remotepath: /remote/new.bin
            destname: new_renamed.bin
      - wait_for_file_meta_root: {}
      - check_file_meta_root:
          require_same_root: true
  - name: "Allocation state should be same after repair"
    flow:
      - sleep: "1m"
      - set_monitor: "sharder-1"
      - cleanup_bc: {}
      - command:
          name: "cleanup_blobbers"
      - command:
          name: "cleanup_0dns"
      - start: ['sharder-1', 'miner-1', 'miner-2', 'miner-3']
      - wait_round:
          round: 15 # just wait the BC starts
      - start: ['0dns']
      # wait the 0dns starts
      - sleep: "20s"
      - wait_add:
          blobbers: ['blobber-1', 'blobber-2', 'blobber-3']
          validators: ['validator-1', 'validator-2', 'validator-3']
          timeout: '15m'
          start: true
      # setup blobbers and create allocation with minimum write pool lock
      - command:
          name: 'init_allocation_only'
          params:
            data_shards: "2"
            parity_shards: "1"
      - command:
          name: "upload"
          params:
            remotepath: /remote/upload.bin
      - command:
          name: "upload"
          params:
            remotepath: /remote/new.bin
      - fail_rename_commit: ['blobber-1']
      - sleep: "1m" # simple wait for blobbers to pick up state
      - command:
          name: 'rename_can_fail'
          params:
            remotepath: /remote/upload.bin
            destname: upload_renamed.bin
      - disable_fail_rename_commit: ['blobber-1']
      - sleep: "1m" # simple wait for blobbers to pick up state
      - command:
          name: 'rename'
          params:
            remotepath: /remote/new.bin
            destname: new_renamed.bin
      - wait_for_file_meta_root: {}
      - check_file_meta_root:
          require_same_root: true
