version: 1.0

logging:
  level: "debug"
  console: false # printing log to console is only supported in development mode
  goroutines: false
  memlog: false

development:
  state: true
  dkg: true
  view_change: false
  block_rewards: false
  smart_contract:
    storage: true
    faucet: true
    zrc20: true
    interest: true
    miner: true
    multisig: true
    vesting: true
    zcn: true
  txn_generation:
    wallets: 50
    max_transactions: 0
    max_txn_fee: 10000
    min_txn_fee: 0
    max_txn_value: 10000000000
    min_txn_value: 100
  faucet:
    refill_amount: 1000000000000000

zerochain:
  id: "0afc093ffb509f059c55478bc1a60351cef7b4e9c008a53a6cc8241ca8617dfe"
  decimals: 10
  genesis_block:
    id: "ed79cae70d439c11258236da1dfa6fc550f7cc569768304623e8fbd7d70efae4"

server_chain:
  id: "0afc093ffb509f059c55478bc1a60351cef7b4e9c008a53a6cc8241ca8617dfe"
  owner: "edb90b850f2e7e7cbd0a1fa370fdcc5cd378ffbec95363a7bc0e5a98b8ba5759"
  decimals: 10
  tokens: 200000000
  genesis_block:
    id: "ed79cae70d439c11258236da1dfa6fc550f7cc569768304623e8fbd7d70efae4"
  block:
    min_block_size: 1
    max_block_size: 10
    max_byte_size: 1638400
    min_generators: 2
    generators_percent: 0.2
    replicators: 0
    generation:
      timeout: 15
      retry_wait_time: 5 #milliseconds
    proposal:
      max_wait_time: 180ms
      wait_mode: static # static or dynamic
    consensus:
      threshold_by_count: 66 # percentage (registration)
      threshold_by_stake: 0 # percent
    sharding:
      min_active_sharders: 25 # percentage
      min_active_replicators: 25 # percentageRF
    validation:
      batch_size: 1000
    reuse_txns: false
    storage:
      provider: blockstore.FSBlockStore # blockstore.FSBlockStore or blockstore.BlockDBStore
  round_range: 10000000
  round_timeouts:
    softto_min: 1500 # in miliseconds
    softto_mult: 1 # multiples of mean network time (mnt)  softto = max{softo_min, softto_mult * mnt}
    round_restart_mult: 10 # number of soft timeouts before round is restarted
    timeout_cap: 0 # 0 indicates no cap
    vrfs_timeout_mismatch_tolerance: 5
  transaction:
    payload:
      max_size: 98304 # bytes
    timeout: 30 # seconds
    min_fee: 0
  client:
    signature_scheme: bls0chain # ed25519 or bls0chain
    discover: true
  messages:
    verification_tickets_to: all_miners # generator or all_miners
  state:
    prune_below_count: 100 # rounds
    sync:
      timeout: 10 # seconds
  stuck:
    check_interval: 10 # seconds
    time_threshold: 60 #seconds
  smart_contract:
    setting_update_period: 200 #rounds
    timeout: 8000ms
  health_check:
    show_counters: true
    deep_scan:
      enabled: false
      settle_secs: 30s
      window: 0 #Full scan till round 0
      repeat_interval_mins: 3m #minutes
      report_status_mins: 1m #minutes
      batch_size: 50
    proximity_scan:
      enabled: true
      settle_secs: 30s
      window: 100000 #number of blocks, Do not make 0 with minio ON, Should be less than minio old block round range
      repeat_interval_mins: 1m #minutes
      report_status_mins: 1m #minutes
      batch_size: 50
  lfb_ticket:
    rebroadcast_timeout: "15s" #
    ahead: 5 # should be >= 5
    fb_fetching_lifetime: "10s" #
  async_blocks_fetching:
    max_simultaneous_from_miners: 100
    max_simultaneous_from_sharders: 30

network:
  magic_block_file: config/b0magicBlock_4_miners_2_sharders.json
  initial_states: config/initial_state.yaml
  genesis_dkg: 0
  dns_url: "" # http://198.18.0.98:9091
  relay_time: 200 # milliseconds
  max_concurrent_requests: 40
  timeout:
    small_message: 1000 # milliseconds
    large_message: 3000 # milliseconds
  large_message_th_size: 5120 # anything greater than this size in bytes
  user_handlers:
    rate_limit: 100000000 # 100 per second
  n2n_handlers:
    rate_limit: 10000000000 # 10000 per second

# delegate wallet is wallet that used to configure node in Miner SC; if its
# empty, then node ID used
delegate_wallet: ""
# % of fees and rewards for generator
service_charge: 0.10 # [0; 1) of all fees
# max number of delegate pools allowed by a node in miner SC
number_of_delegates: 10 # max number of delegate pools
# min stake pool amount allowed by node; should not conflict with
# SC min_stake
min_stake: 0.0 # tokens
# max stake pool amount allowed by node; should not conflict with
# SC max_stake
max_stake: 100.0 # tokens

# minio:
#   enabled: false # Enable or disable minio backup, Do not enable with deep scan ON
#   worker_frequency: 1800 # In Seconds, The frequency at which the worker should look for files, Ex: 3600 means it will run every 3600 seconds
#   num_workers: 5 # Number of workers to run in parallel, Just to make execution faster we can have mutiple workers running simultaneously
#   use_ssl: false # Use SSL for connection or not
#   old_block_round_range: 250000 # How old the block should be to be considered for moving to cloud, Should be greater than proximity scan window
#   delete_local_copy: true # Delete local copy of block once it's moved to cloud

# All tiering, strategy,etc. configs
storage:
  # Start mode will delete all the data in volumepath, will initialize meta records,
  # Repair mode will recreate meta records and restore missing blocks(should also check if block is in cold storage).
  mode: start # normal or repair or recover(metadata recovery)

  #Types:
  # - hot_only --> Only hot tier(ssd),
  # - warm_only --> Only warm tier(hdd),
  # - cache_and_warm, --> Cache and warm tier(ssd + hdd),
  # - cache_and_cold --> Cache and cold tier(ssd + cold storage),
  # - cache_hot_and_cold --> Cache(for cold blocks), hot(ssd) and cold tier,
  # - cache_warm_and_cold --> Cache(for both warm and cold blocks), warm(hdd) and cold tier

  #Note: Cannot have mix of hot and warm; hot does not require cache since ssd is used as hot tier and cache both

  #
  #Cache = 1, Warm = 2, Hot = 4, Cold = 8. And their combination is sum of these numbers
  #If storage type is Cache and Warm then 1 + 2 = 3

  storage_type: 12
  cache:
    storage_strategy: "random" # random, round robin, min_size_first, min_count_first etc.
    replacement_policy: ""
    write_policy: "write_through" # write_through, write_back
    poll_interval: 1 # In hour
    block_expire_in: 2 # In hour; Block that has not been accessed for 2 hours will be removed from cache
    volumes:
      - path: "/path/to/cache/blocks"
        recovery: false # Defaults to false
        size_to_maintain: 10 # In GB
        inodes_to_maintain: 10 # In percent
        allowed_block_numbers: 10000
        allowed_block_size: 1 # In GB
      - path: "/path/to/another/cache/blocks"
        recovery: false
        size_to_maintain: 2 # In GB
        inodes_to_maintain: 10 # In percent
        allowed_block_numbers: 100000
        allowed_block_size: 1 # In GB
  hot:
    strategy: "random"
    volumes:
      - path: "/path/to/hot/blocks"
        recovery: false
        size_to_maintain: 1 # In GB
        inodes_to_maintain: 5 # In percent
        allowed_block_numbers: 5000
        allowed_block_size: 5 # 5GB
      - path: "/another/path/to/hot/blocks"
        recovery: false
        size_to_maintain: 1 # In GB
        inodes_to_maintain: 5 # In percent
        allowed_block_numbers: 100
        allowed_block_size: 5 # In GB
  warm:
    strategy: "round_robin" # choices; round_robin, min_size_first, min_count_first and random
    volumes:
      - path: "/cold/path/to/store/blocks"
        recovery: false
        size_to_maintain: 4 # In GB
        inodes_to_maintain: 5 # In percent
        allowed_block_numbers: 100 # Can also be given as 10 * 10 * 1, etc. #should be <= 10^9; if greater number is provided then it will settle to 10^9
        allowed_block_size: 10 # In GB
      - path: "/another/cold/path/to/store/blocks"
        recovery: false
        size_to_maintain: 4 # In GB
        inodes_to_maintain: 5 # In percent
        allowed_block_numbers: 50
        allowed_block_size: 2 # In GB
  cold:
    delete_local: true
    poll_interval: 720 # In hours; Default is 720
    #Can be either disk, minio or blobber but never combination of them.
    storage:
      type: "disk" # one of disk, minio and blobber
      disk: # Cold storage can also be some mounted volumes
        strategy: "round_robin"
        volumes:
          - path: "/cold/path/to/store/blocks"
            recovery: false
            size_to_maintain: 10 # In GB
            inodes_to_maintain: 10 # In percent
            allowed_block_numbers: 10^9 # Can be any numbers
            allowed_block_size: 2 # In GB
          - path: "/cold/another/path/to/store/blocks"
            recovery: false
            size_to_maintain: 10 # In GB
            inodes_to_maintain: 10 # In percent
            allowed_block_numbers: 10^9 # Can be any numbers
            allowed_block_size: 2 # In GB
      minio:
        strategy: "some cold strategy"
        cloud_storages:
          - storage_service_url: ""
            access_id: ""
            secret_access_key: ""
            bucket_name: ""
            allowed_bock_numbers: 10^15 # Can be any numbers
            allowed_block_size: 10 # In GB
          - storage_service_url: ""
            access_id: ""
            secret_access_key: ""
            bucket_name: ""
            allowed_bock_numbers: 10^15 # Can be any numbers
            allowed_block_size: 10^10 # In GB
      blobber:
        strategy: "some blobber strategy"
        blobbers:
          - wallet: ""
            allocation_id: ""
            allowed_block_numbers: 10^10
            allowed_block_size: 10^4 # In GB
          - wallet: ""
            allocation_id: ""
            allowed_block_numbers: 10^10
            allowed_block_size: 10^4 # In GB


cassandra:
  connection:
    delay: 10 # in seconds
    retries: 10

# integration tests related configurations
integration_tests:
  # address of the server
  address: host.docker.internal:15210
  # lock_interval used by nodes to request server to connect to blockchain
  # after start
  lock_interval: 1s