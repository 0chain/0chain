###
### Blockchain blobber upload/download and repair
###
---

# enabled test cases sets
enable:
  - "Upload/Download"
  - "Repair"

# sets of test cases
sets:
  - name: "Upload/Download"
    tests:
      - "Error on upload/download"
      - "Error on simultaneous uploads"
  - name: "Repair"
    tests:
      - "Repair after blobber comes back online"

# test cases
tests:
  # This test verifies the expected failures on zbox upload and download such as the following.
  # - `zbox upload` without meta
  # - `zbox upload` non-existing file
  # - `zbox upload` without write marker
  # - `zbox download` without locked read tokens
  # - `zbox download` without read marker
  # - Markers out of order
  # - Simulatenous `zbox upload`, `zbox download`, and `zbox delete`
  - name: "Error on upload/download"
    flow:
      - set_monitor: "sharder-1"
      - cleanup_bc: {}
      - command:
          name: "cleanup_blobbers"
      - command:
          name: "cleanup_0dns"
      - command:
          name: "cleanup"
      - start: ['sharder-1', 'miner-1', 'miner-2', 'miner-3']
      - wait_round:
          round: 15 # just wait the BC starts
      - start: ['0dns']
      # wait the 0dns starts
      - sleep: "20s"
      - wait_add:
          blobbers: ['blobber-1', 'blobber-2','blobber-3']
          validators: ['validator-1', 'validator-2','validator-3']
          timeout: '15m'
          start: true
      - command:
          name: "check_registered"
          params:
            provider_type: blobber
            provider_ids:
              - "f65af5d64000c7cd2883f4910eb69086f9d6e6635c744e62afcfab58b938ee25"
              - "7a90e6790bcd3d78422d7a230390edc102870fe58c15472073922024985b1c7d"
              - "2f051ca6447d8712a020213672bece683dbd0d23a81fdf93ff273043a0764d18"
      - command:
          name: "check_registered"
          params:
            provider_type: validator
            provider_ids:
              - "41313b795d2c057b6277801e9ed277b444770c2af75f5209afd00bd07c72cc0b"
              - "ab549edb7cea822dab0b460f65dcde85f698c1e97d730e3ffc6b0f8b576b65bd"
              - "86cf791f03f01e3e4d318b1ca009a51c91dd43f7cf3c87a32f531b609cc5044b"
      - wait_round:
          shift: 50
      # setup blobbers and create allocation with minimum write pool lock
      - command:
          name: 'init_allocation_3_blobbers_no_read_tokens'
          timeout: '35m'
          retry_count: 3
      - wait_round:
          shift: 250
      # upload failure without metadata (add tokens to write pool)
      - command:
          name: "upload_no_meta" # this locks token in a write pool
          timeout: '5m'
      # upload failure without file
      - command:
          name: "upload_no_file"
          timeout: '5m'
      # upload failure without write_marker
      - command:
          name: "upload_no_wm"
          timeout: '5m'
      # upload failure without enough tokens in read pool
      - command:
          name: "download_no_tokens"
          timeout: '5m'
      # download failure without read_marker
      - command:
          name: "download_no_rm" # this locks token in a read pool
          timeout: '5m'
      # markers out of order
      - command:
          name: "markers_out_of_order"
          timeout: '5m'

  - name: "Error on simultaneous uploads"
    flow:
      - set_monitor: "sharder-1"
      - cleanup_bc: {}
      - command:
          name: "cleanup_blobbers"
      - command:
          name: "cleanup_0dns"
      - command:
          name: "cleanup"
      - start: ['sharder-1', 'miner-1', 'miner-2', 'miner-3']
      - wait_round:
          round: 15 # just wait the BC starts
      - start: ['0dns']
      # wait the 0dns starts
      - sleep: "20s"
      - wait_add:
          blobbers: ['blobber-1', 'blobber-2', 'blobber-3']
          validators: ['validator-1', 'validator-2', 'validator-3']
          timeout: '15m'
          start: true
      - command:
          name: "check_registered"
          params:
            provider_type: blobber
            provider_ids:
              - "f65af5d64000c7cd2883f4910eb69086f9d6e6635c744e62afcfab58b938ee25"
              - "7a90e6790bcd3d78422d7a230390edc102870fe58c15472073922024985b1c7d"
              - "2f051ca6447d8712a020213672bece683dbd0d23a81fdf93ff273043a0764d18"
      - command:
          name: "check_registered"
          params:
            provider_type: validator
            provider_ids:
              - "41313b795d2c057b6277801e9ed277b444770c2af75f5209afd00bd07c72cc0b"
              - "ab549edb7cea822dab0b460f65dcde85f698c1e97d730e3ffc6b0f8b576b65bd"
              - "86cf791f03f01e3e4d318b1ca009a51c91dd43f7cf3c87a32f531b609cc5044b"
      - wait_round:
          shift: 50
      - command:
          name: 'init_allocation_only'
          timeout: '35m'
          retry_count: 3
      - wait_round:
          shift: 250
      - command:
          name: 'simultaneous'
          timeout: '20m'

  # This test verifies `zbox start-repair` is working.
  # The test uploads when a blobber node is not available and then use the repair to fix the data on that blobber.
  - name: "Repair after blobber comes back online"
    flow:
      - set_monitor: "sharder-1"
      - cleanup_bc: {}
      - command:
          name: "cleanup_blobbers"
      - command:
          name: "cleanup_0dns"
      - command:
          name: "cleanup"
      - start: ['sharder-1', 'miner-1', 'miner-2', 'miner-3']
      - wait_round:
          round: 15 # just wait the BC starts
      - start: ['0dns']
      # wait the 0dns starts
      - sleep: "20s"
      - wait_add:
          blobbers: ['blobber-1', 'blobber-2']
          validators: ['validator-1', 'validator-2']
          timeout: '5m'
          start: true
      - wait_add:
          blobbers: ['blobber-3', 'blobber-4']
          validators: ['validator-3', 'validator-4']
          timeout: '5m'
          start: true
      - command:
          name: "check_registered"
          params:
            provider_type: blobber
            provider_ids:
              - "f65af5d64000c7cd2883f4910eb69086f9d6e6635c744e62afcfab58b938ee25"
              - "7a90e6790bcd3d78422d7a230390edc102870fe58c15472073922024985b1c7d"
              - "2f051ca6447d8712a020213672bece683dbd0d23a81fdf93ff273043a0764d18"
              - "2a4d5a5c6c0976873f426128d2ff23a060ee715bccf0fd3ca5e987d57f25b78e"
      - command:
          name: "check_registered"
          params:
            provider_type: validator
            provider_ids:
              - "41313b795d2c057b6277801e9ed277b444770c2af75f5209afd00bd07c72cc0b"
              - "ab549edb7cea822dab0b460f65dcde85f698c1e97d730e3ffc6b0f8b576b65bd"
              - "86cf791f03f01e3e4d318b1ca009a51c91dd43f7cf3c87a32f531b609cc5044b"
              - "823cb45de27dfe739b320dcf6449e5fdea35c60804fd81d6f22c005042cfb337"
      - wait_round:
          shift: 50
      - command:
          name: 'repair_allocation'
          timeout: '15m'
          retry_count: 3
      - stop: ['blobber-4']
      - wait_round:
          shift: 250
      - command:
          name: 'upload_repair'
          timeout: '5m'
      - start: ['blobber-4']
      - wait_round:
          shift: 250
      - command:
          name: 'list_repair'
          timeout: '5m'
      - command:
          name: 'repair'
          timeout: '20m'
