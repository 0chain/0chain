enable:
  - "Storage providers"

# sets of test cases
sets:
  - name: "Storage providers"
    tests:
      - "Blobber Recovery - Blobber should lose tokens when it's down and gain rewards when it recovers"

tests:
  - name: "Blobber Recovery - Blobber should lose tokens when it's down and gain rewards when it recovers"
    flow:
      - set_monitor: "sharder-1"
      - cleanup_bc: {}
      - command:
          name: "cleanup_0box"
      - command:
          name: "cleanup_0dns"
      - start: ['sharder-1', 'sharder-2', 'miner-1', 'miner-2', 'miner-3', 'miner-4']
      - wait_round:
          shift: 15 # Ensures blockchain is operational before proceeding
      - start: ['0dns']
      - sleep : "20s"
      - start : ['0box']
      - command:
          name: "update_config"
          params:
            keys: "validator_reward,time_unit,validators_per_challenge"
            values: "0.5,1h,3"
      - command:
          name: "update_faucet_config"
          params:
            keys: max_pour_amount,periodic_limit
            values: "1000,10000"
      #- start: ['blobber-1']
      - wait_add:
          blobbers: ['blobber-1']
          start: true
          timeout: '15m'
      - command:
          name: "check_registered"
          params:
            provider_type: blobber
            provider_ids:
              - "f65af5d64000c7cd2883f4910eb69086f9d6e6635c744e62afcfab58b938ee25"
      #- command:
      #    name: "fill_blobber_validator_wallets"
      - wait_round:
          shift: 15 # Allows time for Blobber to register and start functioning
      - stop: ['blobber-1'] # Simulates Blobber failure
      - command:
          name: "cleanup_provider"
          params:
            path: "./0chain/docker.local/blobber1"
            recreate_script: docker.local/bin/init_blobber.sh
            recreate_script_workdir: "blobber"
          # Ensures complete data removal, simulating absolute data loss
      - wait_round:
          shift: 15 # Simulates downtime duration for the Blobber
      - start: ['blobber-1']
      - sleep : "30s"               ###
      - command:
          name: "check_registered"  ###
          params:
            provider_type: blobber
            provider_ids:
              - "f65af5d64000c7cd2883f4910eb69086f9d6e6635c744e62afcfab58b938ee25"
      - wait_round:
          shift: 100 # Waits for Blobber to recover, re-sync, and resume operations
      - check_aggregate_value_change:   # Verifies the Blobber begins accruing rewards again, indicating successful recovery and participation in the network
          provider_type: blobber
          provider_id: blobber-1
          key: total_rewards
          monotonicity: increase
          timeout: "2m"
