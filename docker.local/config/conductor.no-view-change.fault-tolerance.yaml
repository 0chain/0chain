###
### No ViewChange Fault Tolerance Test Cases
###

enable:
  - "MINERS GO DOWN"
  - "MINERS GO DOWN AND COME UP"
  - "SHARDERS GO DOWN"
  - "SHARDERS GO DOWN AND COME UP"
  - "NODES GO DOWN AND COME UP"
  - "NODES FAIL AND RECOVER RANDOMLY"

sets:
  - name: "MINERS GO DOWN"
    tests:
      - "Less than consensus miners go down"
      - "More than consensus miners go down"
      - "All miners go down"

  - name: "MINERS GO DOWN AND COME UP"
    tests:
      - "Less than consensus miners go down and come up"
      - "More than consensus miners go down and come up"
      - "All miners go down and come up"
      - "Miner goes down for 3 minutes simultaneously with coming up of the previous one"

  - name: "SHARDERS GO DOWN"
    tests:
      # - "Some sharders go down"
      - "All sharders go down"

  - name: "SHARDERS GO DOWN AND COME UP"
    tests:
      # - "Some sharders go down and come up"
      - "All sharders go down and come up"
      - "Sharder goes down for 3 minutes simultaneously with coming up of the previous one"

  - name: "NODES GO DOWN AND COME UP"
    tests:
      - "All nodes go down and come up"

  - name: "NODES FAIL AND RECOVER RANDOMLY"
    tests:
      - "Nodes fail and recover randomly"
      - "Generators fail at start of round"

tests:
  # MINERS GO DOWN
  - name: "Less than consensus miners go down"
    flow:
      - set_monitor: "sharder-1"
      - cleanup_bc: {}
      - wait_add:
          sharders: ["sharder-1"]
          miners: ["miner-1", "miner-2", "miner-3", "miner-4"]
          start: true
      - wait_round:
          shift: 20
      - stop: ["miner-4"]
      - wait_round:
          shift: 30

  - name: "More than consensus miners go down"
    flow:
      - set_monitor: "sharder-1"
      - cleanup_bc: {}
      - wait_add:
          sharders: ["sharder-1"]
          miners: ["miner-1", "miner-2", "miner-3", "miner-4"]
          start: true
      - wait_round:
          shift: 20
      - stop: ["miner-3", "miner-4"]
      - wait_no_progress:
          timeout: "1m"

  - name: "All miners go down"
    flow:
      - set_monitor: "sharder-1"
      - cleanup_bc: {}
      - wait_add:
          sharders: ["sharder-1"]
          miners: ["miner-1", "miner-2", "miner-3", "miner-4"]
          start: true
      - wait_round:
          shift: 20
      - stop: ["miner-1", "miner-2", "miner-3", "miner-4"]
      - wait_no_progress:
          timeout: "1m"

  # MINERS GO DOWN AND COME UP
  - name: "Less than consensus miners go down and come up"
    flow:
      - set_monitor: "sharder-1"
      - cleanup_bc: {}
      - wait_add:
          sharders: ["sharder-1"]
          miners: ["miner-1", "miner-2", "miner-3", "miner-4"]
          start: true
      - wait_round:
          shift: 20
      - stop: ["miner-4"]
      - start: ["miner-4"]
      - wait_round:
          shift: 100

  - name: "More than consensus miners go down and come up"
    flow:
      - set_monitor: "sharder-1"
      - cleanup_bc: {}
      - wait_add:
          sharders: ["sharder-1"]
          miners: ["miner-1", "miner-2", "miner-3", "miner-4"]
          start: true
      - wait_round:
          shift: 20
      - stop: ["miner-3", "miner-4"]
      - start: ["miner-3", "miner-4"]
      - wait_round:
          shift: 100

  - name: "All miners go down and come up"
    flow:
      - set_monitor: "sharder-1"
      - cleanup_bc: {}
      - wait_add:
          sharders: ["sharder-1"]
          miners: ["miner-1", "miner-2", "miner-3", "miner-4"]
          start: true
      - wait_round:
          shift: 20
      - stop: ["miner-1", "miner-2", "miner-3", "miner-4"]
      - start: ["miner-1", "miner-2", "miner-3", "miner-4"]
      - wait_round:
          shift: 100

  - name: "Miner goes down for 3 minutes simultaneously with coming up of the previous one"
    flow:
      - set_monitor: "sharder-1"
      - cleanup_bc: {}
      - wait_add:
          sharders: ["sharder-1"]
          miners: ["miner-1", "miner-2", "miner-3", "miner-4"]
          start: true
      - wait_round:
          shift: 20
      - stop: ["miner-4"]
      - wait_round:
          shift: 10
      - sleep: "3m"
      - stop: ["miner-3"]
      - start: ["miner-4"]
      - wait_round:
          shift: 10
      - sleep: "3m"
      - stop: ["miner-2"]
      - start: ["miner-3"]
      - wait_round:
          shift: 10

  # SHARDERS GO DOWN
  - name: "All sharders go down"
    flow:
      - set_monitor: "miner-1"
      - cleanup_bc: {}
      - wait_add:
          sharders: ["sharder-1"]
          miners: ["miner-1", "miner-2", "miner-3", "miner-4"]
          start: true
      - wait_round:
          shift: 20
      - stop: ["sharder-1"]
      - wait_no_progress:
          timeout: "1m"

  # SHARDERS GO DOWN AND COME UP
  - name: "All sharders go down and come up"
    flow:
      - set_monitor: "miner-1"
      - cleanup_bc: {}
      - wait_add:
          sharders: ["sharder-1"]
          miners: ["miner-1", "miner-2", "miner-3", "miner-4"]
          start: true
      - wait_round:
          shift: 20
      - stop: ["sharder-1"]
      - start: ["sharder-1"]
      - wait_round:
          shift: 50

  - name: "Sharder goes down for 3 minutes simultaneously with coming up of the previous one"
    flow:
      - set_monitor: "miner-1"
      - cleanup_bc: {}
      - wait_add:
          sharders: ["sharder-1","sharder-2"]
          miners: ["miner-1", "miner-2", "miner-3"]
          start: true
      - wait_round:
          shift: 50
      - stop: ["sharder-2"]
      - sleep: "3m"
      - wait_round:
          shift: 50
      - start: ["sharder-2"]
      - sleep: "3m"
      - wait_round:
          shift: 50
      - stop: ["sharder-1"]
      - wait_round:
          shift: 50

  # NODES GO DOWN AND COME UP
  - name: "All nodes go down and come up"
    flow:
      - set_monitor: "sharder-1"
      - cleanup_bc: {}
      - wait_add:
          sharders: ["sharder-1"]
          miners: ["miner-1", "miner-2", "miner-3", "miner-4"]
          start: true
      - wait_round:
          shift: 20
      - stop: ["sharder-1"]
      - stop: ["miner-1", "miner-2", "miner-3", "miner-4"]
      - start: ["sharder-1"]
      - start: ["miner-1", "miner-2", "miner-3", "miner-4"]
      - wait_round:
          shift: 100

  # NODES FAIL AND RECOVER RANDOMLY
  - name: "Nodes fail and recover randomly"
    flow:
      - set_monitor: "miner-1"
      - cleanup_bc: {}
      - wait_add:
          sharders: ["sharder-1"]
          miners: ["miner-1", "miner-2", "miner-3", "miner-4"]
          start: true
      - wait_round:
          shift: 20
      - stop: ["sharder-1", "miner-4"] # all sharders and some miners go down
      - wait_no_progress:
          timeout: "1m"
      - start: ["sharder-1"] # sharder comes up, BC should move
      - wait_round:
          shift: 20
      - stop: ["miner-3"] # more than consensus miners are down
      - wait_no_progress:
          timeout: "1m"
      - start: ["miner-4"] # consensus miners are back online
      - wait_round:
          shift: 20
      # To be continued

  - name: "Generators fail at start of round"
    flow:
      - set_monitor: "sharder-1"
      - cleanup_bc: {}
      - env:
          KEYS_CONFIG_PATH: "/test.generators_failure"
          DKG_CONFIG_PATH: "/test.generators_failure"
          CLI_ARGS: "--magic_block_file config/test.generators_failure/b0magicBlock_7_miners_1_sharder.json"
          DKG_AFFIX: "7_miners_1_sharder_"
      - start: ["sharder-1"]
      - start: ["miner-1", "miner-2", "miner-3", "miner-4", "miner-5", "miner-6", "miner-7"]
      - wait_round:
          round: 20
          allow_beyond: true
      - generators_failure: 30 # setup failure for generators selected on start of round 30
      - wait_round:
          round: 50
          timeout: "20m"
