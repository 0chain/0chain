###
### Blockchain miners Byzantine tests
###

---

# enabled test cases sets
enable:
  - "Sharder"

# sets of test cases
sets:
  - name: "Sharder"
    tests:
      - "Send bad FB to miners when all miners are down and then they are brought up"
      - "Send bad MB to miners when all miners are down and then they are brought up"

#
# test cases
#
tests:

  - name: "Send bad FB to miners when all miners are down and then they are brought up"
    flow:
      - set_monitor: "sharder-1"
      - cleanup_bc: {}
      - start: ['sharder-1']
      - start: ["sharder-2"]
      - start: ["miner-1", "miner-2", "miner-3"]
      - wait_sharder_keep:
          timeout: '5m'
          sharders: ['sharder-2']
      - wait_view_change:
          expect_magic_block:
            miners: ['miner-1', 'miner-2', 'miner-3']
            sharders: ['sharder-1', 'sharder-2']
      - wait_round:
          shift: 10
      - stop: ["miner-1", "miner-2", "miner-3"]
      - finalized_block:
          by: ["sharder-2"]
      - start: ["miner-1", "miner-2", "miner-3"]
      - wait_round:
          shift: 10
          timeout: '2m'

  - name: "Send bad MB to miners when all miners are down and then they are brought up"
    flow:
      - set_monitor: "sharder-1"
      - cleanup_bc: {}
      - start: ['sharder-1']
      - start: ['sharder-2']
      - start: ["miner-1", "miner-2", "miner-3"]
      - wait_sharder_keep:
          timeout: '5m'
          sharders: ['sharder-2']
      - wait_view_change:
          timeout: '5m'
          expect_magic_block:
            miners: ['miner-1', 'miner-2', 'miner-3']
            sharders: ['sharder-1', 'sharder-2']
      - wait_round:
          shift: 10
      - stop: ["miner-1", "miner-2", "miner-3"]
      - magic_block:
          by: ['sharder-2']
      - start: ["miner-1", "miner-2", "miner-3"]
      - wait_round:
          shift: 50

...
