basePath: /
definitions:
    Allocation:
        properties:
            User:
                $ref: '#/definitions/User'
            allocation_id:
                type: string
                x-go-name: AllocationID
            cancelled:
                type: boolean
                x-go-name: Cancelled
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            data_shards:
                format: int64
                type: integer
                x-go-name: DataShards
            expiration:
                format: int64
                type: integer
                x-go-name: Expiration
            failed_challenges:
                format: int64
                type: integer
                x-go-name: FailedChallenges
            file_options:
                format: uint16
                type: integer
                x-go-name: FileOptions
            finalized:
                type: boolean
                x-go-name: Finalized
            id:
                format: uint64
                type: integer
                x-go-name: ID
            latest_closed_challenge_txn:
                type: string
                x-go-name: LatestClosedChallengeTxn
            moved_back:
                $ref: '#/definitions/Coin'
            moved_to_challenge:
                $ref: '#/definitions/Coin'
            moved_to_validators:
                $ref: '#/definitions/Coin'
            num_reads:
                format: int64
                type: integer
                x-go-name: NumReads
            num_writes:
                format: int64
                type: integer
                x-go-name: NumWrites
            open_challenges:
                format: int64
                type: integer
                x-go-name: OpenChallenges
            owner:
                type: string
                x-go-name: Owner
            owner_public_key:
                type: string
                x-go-name: OwnerPublicKey
            parity_shards:
                format: int64
                type: integer
                x-go-name: ParityShards
            read_price_max:
                $ref: '#/definitions/Coin'
            read_price_min:
                $ref: '#/definitions/Coin'
            size:
                format: int64
                type: integer
                x-go-name: Size
            start_time:
                format: int64
                type: integer
                x-go-name: StartTime
            successful_challenges:
                format: int64
                type: integer
                x-go-name: SuccessfulChallenges
            terms:
                items:
                    $ref: '#/definitions/AllocationBlobberTerm'
                type: array
                x-go-name: Terms
            third_party_extendable:
                type: boolean
                x-go-name: ThirdPartyExtendable
            time_unit:
                format: int64
                type: integer
                x-go-name: TimeUnit
            total_challenges:
                format: int64
                type: integer
                x-go-name: TotalChallenges
            transaction_id:
                type: string
                x-go-name: TransactionID
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            used_size:
                format: int64
                type: integer
                x-go-name: UsedSize
            write_pool:
                $ref: '#/definitions/Coin'
            write_price_max:
                $ref: '#/definitions/Coin'
            write_price_min:
                $ref: '#/definitions/Coin'
        type: object
        x-go-package: 0chain.net/smartcontract/dbs/event
    AllocationBlobberTerm:
        properties:
            CreatedAt:
                format: date-time
                type: string
            DeletedAt:
                $ref: '#/definitions/DeletedAt'
            ID:
                format: uint64
                type: integer
            UpdatedAt:
                format: date-time
                type: string
            alloc_blobber_idx:
                format: int64
                type: integer
                x-go-name: AllocBlobberIdx
            alloc_id:
                format: int64
                type: integer
                x-go-name: AllocationID
            allocation_id:
                type: string
                x-go-name: AllocationIdHash
            blobber_id:
                type: string
                x-go-name: BlobberID
            read_price:
                format: int64
                type: integer
                x-go-name: ReadPrice
            write_price:
                format: int64
                type: integer
                x-go-name: WritePrice
        type: object
        x-go-package: 0chain.net/smartcontract/dbs/event
    AllocationUpdateMinLockResponse:
        properties:
            min_lock_demand:
                format: int64
                type: integer
                x-go-name: MinLockDemand
        type: object
        x-go-package: 0chain.net/smartcontract/storagesc
    AuthorizerAggregate:
        properties:
            authorizer_id:
                type: string
                x-go-name: AuthorizerID
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            fee:
                $ref: '#/definitions/Coin'
            id:
                format: uint64
                type: integer
                x-go-name: ID
            is_killed:
                type: boolean
                x-go-name: IsKilled
            is_shutdown:
                type: boolean
                x-go-name: IsShutdown
            last_health_check:
                $ref: '#/definitions/Timestamp'
            round:
                format: int64
                type: integer
                x-go-name: Round
            service_charge:
                format: double
                type: number
                x-go-name: ServiceCharge
            total_burn:
                $ref: '#/definitions/Coin'
            total_mint:
                $ref: '#/definitions/Coin'
            total_rewards:
                $ref: '#/definitions/Coin'
            total_stake:
                $ref: '#/definitions/Coin'
            url:
                type: string
                x-go-name: URL
        type: object
        x-go-package: 0chain.net/smartcontract/dbs/event
    AuthorizerSnapshot:
        properties:
            creation_round:
                format: int64
                type: integer
                x-go-name: CreationRound
            fee:
                $ref: '#/definitions/Coin'
            id:
                type: string
                x-go-name: AuthorizerID
            is_killed:
                type: boolean
                x-go-name: IsKilled
            is_shutdown:
                type: boolean
                x-go-name: IsShutdown
            round:
                format: int64
                type: integer
                x-go-name: Round
            service_charge:
                format: double
                type: number
                x-go-name: ServiceCharge
            total_burn:
                $ref: '#/definitions/Coin'
            total_mint:
                $ref: '#/definitions/Coin'
            total_rewards:
                $ref: '#/definitions/Coin'
            total_stake:
                $ref: '#/definitions/Coin'
        type: object
        x-go-package: 0chain.net/smartcontract/dbs/event
    BlobberAggregate:
        properties:
            InactiveRounds:
                format: int64
                type: integer
            allocated:
                format: int64
                type: integer
                x-go-name: Allocated
            blobber_id:
                type: string
                x-go-name: BlobberID
            capacity:
                format: int64
                type: integer
                x-go-name: Capacity
            challenges_completed:
                format: uint64
                type: integer
                x-go-name: ChallengesCompleted
            challenges_passed:
                format: uint64
                type: integer
                x-go-name: ChallengesPassed
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            downtime:
                format: uint64
                type: integer
                x-go-name: Downtime
            id:
                format: uint64
                type: integer
                x-go-name: ID
            is_killed:
                type: boolean
                x-go-name: IsKilled
            is_restricted:
                type: boolean
                x-go-name: IsRestricted
            is_shutdown:
                type: boolean
                x-go-name: IsShutdown
            last_health_check:
                $ref: '#/definitions/Timestamp'
            not_available:
                type: boolean
                x-go-name: NotAvailable
            offers_total:
                $ref: '#/definitions/Coin'
            open_challenges:
                format: uint64
                type: integer
                x-go-name: OpenChallenges
            rank_metric:
                format: double
                type: number
                x-go-name: RankMetric
            read_data:
                format: int64
                type: integer
                x-go-name: ReadData
            round:
                format: int64
                type: integer
                x-go-name: Round
            saved_data:
                format: int64
                type: integer
                x-go-name: SavedData
            service_charge:
                format: double
                type: number
                x-go-name: ServiceCharge
            total_block_rewards:
                $ref: '#/definitions/Coin'
            total_read_income:
                $ref: '#/definitions/Coin'
            total_rewards:
                $ref: '#/definitions/Coin'
            total_slashed_stake:
                $ref: '#/definitions/Coin'
            total_stake:
                $ref: '#/definitions/Coin'
            total_storage_income:
                $ref: '#/definitions/Coin'
            url:
                type: string
                x-go-name: URL
            write_price:
                $ref: '#/definitions/Coin'
        type: object
        x-go-package: 0chain.net/smartcontract/dbs/event
    BlobberAllocation:
        properties:
            allocation_id:
                type: string
                x-go-name: AllocationID
            allocation_root:
                type: string
                x-go-name: AllocationRoot
            blobber_id:
                type: string
                x-go-name: BlobberID
            challenge_pool_integral_value:
                $ref: '#/definitions/Coin'
            challenge_reward:
                $ref: '#/definitions/Coin'
            latest_finalized_chall_created_att:
                $ref: '#/definitions/Timestamp'
            latest_successful_chall_created_at:
                $ref: '#/definitions/Timestamp'
            penalty:
                $ref: '#/definitions/Coin'
            read_reward:
                $ref: '#/definitions/Coin'
            returned:
                $ref: '#/definitions/Coin'
            size:
                description: Size is blobber allocation maximum size
                format: int64
                type: integer
                x-go-name: Size
            stats:
                $ref: '#/definitions/StorageAllocationStats'
            terms:
                $ref: '#/definitions/Terms'
            write_marker:
                $ref: '#/definitions/WriteMarker'
        type: object
        x-go-package: 0chain.net/smartcontract/storagesc
    BlobberSnapshot:
        properties:
            allocated:
                format: int64
                type: integer
                x-go-name: Allocated
            capacity:
                format: int64
                type: integer
                x-go-name: Capacity
            challenges_completed:
                format: uint64
                type: integer
                x-go-name: ChallengesCompleted
            challenges_passed:
                format: uint64
                type: integer
                x-go-name: ChallengesPassed
            creation_round:
                format: int64
                type: integer
                x-go-name: CreationRound
            id:
                type: string
                x-go-name: BlobberID
            is_killed:
                type: boolean
                x-go-name: IsKilled
            is_shutdown:
                type: boolean
                x-go-name: IsShutdown
            offers_total:
                $ref: '#/definitions/Coin'
            open_challenges:
                format: uint64
                type: integer
                x-go-name: OpenChallenges
            rank_metric:
                format: double
                type: number
                x-go-name: RankMetric
            read_data:
                format: int64
                type: integer
                x-go-name: ReadData
            round:
                format: int64
                type: integer
                x-go-name: Round
            saved_data:
                format: int64
                type: integer
                x-go-name: SavedData
            total_block_rewards:
                $ref: '#/definitions/Coin'
            total_read_income:
                $ref: '#/definitions/Coin'
            total_rewards:
                $ref: '#/definitions/Coin'
            total_service_charge:
                $ref: '#/definitions/Coin'
            total_slashed_stake:
                $ref: '#/definitions/Coin'
            total_stake:
                $ref: '#/definitions/Coin'
            total_storage_income:
                $ref: '#/definitions/Coin'
            write_price:
                $ref: '#/definitions/Coin'
        type: object
        x-go-package: 0chain.net/smartcontract/dbs/event
    Block:
        properties:
            chain_id:
                type: string
                x-go-name: ChainId
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            creation_date:
                format: int64
                type: integer
                x-go-name: CreationDate
            hash:
                type: string
                x-go-name: Hash
            id:
                format: uint64
                type: integer
                x-go-name: ID
            magic_block_hash:
                type: string
                x-go-name: MagicBlockHash
            merkle_tree_root:
                type: string
                x-go-name: MerkleTreeRoot
            miner_id:
                type: string
                x-go-name: MinerID
            num_txns:
                format: int64
                type: integer
                x-go-name: NumTxns
            prev_hash:
                type: string
                x-go-name: PrevHash
            receipt_merkle_tree_root:
                type: string
                x-go-name: ReceiptMerkleTreeRoot
            round:
                format: int64
                type: integer
                x-go-name: Round
            round_random_seed:
                format: int64
                type: integer
                x-go-name: RoundRandomSeed
            round_timeout_count:
                format: int64
                type: integer
                x-go-name: RoundTimeoutCount
            running_txn_count:
                type: string
                x-go-name: RunningTxnCount
            signature:
                type: string
                x-go-name: Signature
            state_changes_count:
                format: int64
                type: integer
                x-go-name: StateChangesCount
            state_hash:
                type: string
                x-go-name: StateHash
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            version:
                type: string
                x-go-name: Version
        type: object
        x-go-package: 0chain.net/smartcontract/dbs/event
    BlockSummary:
        properties:
            creation_date:
                $ref: '#/definitions/Timestamp'
            hash:
                type: string
                x-go-name: Hash
            k:
                format: int64
                type: integer
                x-go-name: K
            magic_block_number:
                format: int64
                type: integer
                x-go-name: MagicBlockNumber
            merkle_tree_root:
                type: string
                x-go-name: MerkleTreeRoot
            miner_id:
                type: string
                x-go-name: MinerID
            miners:
                $ref: '#/definitions/Pool'
            mpks:
                $ref: '#/definitions/Mpks'
            "n":
                format: int64
                type: integer
                x-go-name: "N"
            num_txns:
                format: int64
                type: integer
                x-go-name: NumTxns
            previous_hash:
                type: string
                x-go-name: PreviousMagicBlockHash
            receipt_merkle_tree_root:
                type: string
                x-go-name: ReceiptMerkleTreeRoot
            round:
                format: int64
                type: integer
                x-go-name: Round
            round_random_seed:
                format: int64
                type: integer
                x-go-name: RoundRandomSeed
            sharders:
                $ref: '#/definitions/Pool'
            share_or_signs:
                $ref: '#/definitions/GroupSharesOrSigns'
            starting_round:
                format: int64
                type: integer
                x-go-name: StartingRound
            state_changes_count:
                format: int64
                type: integer
                x-go-name: StateChangesCount
            state_hash:
                $ref: '#/definitions/Key'
            t:
                format: int64
                type: integer
                x-go-name: T
            version:
                description: Version of the entity
                type: string
                x-go-name: Version
        title: BlockSummary - the summary of the block */
        type: object
        x-go-package: 0chain.net/chaincore/block
    ChainStats:
        properties:
            count:
                description: Number of finalized blocks generated in the block chain since genesis.
                format: int64
                type: integer
                x-go-name: Count
            current_round:
                description: The number that represents the current round of the blockchain.
                format: int64
                type: integer
                x-go-name: CurrentRound
            delta:
                $ref: '#/definitions/Duration'
            latest_finalized_round:
                description: The number that represents the round that generated the latest finalized block.
                format: int64
                type: integer
                x-go-name: LastFinalizedRound
            max:
                description: Maximum finalization time of a block, in milliseconds.
                format: double
                type: number
                x-go-name: Max
            mean:
                description: Mean (Average) finalization time of a block, in milliseconds.
                format: double
                type: number
                x-go-name: Mean
            min:
                description: Minimum finalization time of a block, in milliseconds.
                format: double
                type: number
                x-go-name: Min
            percentile_50:
                description: The block finalization time value, in milliseconds, which the specified percentage of block finalization events lie below.
                format: double
                type: number
                x-go-name: Percentile50
            percentile_90:
                description: The block finalization time value, in milliseconds, which the specified percentage of block finalization events lie below.
                format: double
                type: number
                x-go-name: Percentile90
            percentile_95:
                description: The block finalization time value, in milliseconds, which the specified percentage of block finalization events lie below.
                format: double
                type: number
                x-go-name: Percentile95
            percentile_99:
                description: The block finalization time value, in milliseconds, which the specified percentage of block finalization events lie below.
                format: double
                type: number
                x-go-name: Percentile99
            rate_1_min:
                description: The moving average rate of occurrence of block finalization events per second during the specified time window.
                format: double
                type: number
                x-go-name: Rate1
            rate_5_min:
                description: The moving average rate of occurrence of block finalization events per second during the specified time window.
                format: double
                type: number
                x-go-name: Rate5
            rate_15_min:
                description: The moving average rate of occurrence of block finalization events per second during the specified time window.
                format: double
                type: number
                x-go-name: Rate15
            rate_mean:
                description: The overall mean rate of occurrence of block finalization events per second.
                format: double
                type: number
                x-go-name: RateMean
            std_dev:
                description: Standard deviation of the finalization time of a block from the mean number, in milliseconds.
                format: double
                type: number
                x-go-name: StdDev
            total_txns:
                description: The total count of all transactions included in all the blocks generated by the blockchain.
                format: int64
                type: integer
                x-go-name: RunningTxnCount
        type: object
        x-go-package: 0chain.net/chaincore/diagnostics
    Challenge:
        properties:
            allocation_id:
                type: string
                x-go-name: AllocationID
            allocation_root:
                type: string
                x-go-name: AllocationRoot
            blobber_id:
                type: string
                x-go-name: BlobberID
            challenge_id:
                type: string
                x-go-name: ChallengeID
            created_at:
                $ref: '#/definitions/Timestamp'
                format: date-time
                type: string
                x-go-name: CreatedAt
            expired_n:
                format: int64
                type: integer
                x-go-name: ExpiredN
            id:
                format: uint64
                type: integer
                x-go-name: ID
            passed:
                type: boolean
                x-go-name: Passed
            responded:
                format: int64
                type: integer
                x-go-name: Responded
            round_created_at:
                format: int64
                type: integer
                x-go-name: RoundCreatedAt
            round_responded:
                format: int64
                type: integer
                x-go-name: RoundResponded
            seed:
                format: int64
                type: integer
                x-go-name: Seed
            timestamp:
                $ref: '#/definitions/Timestamp'
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            validators_id:
                type: string
                x-go-name: ValidatorsID
        type: object
        x-go-package: 0chain.net/smartcontract/dbs/event
    Challenges:
        items:
            $ref: '#/definitions/Challenge'
        type: array
        x-go-package: 0chain.net/smartcontract/dbs/event
    ChallengesResponse:
        properties:
            blobber_id:
                type: string
                x-go-name: BlobberID
            challenges:
                items:
                    $ref: '#/definitions/StorageChallengeResponse'
                type: array
                x-go-name: Challenges
        type: object
        x-go-package: 0chain.net/smartcontract/storagesc
    Client:
        description: Client - data structure that holds the client data
        properties:
            creation_date:
                $ref: '#/definitions/Timestamp'
            id:
                type: string
                x-go-name: ID
            public_key:
                description: The public key of the client
                type: string
                x-go-name: PublicKey
            version:
                description: Version of the entity
                type: string
                x-go-name: Version
        type: object
        x-go-package: 0chain.net/chaincore/client
    Coin:
        description: go:generate msgp -io=false -tests=false -v
        format: uint64
        title: Coin - any quantity that is represented as an integer in the lowest denomination
        type: integer
        x-go-package: github.com/0chain/common/core/currency
    CreationDateField:
        description: |-
            go:generate msgp -io=false -tests=false -v
            CreationDateField - Can be used to add a creation date functionality to an entity */
        properties:
            creation_date:
                $ref: '#/definitions/Timestamp'
        type: object
        x-go-package: 0chain.net/core/datastore
    DKGKeyShare:
        properties:
            id:
                type: string
                x-go-name: ID
            message:
                type: string
                x-go-name: Message
            share:
                type: string
                x-go-name: Share
            sign:
                type: string
                x-go-name: Sign
        type: object
        x-go-package: 0chain.net/chaincore/threshold/bls
    DelegatePoolStat:
        properties:
            balance:
                $ref: '#/definitions/Coin'
            delegate_id:
                type: string
                x-go-name: DelegateID
            id:
                type: string
                x-go-name: ID
            provider_id:
                type: string
                x-go-name: ProviderId
            provider_type:
                $ref: '#/definitions/Provider'
            rewards:
                $ref: '#/definitions/Coin'
            round_created:
                format: int64
                type: integer
                x-go-name: RoundCreated
            staked_at:
                $ref: '#/definitions/Timestamp'
            status:
                type: string
                x-go-name: Status
            total_penalty:
                $ref: '#/definitions/Coin'
            total_reward:
                $ref: '#/definitions/Coin'
            unstake:
                type: boolean
                x-go-name: UnStake
        type: object
        x-go-package: 0chain.net/smartcontract/storagesc
    DeletedAt:
        $ref: '#/definitions/NullTime'
    Duration:
        description: |-
            A Duration represents the elapsed time between two instants
            as an int64 nanosecond count. The representation limits the
            largest representable duration to approximately 290 years.
        format: int64
        type: integer
        x-go-package: time
    Error:
        properties:
            Error:
                type: string
            TransactionID:
                type: string
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            id:
                format: uint64
                type: integer
                x-go-name: ID
        type: object
        x-go-package: 0chain.net/smartcontract/dbs/event
    GroupSharesOrSigns:
        properties:
            shares:
                additionalProperties:
                    $ref: '#/definitions/ShareOrSigns'
                type: object
                x-go-name: Shares
        type: object
        x-go-package: 0chain.net/chaincore/block
    HashIDField:
        properties:
            hash:
                type: string
                x-go-name: Hash
        title: HashIDField - Useful to embed this into all the entities and get consistent behavior */
        type: object
        x-go-package: 0chain.net/core/datastore
    IDField:
        description: |-
            go:generate msgp -io=false -tests=false -v
            IDField - Useful to embed this into all the entities and get consistent behavior */
        properties:
            id:
                type: string
                x-go-name: ID
        type: object
        x-go-package: 0chain.net/core/datastore
    ImmutableModel:
        description: |-
            type User struct {
            model.Model
            }
        properties:
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            id:
                format: uint64
                type: integer
                x-go-name: ID
        title: |-
            Model a basic GoLang struct which includes the following fields: ID, CreatedAt
            It may be embedded into your model or you may build your own model without it
        type: object
        x-go-package: 0chain.net/smartcontract/dbs/model
    Info:
        description: Info - (informal) info of a node that can be shared with other nodes
        properties:
            avg_block_txns:
                format: int64
                type: integer
                x-go-name: AvgBlockTxns
            build_tag:
                type: string
                x-go-name: BuildTag
            miners_median_network_time:
                $ref: '#/definitions/Duration'
            state_missing_nodes:
                format: int64
                type: integer
                x-go-name: StateMissingNodes
        type: object
        x-go-package: 0chain.net/chaincore/node
    Key:
        description: Key - a type for the merkle patricia trie node key
        items:
            format: uint8
            type: integer
        type: array
        x-go-package: github.com/0chain/common/core/util
    MPK:
        properties:
            ID:
                type: string
            Mpk:
                items:
                    type: string
                type: array
        type: object
        x-go-package: 0chain.net/chaincore/block
    MagicBlock:
        properties:
            hash:
                type: string
                x-go-name: Hash
            k:
                format: int64
                type: integer
                x-go-name: K
            magic_block_number:
                format: int64
                type: integer
                x-go-name: MagicBlockNumber
            miners:
                $ref: '#/definitions/Pool'
            mpks:
                $ref: '#/definitions/Mpks'
            "n":
                format: int64
                type: integer
                x-go-name: "N"
            previous_hash:
                type: string
                x-go-name: PreviousMagicBlockHash
            sharders:
                $ref: '#/definitions/Pool'
            share_or_signs:
                $ref: '#/definitions/GroupSharesOrSigns'
            starting_round:
                format: int64
                type: integer
                x-go-name: StartingRound
            t:
                format: int64
                type: integer
                x-go-name: T
        type: object
        x-go-package: 0chain.net/chaincore/block
    MinerAggregate:
        properties:
            blocks_finalised:
                format: int64
                type: integer
                x-go-name: BlocksFinalised
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            fees:
                $ref: '#/definitions/Coin'
            id:
                format: uint64
                type: integer
                x-go-name: ID
            is_killed:
                type: boolean
                x-go-name: IsKilled
            is_shutdown:
                type: boolean
                x-go-name: IsShutdown
            last_health_check:
                $ref: '#/definitions/Timestamp'
            miner_id:
                type: string
                x-go-name: MinerID
            round:
                format: int64
                type: integer
                x-go-name: Round
            service_charge:
                format: double
                type: number
                x-go-name: ServiceCharge
            total_rewards:
                $ref: '#/definitions/Coin'
            total_stake:
                $ref: '#/definitions/Coin'
            url:
                type: string
                x-go-name: URL
        type: object
        x-go-package: 0chain.net/smartcontract/dbs/event
    MinerSnapshot:
        properties:
            blocks_finalised:
                format: int64
                type: integer
                x-go-name: BlocksFinalised
            creation_round:
                format: int64
                type: integer
                x-go-name: CreationRound
            fees:
                $ref: '#/definitions/Coin'
            id:
                type: string
                x-go-name: MinerID
            is_killed:
                type: boolean
                x-go-name: IsKilled
            is_shutdown:
                type: boolean
                x-go-name: IsShutdown
            round:
                format: int64
                type: integer
                x-go-name: Round
            service_charge:
                format: double
                type: number
                x-go-name: ServiceCharge
            total_rewards:
                $ref: '#/definitions/Coin'
            total_stake:
                $ref: '#/definitions/Coin'
        type: object
        x-go-package: 0chain.net/smartcontract/dbs/event
    Model:
        description: |-
            type User struct {
            gorm.Model
            }
        properties:
            CreatedAt:
                format: date-time
                type: string
            DeletedAt:
                $ref: '#/definitions/DeletedAt'
            ID:
                format: uint64
                type: integer
            UpdatedAt:
                format: date-time
                type: string
        title: |-
            Model a basic GoLang struct which includes the following fields: ID, CreatedAt, UpdatedAt, DeletedAt
            It may be embedded into your model or you may build your own model without it
        type: object
        x-go-package: gorm.io/gorm
    Mpks:
        properties:
            Mpks:
                additionalProperties:
                    $ref: '#/definitions/MPK'
                type: object
        type: object
        x-go-package: 0chain.net/chaincore/block
    NOIDField:
        description: |-
            NOIDFied - used when we just want to create a datastore entity that doesn't
            have it's own id (like 1-to-many) that is only required to send it around with the parent key */
        type: object
        x-go-package: 0chain.net/core/datastore
    Node:
        properties:
            creation_date:
                $ref: '#/definitions/Timestamp'
            description:
                type: string
                x-go-name: Description
            host:
                type: string
                x-go-name: Host
            id:
                type: string
                x-go-name: ID
            in_prev_mb:
                type: boolean
                x-go-name: InPrevMB
            info:
                $ref: '#/definitions/Info'
            n2n_host:
                type: string
                x-go-name: N2NHost
            path:
                type: string
                x-go-name: Path
            port:
                format: int64
                type: integer
                x-go-name: Port
            public_key:
                description: The public key of the client
                type: string
                x-go-name: PublicKey
            set_index:
                format: int64
                type: integer
                x-go-name: SetIndex
            status:
                format: int64
                type: integer
                x-go-name: Status
            type:
                $ref: '#/definitions/NodeType'
            version:
                description: Version of the entity
                type: string
                x-go-name: Version
        title: Node - a struct holding the node information */
        type: object
        x-go-package: 0chain.net/chaincore/node
    NodeType:
        format: int8
        type: integer
        x-go-package: 0chain.net/chaincore/node
    NullTime:
        description: |-
            NullTime implements the [Scanner] interface so
            it can be used as a scan destination, similar to [NullString].
        properties:
            Time:
                format: date-time
                type: string
            Valid:
                type: boolean
        title: NullTime represents a [time.Time] that may be null.
        type: object
        x-go-package: database/sql
    Pool:
        properties:
            nodes:
                additionalProperties:
                    $ref: '#/definitions/Node'
                type: object
                x-go-name: NodesMap
            type:
                $ref: '#/definitions/NodeType'
        title: Pool - a pool of nodes used for the same purpose */
        type: object
        x-go-package: 0chain.net/chaincore/node
    PoolMemberInfo:
        description: PoolMemberInfo of a pool member
        properties:
            n2n_host:
                type: string
                x-go-name: N2NHost
            port:
                type: string
                x-go-name: Port
            public_key:
                type: string
                x-go-name: PublicKey
            type:
                type: string
                x-go-name: Type
        type: object
        x-go-package: 0chain.net/chaincore/smartcontract
    PoolMembersInfo:
        description: PoolMembersInfo array of pool memebers
        properties:
            members_info:
                items:
                    $ref: '#/definitions/PoolMemberInfo'
                type: array
                x-go-name: MembersInfo
        type: object
        x-go-package: 0chain.net/chaincore/smartcontract
    PriceRange:
        properties:
            max:
                $ref: '#/definitions/Coin'
            min:
                $ref: '#/definitions/Coin'
        title: PriceRange represents a price range allowed by user to filter blobbers.
        type: object
        x-go-package: 0chain.net/smartcontract/storagesc
    Provider:
        format: int64
        properties:
            id:
                type: string
                x-go-name: ID
            is_killed:
                type: boolean
                x-go-name: HasBeenKilled
            is_shut_down:
                type: boolean
                x-go-name: HasBeenShutDown
            last_health_check:
                $ref: '#/definitions/Timestamp'
            provider_type:
                $ref: '#/definitions/Provider'
        type: integer
        x-go-package: 0chain.net/smartcontract/stakepool/spenum
    ProviderRewards:
        description: ProviderRewards is a tables stores the rewards and total_rewards for all kinds of providers
        properties:
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            id:
                format: uint64
                type: integer
                x-go-name: ID
            provider_id:
                type: string
                x-go-name: ProviderID
            rewards:
                $ref: '#/definitions/Coin'
            round_service_charge_last_updated:
                format: int64
                type: integer
                x-go-name: RoundServiceChargeLastUpdated
            total_rewards:
                $ref: '#/definitions/Coin'
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
        type: object
        x-go-package: 0chain.net/smartcontract/dbs/event
    ReadMarker:
        properties:
            Allocation:
                $ref: '#/definitions/Allocation'
            allocation_id:
                type: string
                x-go-name: AllocationID
            auth_ticket:
                type: string
                x-go-name: AuthTicket
            blobber_id:
                type: string
                x-go-name: BlobberID
            block_number:
                format: int64
                type: integer
                x-go-name: BlockNumber
            client_id:
                type: string
                x-go-name: ClientID
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            id:
                format: uint64
                type: integer
                x-go-name: ID
            owner_id:
                type: string
                x-go-name: OwnerID
            payer_id:
                type: string
                x-go-name: PayerID
            read_counter:
                format: int64
                type: integer
                x-go-name: ReadCounter
            read_size:
                format: double
                type: number
                x-go-name: ReadSize
            signature:
                type: string
                x-go-name: Signature
            timestamp:
                format: int64
                type: integer
                x-go-name: Timestamp
            transaction_id:
                type: string
                x-go-name: TransactionID
        type: object
        x-go-package: 0chain.net/smartcontract/dbs/event
    Reward:
        format: int64
        type: integer
        x-go-package: 0chain.net/smartcontract/stakepool/spenum
    RewardDelegate:
        properties:
            allocation_id:
                type: string
                x-go-name: AllocationID
            amount:
                $ref: '#/definitions/Coin'
            block_number:
                format: int64
                type: integer
                x-go-name: BlockNumber
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            id:
                format: uint64
                type: integer
                x-go-name: ID
            pool_id:
                type: string
                x-go-name: PoolID
            provider_id:
                type: string
                x-go-name: ProviderID
            reward_type:
                $ref: '#/definitions/Reward'
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
        type: object
        x-go-package: 0chain.net/smartcontract/dbs/event
    RewardProvider:
        properties:
            allocation_id:
                type: string
                x-go-name: AllocationID
            amount:
                $ref: '#/definitions/Coin'
            block_number:
                format: int64
                type: integer
                x-go-name: BlockNumber
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            id:
                format: uint64
                type: integer
                x-go-name: ID
            provider_id:
                type: string
                x-go-name: ProviderId
            reward_type:
                $ref: '#/definitions/Reward'
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
        type: object
        x-go-package: 0chain.net/smartcontract/dbs/event
    RewardRound:
        properties:
            start_round:
                format: int64
                type: integer
                x-go-name: StartRound
            timestamp:
                $ref: '#/definitions/Timestamp'
        type: object
        x-go-package: 0chain.net/smartcontract/storagesc
    Settings:
        properties:
            delegate_wallet:
                type: string
                x-go-name: DelegateWallet
            min_stake:
                $ref: '#/definitions/Coin'
            num_delegates:
                format: int64
                type: integer
                x-go-name: MaxNumDelegates
            service_charge:
                format: double
                type: number
                x-go-name: ServiceChargeRatio
        type: object
        x-go-package: 0chain.net/smartcontract/stakepool
    SharderAggregate:
        properties:
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            fees:
                $ref: '#/definitions/Coin'
            id:
                format: uint64
                type: integer
                x-go-name: ID
            is_killed:
                type: boolean
                x-go-name: IsKilled
            is_shutdown:
                type: boolean
                x-go-name: IsShutdown
            last_health_check:
                $ref: '#/definitions/Timestamp'
            round:
                format: int64
                type: integer
                x-go-name: Round
            service_charge:
                format: double
                type: number
                x-go-name: ServiceCharge
            sharder_id:
                type: string
                x-go-name: SharderID
            total_rewards:
                $ref: '#/definitions/Coin'
            total_stake:
                $ref: '#/definitions/Coin'
            url:
                type: string
                x-go-name: URL
        type: object
        x-go-package: 0chain.net/smartcontract/dbs/event
    SharderSnapshot:
        properties:
            creation_round:
                format: int64
                type: integer
                x-go-name: CreationRound
            fees:
                $ref: '#/definitions/Coin'
            id:
                type: string
                x-go-name: SharderID
            is_killed:
                type: boolean
                x-go-name: IsKilled
            is_shutdown:
                type: boolean
                x-go-name: IsShutdown
            round:
                format: int64
                type: integer
                x-go-name: Round
            service_charge:
                format: double
                type: number
                x-go-name: ServiceCharge
            total_rewards:
                $ref: '#/definitions/Coin'
            total_stake:
                $ref: '#/definitions/Coin'
        type: object
        x-go-package: 0chain.net/smartcontract/dbs/event
    ShareOrSigns:
        properties:
            id:
                type: string
                x-go-name: ID
            share_or_sign:
                additionalProperties:
                    $ref: '#/definitions/DKGKeyShare'
                type: object
                x-go-name: ShareOrSigns
        type: object
        x-go-package: 0chain.net/chaincore/block
    Snapshot:
        properties:
            active_allocated_delta:
                format: int64
                type: integer
                x-go-name: ActiveAllocatedDelta
            allocated_storage:
                format: int64
                type: integer
                x-go-name: AllocatedStorage
            authorizer_count:
                format: int64
                type: integer
                x-go-name: AuthorizerCount
            avg_txn_fee:
                format: int64
                type: integer
                x-go-name: TotalTxnFee
            blobber_count:
                format: int64
                type: integer
                x-go-name: BlobberCount
            blobber_total_rewards:
                format: int64
                type: integer
                x-go-name: BlobberTotalRewards
            block_count:
                format: int64
                type: integer
                x-go-name: BlockCount
            client_locks:
                format: int64
                type: integer
                x-go-name: ClientLocks
            created_at:
                format: int64
                type: integer
                x-go-name: CreatedAt
            max_capacity_storage:
                format: int64
                type: integer
                x-go-name: MaxCapacityStorage
            miner_count:
                format: int64
                type: integer
                x-go-name: MinerCount
            miner_total_rewards:
                format: int64
                type: integer
                x-go-name: MinerTotalRewards
            round:
                format: int64
                type: integer
                x-go-name: Round
            sharder_count:
                format: int64
                type: integer
                x-go-name: SharderCount
            sharder_total_rewards:
                format: int64
                type: integer
                x-go-name: SharderTotalRewards
            staked_storage:
                format: int64
                type: integer
                x-go-name: StakedStorage
            storage_token_stake:
                format: int64
                type: integer
                x-go-name: StorageTokenStake
            successful_challenges:
                format: int64
                type: integer
                x-go-name: SuccessfulChallenges
            total_allocations:
                format: int64
                type: integer
                x-go-name: TotalAllocations
            total_challenge_pools:
                format: int64
                type: integer
                x-go-name: TotalChallengePools
            total_challenges:
                format: int64
                type: integer
                x-go-name: TotalChallenges
            total_mint:
                format: int64
                type: integer
                x-go-name: TotalMint
            total_read_pool_locked:
                format: int64
                type: integer
                x-go-name: TotalReadPoolLocked
            total_rewards:
                format: int64
                type: integer
                x-go-name: TotalRewards
            total_staked:
                description: updated from blobber snapshot aggregate table
                format: int64
                type: integer
                x-go-name: TotalStaked
            transactions_count:
                format: int64
                type: integer
                x-go-name: TransactionsCount
            unique_addresses:
                format: int64
                type: integer
                x-go-name: UniqueAddresses
            used_storage:
                format: int64
                type: integer
                x-go-name: UsedStorage
            validator_count:
                format: int64
                type: integer
                x-go-name: ValidatorCount
            zcn_supply:
                format: int64
                type: integer
                x-go-name: ZCNSupply
        type: object
        x-go-package: 0chain.net/smartcontract/dbs/event
    State:
        properties:
            balance:
                $ref: '#/definitions/Coin'
            nonce:
                description: Latest nonce used by the client wallet.
                format: int64
                type: integer
                x-go-name: Nonce
            round:
                description: Latest round when the latest txn happened.
                format: int64
                type: integer
                x-go-name: Round
            txn:
                description: Latest transaction run by the client wallet.
                type: string
                x-go-name: TxnHash
        title: State - state that needs consensus within the blockchain.
        type: object
        x-go-package: 0chain.net/chaincore/state
    StorageAllocation:
        properties:
            blobber_details:
                description: |-
                    Blobbers not to be used anywhere except /allocation and /allocations table
                    if Blobbers are getting used in any smart-contract, we should avoid.
                items:
                    $ref: '#/definitions/BlobberAllocation'
                type: array
                x-go-name: BlobberAllocs
            canceled:
                description: |-
                    Canceled set to true where allocation finalized by cancel_allocation
                    transaction.
                type: boolean
                x-go-name: Canceled
            data_shards:
                format: int64
                type: integer
                x-go-name: DataShards
            diverse_blobbers:
                type: boolean
                x-go-name: DiverseBlobbers
            expiration_date:
                $ref: '#/definitions/Timestamp'
            file_options:
                description: |-
                    FileOptions to define file restrictions on an allocation for third-parties
                    default 00000000 for all crud operations suggesting only owner has the below listed abilities.
                    enabling option/s allows any third party to perform certain ops
                    00000001 - 1  - upload
                    00000010 - 2  - delete
                    00000100 - 4  - update
                    00001000 - 8  - move
                    00010000 - 16 - copy
                    00100000 - 32 - rename
                format: uint16
                type: integer
                x-go-name: FileOptions
            finalized:
                description: Finalized is true where allocation has been finalized.
                type: boolean
                x-go-name: Finalized
            id:
                description: |-
                    ID is unique allocation ID that is equal to hash of transaction with
                    which the allocation has created.
                type: string
                x-go-name: ID
            moved_back:
                $ref: '#/definitions/Coin'
            moved_to_challenge:
                $ref: '#/definitions/Coin'
            moved_to_validators:
                $ref: '#/definitions/Coin'
            owner_id:
                type: string
                x-go-name: Owner
            owner_public_key:
                type: string
                x-go-name: OwnerPublicKey
            parity_shards:
                format: int64
                type: integer
                x-go-name: ParityShards
            preferred_blobbers:
                items:
                    type: string
                type: array
                x-go-name: PreferredBlobbers
            read_price_range:
                $ref: '#/definitions/PriceRange'
            size:
                format: int64
                type: integer
                x-go-name: Size
            start_time:
                $ref: '#/definitions/Timestamp'
            stats:
                $ref: '#/definitions/StorageAllocationStats'
            third_party_extendable:
                description: Flag to determine if anyone can extend this allocation
                type: boolean
                x-go-name: ThirdPartyExtendable
            time_unit:
                $ref: '#/definitions/Duration'
            tx:
                description: Tx keeps hash with which the allocation has created or updated. todo do we need this field?
                type: string
                x-go-name: Tx
            write_pool:
                $ref: '#/definitions/Coin'
            write_price_range:
                $ref: '#/definitions/PriceRange'
        title: StorageAllocation request and entity.
        type: object
        x-go-package: 0chain.net/smartcontract/storagesc
    StorageAllocationBlobbers:
        properties:
            blobber_details:
                description: |-
                    Blobbers not to be used anywhere except /allocation and /allocations table
                    if Blobbers are getting used in any smart-contract, we should avoid.
                items:
                    $ref: '#/definitions/BlobberAllocation'
                type: array
                x-go-name: BlobberAllocs
            blobbers:
                items:
                    $ref: '#/definitions/storageNodeResponse'
                type: array
                x-go-name: Blobbers
            canceled:
                description: |-
                    Canceled set to true where allocation finalized by cancel_allocation
                    transaction.
                type: boolean
                x-go-name: Canceled
            data_shards:
                format: int64
                type: integer
                x-go-name: DataShards
            diverse_blobbers:
                type: boolean
                x-go-name: DiverseBlobbers
            expiration_date:
                $ref: '#/definitions/Timestamp'
            file_options:
                description: |-
                    FileOptions to define file restrictions on an allocation for third-parties
                    default 00000000 for all crud operations suggesting only owner has the below listed abilities.
                    enabling option/s allows any third party to perform certain ops
                    00000001 - 1  - upload
                    00000010 - 2  - delete
                    00000100 - 4  - update
                    00001000 - 8  - move
                    00010000 - 16 - copy
                    00100000 - 32 - rename
                format: uint16
                type: integer
                x-go-name: FileOptions
            finalized:
                description: Finalized is true where allocation has been finalized.
                type: boolean
                x-go-name: Finalized
            id:
                description: |-
                    ID is unique allocation ID that is equal to hash of transaction with
                    which the allocation has created.
                type: string
                x-go-name: ID
            moved_back:
                $ref: '#/definitions/Coin'
            moved_to_challenge:
                $ref: '#/definitions/Coin'
            moved_to_validators:
                $ref: '#/definitions/Coin'
            owner_id:
                type: string
                x-go-name: Owner
            owner_public_key:
                type: string
                x-go-name: OwnerPublicKey
            parity_shards:
                format: int64
                type: integer
                x-go-name: ParityShards
            preferred_blobbers:
                items:
                    type: string
                type: array
                x-go-name: PreferredBlobbers
            read_price_range:
                $ref: '#/definitions/PriceRange'
            size:
                format: int64
                type: integer
                x-go-name: Size
            start_time:
                $ref: '#/definitions/Timestamp'
            stats:
                $ref: '#/definitions/StorageAllocationStats'
            third_party_extendable:
                description: Flag to determine if anyone can extend this allocation
                type: boolean
                x-go-name: ThirdPartyExtendable
            time_unit:
                $ref: '#/definitions/Duration'
            tx:
                description: Tx keeps hash with which the allocation has created or updated. todo do we need this field?
                type: string
                x-go-name: Tx
            write_pool:
                $ref: '#/definitions/Coin'
            write_price_range:
                $ref: '#/definitions/PriceRange'
        type: object
        x-go-package: 0chain.net/smartcontract/storagesc
    StorageAllocationStats:
        properties:
            latest_closed_challenge:
                type: string
                x-go-name: LastestClosedChallengeTxn
            num_failed_challenges:
                format: int64
                type: integer
                x-go-name: FailedChallenges
            num_of_reads:
                format: int64
                type: integer
                x-go-name: NumReads
            num_of_writes:
                format: int64
                type: integer
                x-go-name: NumWrites
            num_open_challenges:
                format: int64
                type: integer
                x-go-name: OpenChallenges
            num_success_challenges:
                format: int64
                type: integer
                x-go-name: SuccessChallenges
            total_challenges:
                format: int64
                type: integer
                x-go-name: TotalChallenges
            used_size:
                format: int64
                type: integer
                x-go-name: UsedSize
        type: object
        x-go-package: 0chain.net/smartcontract/storagesc
    StorageChallenge:
        properties:
            allocation_id:
                type: string
                x-go-name: AllocationID
            blobber_id:
                type: string
                x-go-name: BlobberID
            created:
                $ref: '#/definitions/Timestamp'
            id:
                type: string
                x-go-name: ID
            responded:
                format: int64
                type: integer
                x-go-name: Responded
            round_created_at:
                format: int64
                type: integer
                x-go-name: RoundCreatedAt
            total_validators:
                format: int64
                type: integer
                x-go-name: TotalValidators
            validator_ids:
                items:
                    type: string
                type: array
                x-go-name: ValidatorIDs
        type: object
        x-go-package: 0chain.net/smartcontract/storagesc
    StorageChallengeResponse:
        properties:
            allocation_id:
                type: string
                x-go-name: AllocationID
            allocation_root:
                type: string
                x-go-name: AllocationRoot
            blobber_id:
                type: string
                x-go-name: BlobberID
            created:
                $ref: '#/definitions/Timestamp'
            id:
                type: string
                x-go-name: ID
            responded:
                format: int64
                type: integer
                x-go-name: Responded
            round_created_at:
                format: int64
                type: integer
                x-go-name: RoundCreatedAt
            seed:
                format: int64
                type: integer
                x-go-name: Seed
            timestamp:
                $ref: '#/definitions/Timestamp'
            total_validators:
                format: int64
                type: integer
                x-go-name: TotalValidators
            validator_ids:
                items:
                    type: string
                type: array
                x-go-name: ValidatorIDs
            validators:
                items:
                    $ref: '#/definitions/ValidationNode'
                type: array
                x-go-name: Validators
        type: object
        x-go-package: 0chain.net/smartcontract/storagesc
    StringMap:
        properties:
            fields:
                additionalProperties:
                    type: string
                type: object
                x-go-name: Fields
        type: object
        x-go-package: 0chain.net/core/config
    Terms:
        description: but any existing offer will use terms of offer signing time.
        properties:
            read_price:
                $ref: '#/definitions/Coin'
            write_price:
                $ref: '#/definitions/Coin'
        title: Terms represents Blobber terms. A Blobber can update its terms,
        type: object
        x-go-package: 0chain.net/smartcontract/storagesc
    Timestamp:
        description: |-
            go:generate msgp -io=false -tests=false -v
            Timestamp - just a wrapper to control the json encoding */
        format: int64
        type: integer
        x-go-package: 0chain.net/core/common
    Transaction:
        properties:
            chain_id:
                description: ChainID - the chain id of the transaction
                type: string
                x-go-name: ChainID
            client_id:
                description: ClientID of the client issuing the transaction
                type: string
                x-go-name: ClientID
            creation_date:
                $ref: '#/definitions/Timestamp'
            hash:
                type: string
                x-go-name: Hash
            public_key:
                description: Public key of the client issuing the transaction
                type: string
                x-go-name: PublicKey
            signature:
                description: Signature - Issuer signature of the transaction
                type: string
                x-go-name: Signature
            to_client_id:
                description: ToClientID - the client id of the recipient, the other party in the transaction. It can be a client id or the address of a smart contract
                type: string
                x-go-name: ToClientID
            transaction_data:
                description: TransactionData - the data associated with the transaction
                type: string
                x-go-name: TransactionData
            transaction_fee:
                $ref: '#/definitions/Coin'
            transaction_nonce:
                description: Nonce - the nonce associated with the transaction
                format: int64
                type: integer
                x-go-name: Nonce
            transaction_output:
                description: TransactionOutput - the output of the transaction
                type: string
                x-go-name: TransactionOutput
            transaction_status:
                description: Status - the status of the transaction
                format: int64
                type: integer
                x-go-name: Status
            transaction_type:
                description: "TransactionType - the type of the transaction. \nPossible values are:\n0: TxnTypeSend - A transaction to send tokens to another account, state is maintained by account.\n10: TxnTypeData - A transaction to just store a piece of data on the block chain.\n1000: TxnTypeSmartContract - A smart contract transaction type."
                format: int64
                type: integer
                x-go-name: TransactionType
            transaction_value:
                $ref: '#/definitions/Coin'
            txn_output_hash:
                description: OutputHash - the hash of the transaction output
                type: string
                x-go-name: OutputHash
            version:
                description: Version of the entity
                type: string
                x-go-name: Version
        required:
            - client_id
            - public_key
            - to_client_id
            - chain_id
            - transaction_data
            - transaction_value
            - signature
            - creation_date
            - transaction_fee
            - transaction_nonce
            - transaction_type
            - transaction_output
            - txn_output_hash
            - transaction_status
        type: object
        x-go-package: 0chain.net/chaincore/transaction
    UnverifiedBlockBody:
        description: |-
            UnverifiedBlockBody - used to compute the signature
            This is what is used to verify the correctness of the block & the associated signature
        properties:
            creation_date:
                $ref: '#/definitions/Timestamp'
            latest_finalized_magic_block_hash:
                type: string
                x-go-name: LatestFinalizedMagicBlockHash
            latest_finalized_magic_block_round:
                format: int64
                type: integer
                x-go-name: LatestFinalizedMagicBlockRound
            miner_id:
                type: string
                x-go-name: MinerID
            prev_hash:
                type: string
                x-go-name: PrevHash
            prev_verification_tickets:
                items:
                    $ref: '#/definitions/VerificationTicket'
                type: array
                x-go-name: PrevBlockVerificationTickets
            round:
                format: int64
                type: integer
                x-go-name: Round
            round_random_seed:
                format: int64
                type: integer
                x-go-name: RoundRandomSeed
            round_timeout_count:
                format: int64
                type: integer
                x-go-name: RoundTimeoutCount
            state_hash:
                $ref: '#/definitions/Key'
            transactions:
                description: The entire transaction payload to represent full block
                items:
                    $ref: '#/definitions/Transaction'
                type: array
                x-go-name: Txns
            version:
                description: Version of the entity
                type: string
                x-go-name: Version
        type: object
        x-go-package: 0chain.net/chaincore/block
    UpdatableModel:
        properties:
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            id:
                format: uint64
                type: integer
                x-go-name: ID
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
        type: object
        x-go-package: 0chain.net/smartcontract/dbs/model
    User:
        properties:
            balance:
                $ref: '#/definitions/Coin'
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            id:
                format: uint64
                type: integer
                x-go-name: ID
            mint_nonce:
                format: int64
                type: integer
                x-go-name: MintNonce
            nonce:
                format: int64
                type: integer
                x-go-name: Nonce
            round:
                format: int64
                type: integer
                x-go-name: Round
            txn_hash:
                type: string
                x-go-name: TxnHash
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            user_id:
                type: string
                x-go-name: UserID
        type: object
        x-go-package: 0chain.net/smartcontract/dbs/event
    UserAggregate:
        properties:
            CreatedAt:
                format: date-time
                type: string
            collected_reward:
                format: int64
                type: integer
                x-go-name: CollectedReward
            payed_fees:
                format: int64
                type: integer
                x-go-name: PayedFees
            read_pool_total:
                format: int64
                type: integer
                x-go-name: ReadPoolTotal
            round:
                format: int64
                type: integer
                x-go-name: Round
            total_reward:
                format: int64
                type: integer
                x-go-name: TotalReward
            total_stake:
                format: int64
                type: integer
                x-go-name: TotalStake
            user_id:
                type: string
                x-go-name: UserID
            write_pool_total:
                format: int64
                type: integer
                x-go-name: WritePoolTotal
        type: object
        x-go-package: 0chain.net/smartcontract/dbs/event
    ValidationNode:
        properties:
            id:
                type: string
                x-go-name: ID
            is_killed:
                type: boolean
                x-go-name: HasBeenKilled
            is_shut_down:
                type: boolean
                x-go-name: HasBeenShutDown
            last_health_check:
                $ref: '#/definitions/Timestamp'
            provider_type:
                $ref: '#/definitions/Provider'
            stake_pool_settings:
                $ref: '#/definitions/Settings'
            url:
                type: string
                x-go-name: BaseURL
        type: object
        x-go-package: 0chain.net/smartcontract/storagesc
    Validator:
        properties:
            CreatedAt:
                format: date-time
                type: string
            ID:
                type: string
            UpdatedAt:
                format: date-time
                type: string
            creation_round:
                format: int64
                type: integer
                x-go-name: CreationRound
            delegate_wallet:
                type: string
                x-go-name: DelegateWallet
            downtime:
                format: uint64
                type: integer
                x-go-name: Downtime
            is_killed:
                type: boolean
                x-go-name: IsKilled
            is_shutdown:
                type: boolean
                x-go-name: IsShutdown
            last_health_check:
                $ref: '#/definitions/Timestamp'
            num_delegates:
                format: int64
                type: integer
                x-go-name: NumDelegates
            public_key:
                type: string
                x-go-name: PublicKey
            rewards:
                $ref: '#/definitions/ProviderRewards'
            service_charge:
                format: double
                type: number
                x-go-name: ServiceCharge
            total_stake:
                $ref: '#/definitions/Coin'
            url:
                type: string
                x-go-name: BaseUrl
        type: object
        x-go-package: 0chain.net/smartcontract/dbs/event
    ValidatorAggregate:
        properties:
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            id:
                format: uint64
                type: integer
                x-go-name: ID
            is_killed:
                type: boolean
                x-go-name: IsKilled
            is_shutdown:
                type: boolean
                x-go-name: IsShutdown
            last_health_check:
                $ref: '#/definitions/Timestamp'
            round:
                format: int64
                type: integer
                x-go-name: Round
            service_charge:
                format: double
                type: number
                x-go-name: ServiceCharge
            total_rewards:
                $ref: '#/definitions/Coin'
            total_stake:
                $ref: '#/definitions/Coin'
            url:
                type: string
                x-go-name: URL
            validator_id:
                type: string
                x-go-name: ValidatorID
        type: object
        x-go-package: 0chain.net/smartcontract/dbs/event
    ValidatorSnapshot:
        properties:
            creation_round:
                format: int64
                type: integer
                x-go-name: CreationRound
            id:
                type: string
                x-go-name: ValidatorID
            is_killed:
                type: boolean
                x-go-name: IsKilled
            is_shutdown:
                type: boolean
                x-go-name: IsShutdown
            round:
                format: int64
                type: integer
                x-go-name: Round
            service_charge:
                format: double
                type: number
                x-go-name: ServiceCharge
            total_rewards:
                $ref: '#/definitions/Coin'
            total_stake:
                $ref: '#/definitions/Coin'
        type: object
        x-go-package: 0chain.net/smartcontract/dbs/event
    VerificationTicket:
        properties:
            signature:
                type: string
                x-go-name: Signature
            verifier_id:
                type: string
                x-go-name: VerifierID
        title: VerificationTicket - verification ticket for the block */
        type: object
        x-go-package: 0chain.net/chaincore/block
    VersionField:
        description: go:generate msgp -io=false -tests=false -v
        properties:
            version:
                description: Version of the entity
                type: string
                x-go-name: Version
        type: object
        x-go-package: 0chain.net/core/datastore
    Wrapper:
        title: Wrapper is a wrapper for entity.
        type: object
        x-go-package: 0chain.net/core/util/entitywrapper
    WriteMarker:
        type: object
        x-go-package: 0chain.net/smartcontract/storagesc
    challengePoolStat:
        properties:
            balance:
                $ref: '#/definitions/Coin'
            expiration:
                $ref: '#/definitions/Timestamp'
            finalized:
                type: boolean
                x-go-name: Finalized
            id:
                type: string
                x-go-name: ID
            start_time:
                $ref: '#/definitions/Timestamp'
        type: object
        x-go-package: 0chain.net/smartcontract/storagesc
    collectedRewardResponse:
        properties:
            collected_reward:
                format: int64
                type: integer
                x-go-name: CollectedReward
        type: object
        x-go-package: 0chain.net/smartcontract/storagesc
    freeStorageAllocationInput:
        properties:
            blobbers:
                items:
                    type: string
                type: array
                x-go-name: Blobbers
            marker:
                type: string
                x-go-name: Marker
            recipient_public_key:
                type: string
                x-go-name: RecipientPublicKey
        type: object
        x-go-package: 0chain.net/smartcontract/storagesc
    fullBlock:
        properties:
            chain_id:
                type: string
                x-go-name: ChainId
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            creation_date:
                format: int64
                type: integer
                x-go-name: CreationDate
            hash:
                type: string
                x-go-name: Hash
            id:
                format: uint64
                type: integer
                x-go-name: ID
            magic_block_hash:
                type: string
                x-go-name: MagicBlockHash
            merkle_tree_root:
                type: string
                x-go-name: MerkleTreeRoot
            miner_id:
                type: string
                x-go-name: MinerID
            num_txns:
                format: int64
                type: integer
                x-go-name: NumTxns
            prev_hash:
                type: string
                x-go-name: PrevHash
            receipt_merkle_tree_root:
                type: string
                x-go-name: ReceiptMerkleTreeRoot
            round:
                format: int64
                type: integer
                x-go-name: Round
            round_random_seed:
                format: int64
                type: integer
                x-go-name: RoundRandomSeed
            round_timeout_count:
                format: int64
                type: integer
                x-go-name: RoundTimeoutCount
            running_txn_count:
                type: string
                x-go-name: RunningTxnCount
            signature:
                type: string
                x-go-name: Signature
            state_changes_count:
                format: int64
                type: integer
                x-go-name: StateChangesCount
            state_hash:
                type: string
                x-go-name: StateHash
            transactions:
                items:
                    $ref: '#/definitions/Transaction'
                type: array
                x-go-name: Transactions
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            version:
                type: string
                x-go-name: Version
        type: object
        x-go-package: 0chain.net/smartcontract/storagesc
    readMarkerResponse:
        properties:
            CreatedAt:
                format: date-time
                type: string
            ID:
                format: uint64
                type: integer
            UpdatedAt:
                format: date-time
                type: string
            allocation_id:
                type: string
                x-go-name: AllocationID
            auth_ticket:
                type: string
                x-go-name: AuthTicket
            blobber_id:
                type: string
                x-go-name: BlobberID
            block_number:
                format: int64
                type: integer
                x-go-name: BlockNumber
            client_id:
                type: string
                x-go-name: ClientID
            owner_id:
                type: string
                x-go-name: OwnerID
            payer_id:
                type: string
                x-go-name: PayerID
            read_counter:
                format: int64
                type: integer
                x-go-name: ReadCounter
            read_size:
                format: double
                type: number
                x-go-name: ReadSize
            signature:
                type: string
                x-go-name: Signature
            timestamp:
                format: int64
                type: integer
                x-go-name: Timestamp
            transaction_id:
                type: string
                x-go-name: TransactionID
        type: object
        x-go-name: ReadMarkerResponse
        x-go-package: 0chain.net/smartcontract/storagesc
    readMarkersCount:
        properties:
            read_markers_count:
                format: int64
                type: integer
                x-go-name: ReadMarkersCount
        type: object
        x-go-package: 0chain.net/smartcontract/storagesc
    readPool:
        properties:
            balance:
                $ref: '#/definitions/Coin'
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            id:
                format: uint64
                type: integer
                x-go-name: ID
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            user_id:
                type: string
                x-go-name: UserID
        type: object
        x-go-name: ReadPool
        x-go-package: 0chain.net/smartcontract/dbs/event
    stakePoolStat:
        properties:
            balance:
                $ref: '#/definitions/Coin'
            delegate:
                items:
                    $ref: '#/definitions/DelegatePoolStat'
                type: array
                x-go-name: Delegate
            penalty:
                $ref: '#/definitions/Coin'
            pool_id:
                type: string
                x-go-name: ID
            rewards:
                $ref: '#/definitions/Coin'
            settings:
                $ref: '#/definitions/Settings'
            stake_total:
                $ref: '#/definitions/Coin'
            total_rewards:
                $ref: '#/definitions/Coin'
        type: object
        x-go-name: StakePoolStat
        x-go-package: 0chain.net/smartcontract/storagesc
    storageNodeResponse:
        properties:
            allocated:
                format: int64
                type: integer
                x-go-name: Allocated
            capacity:
                format: int64
                type: integer
                x-go-name: Capacity
            challenges_completed:
                format: int64
                type: integer
                x-go-name: ChallengesCompleted
            challenges_passed:
                format: int64
                type: integer
                x-go-name: ChallengesPassed
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            creation_round:
                format: int64
                type: integer
                x-go-name: CreationRound
            data_read_last_reward_round:
                format: double
                type: number
                x-go-name: DataReadLastRewardRound
            id:
                type: string
                x-go-name: ID
            is_killed:
                type: boolean
                x-go-name: IsKilled
            is_restricted:
                type: boolean
                x-go-name: IsRestricted
            is_shutdown:
                type: boolean
                x-go-name: IsShutdown
            last_health_check:
                $ref: '#/definitions/Timestamp'
            last_reward_data_read_round:
                format: int64
                type: integer
                x-go-name: LastRewardDataReadRound
            not_available:
                type: boolean
                x-go-name: NotAvailable
            read_data:
                format: int64
                type: integer
                x-go-name: ReadData
            reward_round:
                $ref: '#/definitions/RewardRound'
            saved_data:
                format: int64
                type: integer
                x-go-name: SavedData
            stake_pool_settings:
                $ref: '#/definitions/Settings'
            staked_capacity:
                format: int64
                type: integer
                x-go-name: StakedCapacity
            terms:
                $ref: '#/definitions/Terms'
            total_offers:
                $ref: '#/definitions/Coin'
            total_service_charge:
                $ref: '#/definitions/Coin'
            total_stake:
                $ref: '#/definitions/Coin'
            uncollected_service_charge:
                $ref: '#/definitions/Coin'
            url:
                type: string
                x-go-name: BaseURL
            used_allocation:
                format: int64
                type: integer
                x-go-name: UsedAllocation
        title: StorageNode represents Blobber configurations.
        type: object
        x-go-package: 0chain.net/smartcontract/storagesc
    storageNodesResponse:
        properties:
            Nodes:
                items:
                    $ref: '#/definitions/storageNodeResponse'
                type: array
        type: object
        x-go-package: 0chain.net/smartcontract/storagesc
    stringArray:
        items:
            type: string
        type: array
        x-go-package: 0chain.net/smartcontract/storagesc
    userPoolStat:
        properties:
            pools:
                additionalProperties:
                    items:
                        $ref: '#/definitions/DelegatePoolStat'
                    type: array
                type: object
                x-go-name: Pools
        type: object
        x-go-name: UserPoolStat
        x-go-package: 0chain.net/smartcontract/storagesc
    validatorNodeResponse:
        properties:
            delegate_wallet:
                description: StakePoolSettings
                type: string
                x-go-name: DelegateWallet
            is_killed:
                type: boolean
                x-go-name: IsKilled
            is_shutdown:
                type: boolean
                x-go-name: IsShutdown
            last_health_check:
                $ref: '#/definitions/Timestamp'
            num_delegates:
                format: int64
                type: integer
                x-go-name: NumDelegates
            public_key:
                type: string
                x-go-name: PublicKey
            service_charge:
                format: double
                type: number
                x-go-name: ServiceCharge
            stake_total:
                $ref: '#/definitions/Coin'
            total_service_charge:
                $ref: '#/definitions/Coin'
            uncollected_service_charge:
                $ref: '#/definitions/Coin'
            url:
                type: string
                x-go-name: BaseUrl
            validator_id:
                type: string
                x-go-name: ValidatorID
        type: object
        x-go-package: 0chain.net/smartcontract/storagesc
    writeMarkerCountResponse:
        properties:
            count:
                format: int64
                type: integer
                x-go-name: Count
        type: object
        x-go-name: WriteMarkerCountResponse
        x-go-package: 0chain.net/smartcontract/storagesc
    writeMarkerResponse:
        properties:
            CreatedAt:
                format: date-time
                type: string
            ID:
                format: uint64
                type: integer
            UpdatedAt:
                format: date-time
                type: string
            allocation_id:
                type: string
                x-go-name: AllocationID
            allocation_root:
                type: string
                x-go-name: AllocationRoot
            blobber_id:
                type: string
                x-go-name: BlobberID
            block_number:
                format: int64
                type: integer
                x-go-name: BlockNumber
            client_id:
                type: string
                x-go-name: ClientID
            previous_allocation_root:
                type: string
                x-go-name: PreviousAllocationRoot
            signature:
                type: string
                x-go-name: Signature
            size:
                format: int64
                type: integer
                x-go-name: Size
            timestamp:
                format: int64
                type: integer
                x-go-name: Timestamp
            transaction_id:
                type: string
                x-go-name: TransactionID
        type: object
        x-go-name: WriteMarkerResponse
        x-go-package: 0chain.net/smartcontract/storagesc
info:
    title: 'Storage Smart Contract Public API:'
    version: 0.1.0
paths:
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/alloc-blobber-term:
        get:
            description: |-
                Get terms of storage service for a specific allocation and blobber (write_price, read_price) if blobber_id is specified.
                Otherwise, get terms of service for all blobbers of the allocation.
            operationId: GetAllocBlobberTerms
            parameters:
                - description: id of allocation
                  in: query
                  name: allocation_id
                  required: true
                  type: string
                - description: id of blobber
                  in: query
                  name: blobber_id
                  type: string
                - description: offset
                  in: query
                  name: offset
                  type: string
                - description: limit
                  in: query
                  name: limit
                  type: string
                - description: desc or asc
                  in: query
                  name: sort
                  type: string
            responses:
                "200":
                    description: AllocationBlobberTerm
                    schema:
                        items:
                            $ref: '#/definitions/AllocationBlobberTerm'
                        type: array
                "400":
                    description: ""
                "500":
                    description: ""
            summary: Get allocation/blobber terms of service.
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/alloc_blobbers:
        get:
            description: |-
                Returns list of all active blobbers that match the allocation request, or an error if not enough blobbers are available.
                Before the user attempts to create an allocation, they can use this endpoint to get a list of blobbers that match the allocation request. This includes:

                Read and write price ranges

                Data and parity shards

                Size

                Restricted status
            operationId: GetAllocBlobbers
            parameters:
                - description: Allocation request data, in valid JSON format, following the allocationBlobbersRequest struct.
                  in: query
                  name: allocation_data
                  required: true
                  type: string
                - description: offset
                  in: query
                  name: offset
                  type: string
                - description: limit
                  in: query
                  name: limit
                  type: string
                - description: desc or asc
                  in: query
                  name: sort
                  type: string
            responses:
                "200":
                    description: stringArray
                    schema:
                        $ref: '#/definitions/stringArray'
                "400":
                    description: ""
            summary: Get blobbers for allocation request.
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/alloc_write_marker_count:
        get:
            description: Returns the count of write markers for an allocation given its id.
            operationId: GetAllocWriteMarkerCount
            parameters:
                - description: allocation for which to get challenge pools statistics
                  in: query
                  name: allocation_id
                  required: true
                  type: string
            responses:
                "200":
                    description: writeMarkerCountResponse
                    schema:
                        $ref: '#/definitions/writeMarkerCountResponse'
                "400":
                    description: ""
            summary: Count of write markers for an allocation.
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/allocation:
        get:
            description: Retrieves information about a specific allocation given its id.
            operationId: GetAllocation
            parameters:
                - description: Id of the allocation to get
                  in: query
                  name: allocation
                  required: true
                  type: string
            responses:
                "200":
                    description: StorageAllocationBlobbers
                    schema:
                        $ref: '#/definitions/StorageAllocationBlobbers'
                "400":
                    description: ""
                "500":
                    description: ""
            summary: Get allocation information
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/allocation-update-min-lock:
        get:
            description: Based on the allocation request data, this endpoint calculates the minimum lock demand for updating an allocation, which represents the cost of the allocation.
            operationId: GetAllocationUpdateMinLock
            parameters:
                - description: Update allocation request data, in valid JSON format, following the updateAllocationRequest struct.
                  in: query
                  name: data
                  required: true
                  type: string
            responses:
                "200":
                    description: AllocationUpdateMinLockResponse
                    schema:
                        $ref: '#/definitions/AllocationUpdateMinLockResponse'
                "400":
                    description: ""
                "500":
                    description: ""
            summary: Calculates the cost for updating an allocation.
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/allocations:
        get:
            description: Gets a list of allocation information for allocations owned by the client. Supports pagination.
            operationId: GetAllocations
            parameters:
                - description: owner of allocations we wish to list
                  in: query
                  name: client
                  required: true
                  type: string
                - description: offset
                  in: query
                  name: offset
                  type: string
                - description: limit
                  in: query
                  name: limit
                  type: string
                - description: desc or asc
                  in: query
                  name: sort
                  type: string
            responses:
                "200":
                    description: StorageAllocation
                    schema:
                        items:
                            $ref: '#/definitions/StorageAllocation'
                        type: array
                "400":
                    description: ""
                "500":
                    description: ""
            summary: Get client allocations.
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/blobber-challenges:
        get:
            description: Gets list of challenges for a blobber in a specific time interval, given the blobber id.
            operationId: GetBlobberChallenges
            parameters:
                - description: id of blobber for which to get challenges
                  in: query
                  name: id
                  required: true
                  type: string
                - description: start time of the interval for which to get challenges (epoch timestamp in seconds)
                  in: query
                  name: from
                  required: true
                  type: string
                - description: end time of interval for which to get challenges (epoch timestamp in seconds)
                  in: query
                  name: to
                  required: true
                  type: string
            responses:
                "200":
                    description: Challenges
                    schema:
                        $ref: '#/definitions/Challenges'
                "400":
                    description: ""
                "404":
                    description: ""
                "500":
                    description: ""
            summary: Get blobber challenges.
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/blobber_ids:
        get:
            description: Returns list of blobber ids given their urls. Supports pagination.
            operationId: GetBlobberIds
            parameters:
                - description: offset
                  in: query
                  name: offset
                  type: string
                - description: limit
                  in: query
                  name: limit
                  type: string
                - description: desc or asc
                  in: query
                  name: sort
                  type: string
                - description: list of blobber URLs
                  in: query
                  name: blobber_urls
                  required: true
                  type: string
            responses:
                "200":
                    description: stringArray
                    schema:
                        $ref: '#/definitions/stringArray'
                "400":
                    description: ""
            summary: Get blobber ids by blobber urls.
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/block:
        get:
            description: Returns block information for a given block hash or block round.
            operationId: GetBlock
            parameters:
                - description: Hash (or identifier) of the block
                  in: query
                  name: block_hash
                  type: string
                - description: block created closest to the date (epoch timestamp in seconds)
                  in: query
                  name: date
                  type: string
                - description: block round
                  in: query
                  name: round
                  type: string
            responses:
                "200":
                    description: Block
                    schema:
                        $ref: '#/definitions/Block'
                "400":
                    description: ""
                "500":
                    description: ""
            summary: Gets block information
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/collected_reward:
        get:
            description: |-
                Returns collected reward for a client_id.

                > Note: start-date and end-date resolves to the closest block number for those timestamps on the network.

                > Note: Using start/end-block and start/end-date together would only return results with start/end-block
            operationId: GetCollectedReward
            parameters:
                - description: start block number from which to start collecting rewards
                  in: query
                  name: start-block
                  type: string
                - description: end block number till which to collect rewards
                  in: query
                  name: end-block
                  type: string
                - description: start date from which to start collecting rewards
                  in: query
                  name: start-date
                  type: string
                - description: end date till which to collect rewards
                  in: query
                  name: end-date
                  type: string
                - description: number of data points in response
                  in: query
                  name: data-points
                  type: string
                - description: ID of the client for which to get rewards
                  in: query
                  name: client-id
                  required: true
                  type: string
            responses:
                "200":
                    description: collectedRewardResponse
                    schema:
                        $ref: '#/definitions/collectedRewardResponse'
                "400":
                    description: ""
            summary: Get collected reward.
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/count_readmarkers:
        get:
            description: Returns the count of read markers for a given allocation.
            operationId: GetReadMarkersCount
            parameters:
                - description: count read markers for this allocation
                  in: query
                  name: allocation_id
                  required: true
                  type: string
            responses:
                "200":
                    description: readMarkersCount
                    schema:
                        $ref: '#/definitions/readMarkersCount'
                "500":
                    description: ""
            summary: Gets read markers count.
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/errors:
        get:
            description: Retrieves a list of errors associated with a specific transaction. Supports pagination.
            operationId: GetTransactionErrors
            parameters:
                - description: Hash of the transactions to get errors of.
                  in: query
                  name: transaction_hash
                  required: true
                  type: string
                - description: offset
                  in: query
                  name: offset
                  type: string
                - description: limit
                  in: query
                  name: limit
                  type: string
                - description: desc or asc
                  in: query
                  name: sort
                  type: string
            responses:
                "200":
                    description: Error
                    schema:
                        items:
                            $ref: '#/definitions/Error'
                        type: array
                "400":
                    description: ""
                "500":
                    description: ""
            summary: Get transaction errors.
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/free_alloc_blobbers:
        get:
            description: |-
                Returns a list of all active blobbers that match the free allocation request.

                Before the user attempts to create a free allocation, they can use this endpoint to get a list of blobbers that match the allocation request. This includes:

                Read and write price ranges

                Data and parity shards

                Size

                Restricted status
            operationId: GetFreeAllocBlobbers
            parameters:
                - description: Free Allocation request data, in valid JSON format, following the freeStorageAllocationInput struct.
                  in: query
                  name: free_allocation_data
                  required: true
                  type: string
            responses:
                "200":
                    description: stringArray
                    schema:
                        $ref: '#/definitions/stringArray'
                "400":
                    description: ""
            summary: Get free allocation blobbers.
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/get-blobber-allocations:
        get:
            description: Gets a list of allocation information for allocations hosted on a specific blobber. Supports pagination.
            operationId: GetBlobberAllocations
            parameters:
                - description: blobber id of allocations we wish to list
                  in: query
                  name: blobber_id
                  required: true
                  type: string
                - description: offset
                  in: query
                  name: offset
                  type: string
                - description: limit
                  in: query
                  name: limit
                  type: string
                - description: desc or asc by created date
                  in: query
                  name: sort
                  type: string
            responses:
                "200":
                    description: StorageAllocation
                    schema:
                        items:
                            $ref: '#/definitions/StorageAllocation'
                        type: array
                "400":
                    description: ""
                "500":
                    description: ""
            summary: Get blobber allocations.
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/get_blocks:
        get:
            description: Gets block information for a list of blocks given a range of block numbers. Supports pagination.
            operationId: GetBlocks
            parameters:
                - description: first round to get blocks for.
                  in: query
                  name: start
                  required: true
                  type: string
                - description: last round to get blocks for.
                  in: query
                  name: end
                  required: true
                  type: string
                - description: offset
                  in: query
                  name: offset
                  type: string
                - description: limit
                  in: query
                  name: limit
                  type: string
                - description: desc or asc
                  in: query
                  name: sort
                  type: string
            responses:
                "200":
                    description: fullBlock
                    schema:
                        items:
                            $ref: '#/definitions/fullBlock'
                        type: array
                "400":
                    description: ""
                "500":
                    description: ""
            summary: Get blocks for round range.
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/get_validator:
        get:
            description: Retrieve information for a validator given its id.
            operationId: GetValidator
            parameters:
                - description: validator on which to get information
                  in: query
                  name: validator_id
                  required: true
                  type: string
            responses:
                "200":
                    description: validatorNodeResponse
                    schema:
                        $ref: '#/definitions/validatorNodeResponse'
                "400":
                    description: ""
                "500":
                    description: ""
            summary: Get validator information.
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/getBlobber:
        get:
            description: Retrieves information about a specific blobber given its id.
            operationId: GetBlobber
            parameters:
                - description: blobber for which to return information from the sharders
                  in: query
                  name: blobber_id
                  required: true
                  type: string
            responses:
                "200":
                    description: storageNodeResponse
                    schema:
                        $ref: '#/definitions/storageNodeResponse'
                "400":
                    description: ""
                "500":
                    description: ""
            summary: Get blobber information.
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/getChallengePoolStat:
        get:
            description: Retrieve statistic for all locked tokens of a challenge pool.
            operationId: GetChallengePoolStat
            parameters:
                - description: allocation for which to get challenge pools statistics
                  in: query
                  name: allocation_id
                  required: true
                  type: string
            responses:
                "200":
                    description: challengePoolStat
                    schema:
                        $ref: '#/definitions/challengePoolStat'
                "400":
                    description: ""
            summary: Get challenge pool statistics.
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/getExpiredAllocations:
        get:
            description: Retrieves a list of expired allocations ids associated with a specified blobber.
            operationId: GetExpiredAllocations
            parameters:
                - description: The identifier of the blobber to retrieve expired allocations for.
                  in: query
                  name: blobber_id
                  required: true
                  type: string
            responses:
                "200":
                    description: ""
                "500":
                    description: ""
            summary: Get expired allocations.
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/getReadPoolStat:
        get:
            description: Retrieve statistic for all locked tokens of the read pool of a client given their id.
            operationId: GetReadPoolStat
            parameters:
                - description: client for which to get read pools statistics
                  in: query
                  name: client_id
                  required: true
                  type: string
            responses:
                "200":
                    description: readPool
                    schema:
                        $ref: '#/definitions/readPool'
                "400":
                    description: ""
            summary: Get read pool statistics.
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/getStakePoolStat:
        get:
            description: Retrieve statistic for all locked tokens of a stake pool associated with a specific client and provider. Provider can be a blobber, validator, or authorizer.
            operationId: GetStakePoolStat
            parameters:
                - description: id of a provider
                  in: query
                  name: provider_id
                  required: true
                  type: string
                - description: type of the provider, possible values are 3 (blobber), 4 (validator), 5 (authorizer)
                  in: query
                  name: provider_type
                  required: true
                  type: string
            responses:
                "200":
                    description: stakePoolStat
                    schema:
                        $ref: '#/definitions/stakePoolStat'
                "400":
                    description: ""
                "500":
                    description: ""
            summary: Get stake pool statistics.
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/getUserStakePoolStat:
        get:
            description: Retrieve statistic for a user's stake pools given the user's id.
            operationId: GetUserStakePoolStat
            parameters:
                - description: client for which to get stake pool information
                  in: query
                  name: client_id
                  required: true
                  type: string
                - description: Pagination offset to specify the starting point of the result set.
                  in: query
                  name: offset
                  type: string
                - description: Maximum number of results to return.
                  in: query
                  name: limit
                  type: string
                - description: desc or asc
                  in: query
                  name: sort
                  type: string
            responses:
                "200":
                    description: userPoolStat
                    schema:
                        $ref: '#/definitions/userPoolStat'
                "400":
                    description: ""
            summary: Get user stake pool statistics.
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/getWriteMarkers:
        get:
            description: Retrieves writemarkers of an allocation given the allocation id. Supports pagination.
            operationId: GetAllocationWriteMarkers
            parameters:
                - description: List write markers for this allocation
                  in: query
                  name: allocation_id
                  required: true
                  type: string
                - description: offset
                  in: query
                  name: offset
                  type: string
                - description: limit
                  in: query
                  name: limit
                  type: string
                - description: desc or asc
                  in: query
                  name: sort
                  type: string
            responses:
                "200":
                    description: WriteMarker
                    schema:
                        items:
                            $ref: '#/definitions/WriteMarker'
                        type: array
                "400":
                    description: ""
                "500":
                    description: ""
            summary: Get write markers.
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/getblobbers:
        get:
            description: Retrieve active blobbers' ids. Retrieved  blobbers should be alive (e.g. excluding blobbers with zero capacity).
            operationId: GetBlobbers
            parameters:
                - description: offset
                  in: query
                  name: offset
                  type: string
                - description: limit
                  in: query
                  name: limit
                  type: string
                - description: desc or asc
                  in: query
                  name: sort
                  type: string
            responses:
                "200":
                    description: storageNodesResponse
                    schema:
                        $ref: '#/definitions/storageNodesResponse'
                "500":
                    description: ""
            summary: Get active blobbers ids.
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/getchallenge:
        get:
            description: Returns challenge information given its id.
            operationId: GetChallenge
            parameters:
                - description: id of challenge
                  in: query
                  name: challenge
                  required: true
                  type: string
            responses:
                "200":
                    description: StorageChallengeResponse
                    schema:
                        $ref: '#/definitions/StorageChallengeResponse'
                "400":
                    description: ""
                "404":
                    description: ""
                "500":
                    description: ""
            summary: Get challenge information.
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/latestreadmarker:
        get:
            description: Retrievs latest read marker for a client and a blobber.
            operationId: GetLatestReadmarker
            parameters:
                - description: ID of the client for which to get the latest read marker.
                  in: query
                  name: client
                  required: true
                  type: string
                - description: blobber ID associated with the read marker.
                  in: query
                  name: blobber
                  required: true
                  type: string
                - description: Allocation ID associated with the read marker.
                  in: query
                  name: allocation
                  type: string
            responses:
                "200":
                    description: ReadMarker
                    schema:
                        $ref: '#/definitions/ReadMarker'
                "500":
                    description: ""
            summary: Get latest read marker.
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/openchallenges:
        get:
            description: Retrieves open challenges for a blobber given its id.
            operationId: GetOpenChallenges
            parameters:
                - description: id of blobber for which to get open challenges
                  in: query
                  name: blobber
                  required: true
                  type: string
                - description: offset
                  in: query
                  name: offset
                  type: string
                - description: limit
                  in: query
                  name: limit
                  type: string
                - description: desc or asc
                  in: query
                  name: sort
                  type: string
                - description: Starting round number for fetching challenges.
                  in: query
                  name: from
                  type: string
            responses:
                "200":
                    description: ChallengesResponse
                    schema:
                        $ref: '#/definitions/ChallengesResponse'
                "400":
                    description: ""
                "404":
                    description: ""
                "500":
                    description: ""
            summary: Get blobber open challenges.
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/readmarkers:
        get:
            description: Retrieves read markers given an allocation id or an auth ticket. Supports pagination.
            operationId: GetReadMarkers
            parameters:
                - description: filter in only read markers by this allocation. Either this or auth_ticket must be provided.
                  in: query
                  name: allocation_id
                  type: string
                - description: filter in only read markers using this auth ticket. Either this or allocation_id must be provided.
                  in: query
                  name: auth_ticket
                  type: string
                - description: offset
                  in: query
                  name: offset
                  type: string
                - description: limit
                  in: query
                  name: limit
                  type: string
                - description: desc or asc
                  in: query
                  name: sort
                  type: string
            responses:
                "200":
                    description: readMarkerResponse
                    schema:
                        items:
                            $ref: '#/definitions/readMarkerResponse'
                        type: array
                "500":
                    description: ""
            summary: Get read markers.
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/replicate-authorizer-aggregates:
        get:
            description: '> Note: This endpoint is DEPRECATED and will be removed in the next release.'
            operationId: replicateAuthorizerAggregates
            parameters:
                - description: round number to start from
                  in: query
                  name: round
                  type: string
                - description: offset
                  in: query
                  name: offset
                  type: string
                - description: limit
                  in: query
                  name: limit
                  type: string
                - description: desc or asc
                  in: query
                  name: sort
                  type: string
            responses:
                "200":
                    description: AuthorizerAggregate
                    schema:
                        $ref: '#/definitions/AuthorizerAggregate'
                "500":
                    description: ""
            summary: Gets list of authorizer aggregate records
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/replicate-blobber-aggregates:
        get:
            description: '> Note: This endpoint is DEPRECATED and will be removed in the next release.'
            operationId: replicateBlobberAggregates
            parameters:
                - description: round number to start from
                  in: query
                  name: round
                  type: string
                - description: offset
                  in: query
                  name: offset
                  type: string
                - description: limit
                  in: query
                  name: limit
                  type: string
                - description: desc or asc
                  in: query
                  name: sort
                  type: string
            responses:
                "200":
                    description: BlobberAggregate
                    schema:
                        $ref: '#/definitions/BlobberAggregate'
                "500":
                    description: ""
            summary: Gets list of blobber aggregate records
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/replicate-miner-aggregates:
        get:
            description: '> Note: This endpoint is DEPRECATED and will be removed in the next release.'
            operationId: replicateMinerAggregates
            parameters:
                - description: round number to start from
                  in: query
                  name: round
                  type: string
                - description: offset
                  in: query
                  name: offset
                  type: string
                - description: limit
                  in: query
                  name: limit
                  type: string
                - description: desc or asc
                  in: query
                  name: sort
                  type: string
            responses:
                "200":
                    description: MinerAggregate
                    schema:
                        $ref: '#/definitions/MinerAggregate'
                "500":
                    description: ""
            summary: Gets list of miner aggregate records
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/replicate-sharder-aggregates:
        get:
            description: '> Note: This endpoint is DEPRECATED and will be removed in the next release.'
            operationId: replicateSharderAggregates
            parameters:
                - description: round number to start from
                  in: query
                  name: round
                  type: string
                - description: offset
                  in: query
                  name: offset
                  type: string
                - description: limit
                  in: query
                  name: limit
                  type: string
                - description: desc or asc
                  in: query
                  name: sort
                  type: string
            responses:
                "200":
                    description: SharderAggregate
                    schema:
                        $ref: '#/definitions/SharderAggregate'
                "500":
                    description: ""
            summary: Gets list of sharder aggregate records
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/replicate-snapshots:
        get:
            description: '> Note: This endpoint is DEPRECATED and will be removed in the next release.'
            operationId: replicateSnapshots
            parameters:
                - description: offset
                  in: query
                  name: offset
                  type: string
                - description: limit
                  in: query
                  name: limit
                  type: string
                - description: desc or asc
                  in: query
                  name: sort
                  type: string
                - description: round number to start from
                  in: query
                  name: round
                  type: string
            responses:
                "200":
                    description: Snapshot
                    schema:
                        items:
                            $ref: '#/definitions/Snapshot'
                        type: array
                "500":
                    description: ""
            summary: Gets list of global snapshot records
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/replicate-user-aggregates:
        get:
            description: '> Note: This endpoint is DEPRECATED and will be removed in the next release.'
            operationId: replicateUserAggregates
            parameters:
                - description: round number to start from
                  in: query
                  name: round
                  type: string
                - description: offset
                  in: query
                  name: offset
                  type: string
                - description: limit
                  in: query
                  name: limit
                  type: string
                - description: desc or asc
                  in: query
                  name: sort
                  type: string
            responses:
                "200":
                    description: UserAggregate
                    schema:
                        $ref: '#/definitions/UserAggregate'
                "500":
                    description: ""
            summary: Gets list of user aggregate records
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/replicate-validator-aggregates:
        get:
            description: '> Note: This endpoint is DEPRECATED and will be removed in the next release.'
            operationId: replicateValidatorAggregates
            parameters:
                - description: round number to start from
                  in: query
                  name: round
                  type: string
                - description: offset
                  in: query
                  name: offset
                  type: string
                - description: limit
                  in: query
                  name: limit
                  type: string
                - description: desc or asc
                  in: query
                  name: sort
                  type: string
            responses:
                "200":
                    description: ValidatorAggregate
                    schema:
                        $ref: '#/definitions/ValidatorAggregate'
                "500":
                    description: ""
            summary: Gets list of validator aggregate records
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/search:
        get:
            description: |-
                Generic search endpoint that can be used to search for blocks, transactions, users, etc.

                If the input can be converted to an integer, it is interpreted as a round number and information for the matching block is returned.

                Otherwise, the input is treated as string and matched against block hash, transaction hash, user id. If a match is found the matching object is returned.
            operationId: search
            parameters:
                - description: 'Generic query string, supported inputs: Block hash, Round num, Transaction hash, Wallet address'
                  in: query
                  name: searchString
                  required: true
                  type: string
            responses:
                "200":
                    description: ""
                "400":
                    description: ""
                "500":
                    description: ""
            summary: Generic search endpoint.
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/storage-config:
        get:
            description: Retrieve the current storage smart contract settings.
            operationId: GetStorageConfig
            responses:
                "200":
                    description: StringMap
                    schema:
                        $ref: '#/definitions/StringMap'
                "400":
                    description: ""
            summary: Get storage smart contract settings.
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/transaction:
        get:
            description: Gets transaction information given transaction hash.
            operationId: GetTransaction
            parameters:
                - description: The hash of the transaction to retrieve.
                  in: query
                  name: transaction_hash
                  required: true
                  type: string
            responses:
                "200":
                    description: Transaction
                    schema:
                        $ref: '#/definitions/Transaction'
                "500":
                    description: ""
            summary: Get transaction information
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/transactions:
        get:
            description: |-
                Gets filtered list of transaction information. The list is filtered on the first valid input, or otherwise all the endpoint returns all translations.

                Filters processed in the order: client id, to client id, block hash and start, end blocks.
            operationId: GetTransactions
            parameters:
                - description: restrict to transactions sent by the specified client
                  in: query
                  name: client_id
                  type: string
                - description: restrict to transactions sent to a specified client
                  in: query
                  name: to_client_id
                  type: string
                - description: restrict to transactions in indicated block
                  in: query
                  name: block_hash
                  type: string
                - description: offset
                  in: query
                  name: offset
                  type: string
                - description: limit
                  in: query
                  name: limit
                  type: string
                - description: desc or asc
                  in: query
                  name: sort
                  type: string
                - description: restrict to transactions within specified start block and end block
                  in: query
                  name: start
                  type: string
                - description: restrict to transactions within specified start block and end block
                  in: query
                  name: end
                  type: string
            responses:
                "200":
                    description: Transaction
                    schema:
                        items:
                            $ref: '#/definitions/Transaction'
                        type: array
                "400":
                    description: ""
                "500":
                    description: ""
            summary: "Get Transactions\tlist."
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/validators:
        get:
            description: Retrieves a list of validators, optionally filtered by whether they are active and/or stakable.
            operationId: GetValidators
            parameters:
                - description: Filter validators based on whether they are currently active. Set to 'true' to filter only active validators.
                  in: query
                  name: active
                  type: string
                - description: Filter validators based on whether they are currently stakable. Set to 'true' to filter only stakable validators.
                  in: query
                  name: stakable
                  type: string
                - description: The starting point for pagination.
                  in: query
                  name: offset
                  type: integer
                - description: The maximum number of validators to return.
                  in: query
                  name: limit
                  type: integer
                - description: Order of the validators returned, e.g., 'asc' for ascending.
                  in: query
                  name: order
                  type: string
            responses:
                "200":
                    description: validatorNodeResponse
                    schema:
                        items:
                            $ref: '#/definitions/validatorNodeResponse'
                        type: array
                "400":
                    description: ""
            summary: Get validators.
            tags:
                - storage-sc
    /v1/screst/6dba10422e368813802877a85039d3985d96760ed844092319743fb3a76712d7/writemarkers:
        get:
            description: Retrieves a list of write markers satisfying filter. Supports pagination.
            operationId: GetWriteMarkers
            parameters:
                - description: offset
                  in: query
                  name: offset
                  type: string
                - description: limit
                  in: query
                  name: limit
                  type: string
                - description: asc or desc
                  in: query
                  name: sort
                  type: string
            responses:
                "200":
                    description: writeMarkerResponse
                    schema:
                        items:
                            $ref: '#/definitions/writeMarkerResponse'
                        type: array
                "400":
                    description: ""
                "500":
                    description: ""
            summary: Get write markers.
            tags:
                - storage-sc
produces:
    - application/json
schemes:
    - https
swagger: "2.0"
