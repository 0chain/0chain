stages:
- prepare
- check
- build
- test

.template: &env-info
  before_script:
  - hostname && hostname -I
  - env | grep -e CI_COMMIT -e CI_PIPELINE

build-base:
  <<: *env-info
  stage: prepare
  tags:
  - normal
  script:
  - ./docker.local/bin/build.base.sh

unit-tests:
  <<: *env-info
  stage: check
  allow_failure: true
  tags:
  - normal
  script:
  - ./docker.local/bin/unit_test.sh --ci

build-miners:
  <<: *env-info
  stage: build
  tags:
  - normal
  script:
  - ./docker.local/bin/build.miners-integration-tests.sh
  - docker login www.0chain-ci.net:5050 -u $DEPLOY_USERNAME -p $DEPLOY_PASSWORD 
  - docker tag miner www.0chain-ci.net:5050/root/0chain:miner-$CI_COMMIT_SHORT_SHA
  - docker tag miner www.0chain-ci.net:5050/root/0chain:miner-latest
  - docker push www.0chain-ci.net:5050/root/0chain:miner-$CI_COMMIT_SHORT_SHA
  - docker push www.0chain-ci.net:5050/root/0chain:miner-latest

build-sharders:
  <<: *env-info
  stage: build
  tags:
  - normal
  script:
  - ./docker.local/bin/build.sharders-integration-tests.sh
  - docker login www.0chain-ci.net:5050 -u $DEPLOY_USERNAME -p $DEPLOY_PASSWORD 
  - docker tag sharder www.0chain-ci.net:5050/root/0chain:sharder-$CI_COMMIT_SHORT_SHA
  - docker tag sharder www.0chain-ci.net:5050/root/0chain:sharder-latest
  - docker push www.0chain-ci.net:5050/root/0chain:sharder-$CI_COMMIT_SHORT_SHA
  - docker push www.0chain-ci.net:5050/root/0chain:sharder-latest

.template: &run-integration-tests
  before_script:
  - pwd
  - hostname && hostname -I
  - env | grep -e CI_COMMIT -e CI_PIPELINE
  - docker pull www.0chain-ci.net:5050/root/0chain:miner-latest
  - docker pull www.0chain-ci.net:5050/root/0chain:sharder-latest
  - docker tag  www.0chain-ci.net:5050/root/0chain:miner-latest miner
  - docker tag  www.0chain-ci.net:5050/root/0chain:sharder-latest sharder
  - setsebool -P selinuxuser_execheap 1
  - ./docker.local/bin/init.setup.sh
  - ./docker.local/bin/setup_network.sh || true
  - ./docker.local/bin/sync_clock.sh

run-view-change-1:
  <<: *run-integration-tests
  stage: test
  tags:
  - virtual
  script:
  - ./docker.local/bin/start.conductor.sh view-change-1

run-view-change-2:
  <<: *run-integration-tests
  stage: test
  tags:
  - virtual
  script:
  - ./docker.local/bin/start.conductor.sh view-change-2

run-view-change-3:
  <<: *run-integration-tests
  stage: test
  tags:
  - virtual
  script:
  - ./docker.local/bin/start.conductor.sh view-change-3

run-blockchain-1:
  <<: *run-integration-tests
  stage: test
  tags:
  - virtual
  script:
  - ./docker.local/bin/start.conductor.sh blockchain-1

run-blockchain-2:
  <<: *run-integration-tests
  stage: test
  tags:
  - virtual
  script:
  - ./docker.local/bin/start.conductor.sh blockchain-2
