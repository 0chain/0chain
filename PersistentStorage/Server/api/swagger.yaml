---
swagger: "2.0"
info:
  version: "0.0.0"
  title: "0chain Services"
host: "172.33.1.134:8080"
paths:
  /clients:
    get:
      description: "Accepts json object containing  clientID, public_key for retrieval.\
        \ Either public_key or clientID must be present.\n"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/client"
        x-exportParamName: "Body"
      responses:
        200:
          description: "Client Retrieved"
          schema:
            type: "object"
            title: "Client"
            properties: {}
        400:
          description: "Bad Request."
          schema:
            type: "object"
            title: "Response"
            properties: {}
    post:
      description: "Accepts json object containing  clientID, public_key for persistent\
        \ storage. All fields required.\n"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/client"
        x-exportParamName: "Body"
      responses:
        200:
          description: "Client Persisted"
          schema:
            type: "object"
            title: "Response"
            properties: {}
        400:
          description: "Bad Request."
          schema:
            type: "object"
            title: "Response"
            properties: {}
    delete:
      description: "Accepts json object containing  clientID, public_key for deletion.\
        \ Either public_key or clientID must be present.\n"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/client"
        x-exportParamName: "Body"
      responses:
        200:
          description: "Client Deleted"
          schema:
            type: "object"
            title: "Response"
            properties: {}
        400:
          description: "Bad Request."
          schema:
            type: "object"
            title: "Response"
            properties: {}
    patch:
      description: "Accepts json object containing  clientID, public_key for update.\
        \ ClientID must be present.\n"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/client"
        x-exportParamName: "Body"
      responses:
        200:
          description: "Client Updated"
          schema:
            type: "object"
            title: "Response"
            properties: {}
        400:
          description: "Bad Request."
          schema:
            type: "object"
            title: "Response"
            properties: {}
  /transactions:
    get:
      description: "Accepts json object containing  clientID, transaction_data, createdate,\
        \ hash, signature for retrieval. Hash field required. Other fields ignored\n"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/transaction"
        x-exportParamName: "Body"
      responses:
        200:
          description: "Transaction retrieved"
          schema:
            type: "object"
            title: "Transaction"
            properties: {}
        400:
          description: "Bad Request."
          schema:
            type: "object"
            title: "Response"
            properties: {}
    post:
      description: "Accepts json object containing  clientID, transaction_data, createdate,\
        \ hash, signature for persistent storage. All fields required.\n"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/transaction"
        x-exportParamName: "Body"
      responses:
        200:
          description: "Transaction Accepted"
          schema:
            type: "object"
            title: "Response"
            properties: {}
        400:
          description: "Bad Request."
          schema:
            type: "object"
            title: "Response"
            properties: {}
    delete:
      description: "Accepts json object containing  clientID, transaction_data, createdate,\
        \ hash, signature for deletion. Hash field required. Other fields ignored.\n"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/transaction"
        x-exportParamName: "Body"
      responses:
        200:
          description: "Transaction deleted"
          schema:
            type: "object"
            title: "Response"
            properties: {}
        400:
          description: "Bad Request."
          schema:
            type: "object"
            title: "Response"
            properties: {}
    patch:
      description: "Accepts json object containing  clientID, transaction_data, createdate,\
        \ hash, signature for update. hash field required, other fields if present\
        \ will be used for update.\n"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/transaction"
        x-exportParamName: "Body"
      responses:
        200:
          description: "Transaction Accepted"
          schema:
            type: "object"
            title: "Response"
            properties: {}
        400:
          description: "Bad Request."
          schema:
            type: "object"
            title: "Response"
            properties: {}
definitions:
  client:
    type: "object"
    properties:
      clientid:
        type: "string"
      public_key:
        type: "string"
  transaction:
    type: "object"
    properties:
      clientid:
        type: "string"
      transaction_data:
        type: "string"
      createdate:
        type: "string"
      hash:
        type: "string"
      signature:
        type: "string"
  response:
    type: "object"
    properties:
      title:
        type: "string"
      code:
        type: "string"
      message:
        type: "string"
