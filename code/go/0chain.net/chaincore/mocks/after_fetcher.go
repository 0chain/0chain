// Code generated by mockery v3.0.0-alpha.0. DO NOT EDIT.

package mocks

import (
	block "0chain.net/chaincore/block"

	context "context"

	mock "github.com/stretchr/testify/mock"
)

// AfterFetcher is an autogenerated mock type for the AfterFetcher type
type AfterFetcher struct {
	mock.Mock
}

// AfterFetch provides a mock function with given fields: ctx, b
func (_m *AfterFetcher) AfterFetch(ctx context.Context, b *block.Block) error {
	ret := _m.Called(ctx, b)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *block.Block) error); ok {
		r0 = rf(ctx, b)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewAfterFetcher interface {
	mock.TestingT
	Cleanup(func())
}

// NewAfterFetcher creates a new instance of AfterFetcher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAfterFetcher(t mockConstructorTestingTNewAfterFetcher) *AfterFetcher {
	mock := &AfterFetcher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
