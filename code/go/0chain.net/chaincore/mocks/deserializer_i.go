// Code generated by mockery v3.0.0-alpha.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	util "github.com/0chain/common/core/util"
)

// DeserializerI is an autogenerated mock type for the DeserializerI type
type DeserializerI struct {
	mock.Mock
}

// Deserialize provides a mock function with given fields: sv
func (_m *DeserializerI) Deserialize(sv util.Serializable) util.Serializable {
	ret := _m.Called(sv)

	var r0 util.Serializable
	if rf, ok := ret.Get(0).(func(util.Serializable) util.Serializable); ok {
		r0 = rf(sv)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(util.Serializable)
		}
	}

	return r0
}

type mockConstructorTestingTNewDeserializerI interface {
	mock.TestingT
	Cleanup(func())
}

// NewDeserializerI creates a new instance of DeserializerI. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDeserializerI(t mockConstructorTestingTNewDeserializerI) *DeserializerI {
	mock := &DeserializerI{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
