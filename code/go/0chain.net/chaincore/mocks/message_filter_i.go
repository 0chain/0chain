// Code generated by mockery v3.0.0-alpha.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// MessageFilterI is an autogenerated mock type for the MessageFilterI type
type MessageFilterI struct {
	mock.Mock
}

// AcceptMessage provides a mock function with given fields: entityName, entityID
func (_m *MessageFilterI) AcceptMessage(entityName string, entityID string) bool {
	ret := _m.Called(entityName, entityID)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string, string) bool); ok {
		r0 = rf(entityName, entityID)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

type mockConstructorTestingTNewMessageFilterI interface {
	mock.TestingT
	Cleanup(func())
}

// NewMessageFilterI creates a new instance of MessageFilterI. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMessageFilterI(t mockConstructorTestingTNewMessageFilterI) *MessageFilterI {
	mock := &MessageFilterI{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
