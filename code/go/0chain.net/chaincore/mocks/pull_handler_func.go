// Code generated by mockery v3.0.0-alpha.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// pullHandlerFunc is an autogenerated mock type for the pullHandlerFunc type
type pullHandlerFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: ctx
func (_m *pullHandlerFunc) Execute(ctx context.Context) bool {
	ret := _m.Called(ctx)

	var r0 bool
	if rf, ok := ret.Get(0).(func(context.Context) bool); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

type mockConstructorTestingTnewPullHandlerFunc interface {
	mock.TestingT
	Cleanup(func())
}

// newPullHandlerFunc creates a new instance of pullHandlerFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newPullHandlerFunc(t mockConstructorTestingTnewPullHandlerFunc) *pullHandlerFunc {
	mock := &pullHandlerFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
