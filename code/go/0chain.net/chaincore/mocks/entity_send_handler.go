// Code generated by mockery v3.0.0-alpha.0. DO NOT EDIT.

package mocks

import (
	datastore "0chain.net/core/datastore"
	mock "github.com/stretchr/testify/mock"

	node "0chain.net/chaincore/node"
)

// EntitySendHandler is an autogenerated mock type for the EntitySendHandler type
type EntitySendHandler struct {
	mock.Mock
}

// Execute provides a mock function with given fields: entity
func (_m *EntitySendHandler) Execute(entity datastore.Entity) node.SendHandler {
	ret := _m.Called(entity)

	var r0 node.SendHandler
	if rf, ok := ret.Get(0).(func(datastore.Entity) node.SendHandler); ok {
		r0 = rf(entity)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(node.SendHandler)
		}
	}

	return r0
}

type mockConstructorTestingTNewEntitySendHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewEntitySendHandler creates a new instance of EntitySendHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewEntitySendHandler(t mockConstructorTestingTNewEntitySendHandler) *EntitySendHandler {
	mock := &EntitySendHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
