// Code generated by mockery v3.0.0-alpha.0. DO NOT EDIT.

package mocks

import (
	node "0chain.net/chaincore/node"
	mock "github.com/stretchr/testify/mock"
)

// PoolScorer is an autogenerated mock type for the PoolScorer type
type PoolScorer struct {
	mock.Mock
}

// ScoreHash provides a mock function with given fields: np, hash
func (_m *PoolScorer) ScoreHash(np *node.Pool, hash []byte) []*node.Score {
	ret := _m.Called(np, hash)

	var r0 []*node.Score
	if rf, ok := ret.Get(0).(func(*node.Pool, []byte) []*node.Score); ok {
		r0 = rf(np, hash)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*node.Score)
		}
	}

	return r0
}

// ScoreHashString provides a mock function with given fields: np, hash
func (_m *PoolScorer) ScoreHashString(np *node.Pool, hash string) []*node.Score {
	ret := _m.Called(np, hash)

	var r0 []*node.Score
	if rf, ok := ret.Get(0).(func(*node.Pool, string) []*node.Score); ok {
		r0 = rf(np, hash)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*node.Score)
		}
	}

	return r0
}

type mockConstructorTestingTNewPoolScorer interface {
	mock.TestingT
	Cleanup(func())
}

// NewPoolScorer creates a new instance of PoolScorer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPoolScorer(t mockConstructorTestingTNewPoolScorer) *PoolScorer {
	mock := &PoolScorer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
