// Code generated by mockery v3.0.0-alpha.0. DO NOT EDIT.

package mocks

import (
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// Metric is an autogenerated mock type for the Metric type
type Metric struct {
	mock.Mock
}

// GetKey provides a mock function with given fields:
func (_m *Metric) GetKey() int64 {
	ret := _m.Called()

	var r0 int64
	if rf, ok := ret.Get(0).(func() int64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int64)
	}

	return r0
}

// GetTime provides a mock function with given fields:
func (_m *Metric) GetTime() *time.Time {
	ret := _m.Called()

	var r0 *time.Time
	if rf, ok := ret.Get(0).(func() *time.Time); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*time.Time)
		}
	}

	return r0
}

type mockConstructorTestingTNewMetric interface {
	mock.TestingT
	Cleanup(func())
}

// NewMetric creates a new instance of Metric. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMetric(t mockConstructorTestingTNewMetric) *Metric {
	mock := &Metric{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
