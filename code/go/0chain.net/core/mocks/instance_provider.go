// Code generated by mockery v3.0.0-alpha.0. DO NOT EDIT.

package mocks

import (
	datastore "0chain.net/core/datastore"
	mock "github.com/stretchr/testify/mock"
)

// InstanceProvider is an autogenerated mock type for the InstanceProvider type
type InstanceProvider struct {
	mock.Mock
}

// Execute provides a mock function with given fields:
func (_m *InstanceProvider) Execute() datastore.Entity {
	ret := _m.Called()

	var r0 datastore.Entity
	if rf, ok := ret.Get(0).(func() datastore.Entity); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(datastore.Entity)
		}
	}

	return r0
}

type mockConstructorTestingTNewInstanceProvider interface {
	mock.TestingT
	Cleanup(func())
}

// NewInstanceProvider creates a new instance of InstanceProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewInstanceProvider(t mockConstructorTestingTNewInstanceProvider) *InstanceProvider {
	mock := &InstanceProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
