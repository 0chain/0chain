// Code generated by mockery v3.0.0-alpha.0. DO NOT EDIT.

package mocks

import (
	minersc "0chain.net/smartcontract/minersc"
	mock "github.com/stretchr/testify/mock"

	state "0chain.net/chaincore/chain/state"
)

// phaseFunctions is an autogenerated mock type for the phaseFunctions type
type phaseFunctions struct {
	mock.Mock
}

// Execute provides a mock function with given fields: balances, gn
func (_m *phaseFunctions) Execute(balances state.StateContextI, gn *minersc.GlobalNode) error {
	ret := _m.Called(balances, gn)

	var r0 error
	if rf, ok := ret.Get(0).(func(state.StateContextI, *minersc.GlobalNode) error); ok {
		r0 = rf(balances, gn)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTnewPhaseFunctions interface {
	mock.TestingT
	Cleanup(func())
}

// newPhaseFunctions creates a new instance of phaseFunctions. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newPhaseFunctions(t mockConstructorTestingTnewPhaseFunctions) *phaseFunctions {
	mock := &phaseFunctions{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
