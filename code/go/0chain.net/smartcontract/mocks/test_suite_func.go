// Code generated by mockery v3.0.0-alpha.0. DO NOT EDIT.

package mocks

import (
	benchmark "0chain.net/smartcontract/benchmark"
	mock "github.com/stretchr/testify/mock"
)

// TestSuiteFunc is an autogenerated mock type for the TestSuiteFunc type
type TestSuiteFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: data, sigScheme
func (_m *TestSuiteFunc) Execute(data benchmark.BenchData, sigScheme benchmark.SignatureScheme) benchmark.TestSuite {
	ret := _m.Called(data, sigScheme)

	var r0 benchmark.TestSuite
	if rf, ok := ret.Get(0).(func(benchmark.BenchData, benchmark.SignatureScheme) benchmark.TestSuite); ok {
		r0 = rf(data, sigScheme)
	} else {
		r0 = ret.Get(0).(benchmark.TestSuite)
	}

	return r0
}

type mockConstructorTestingTNewTestSuiteFunc interface {
	mock.TestingT
	Cleanup(func())
}

// NewTestSuiteFunc creates a new instance of TestSuiteFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTestSuiteFunc(t mockConstructorTestingTNewTestSuiteFunc) *TestSuiteFunc {
	mock := &TestSuiteFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
