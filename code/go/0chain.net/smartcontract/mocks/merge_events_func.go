// Code generated by mockery v3.0.0-alpha.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// mergeEventsFunc is an autogenerated mock type for the mergeEventsFunc type
type mergeEventsFunc[T interface{}] struct {
	mock.Mock
}

// Execute provides a mock function with given fields: a, b
func (_m *mergeEventsFunc[T]) Execute(a *T, b *T) (*T, error) {
	ret := _m.Called(a, b)

	var r0 *T
	if rf, ok := ret.Get(0).(func(*T, *T) *T); ok {
		r0 = rf(a, b)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*T)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*T, *T) error); ok {
		r1 = rf(a, b)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTnewMergeEventsFunc interface {
	mock.TestingT
	Cleanup(func())
}

// newMergeEventsFunc creates a new instance of mergeEventsFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMergeEventsFunc[T interface{}](t mockConstructorTestingTnewMergeEventsFunc) *mergeEventsFunc[T] {
	mock := &mergeEventsFunc[T]{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
