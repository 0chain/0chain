// Code generated by mockery v3.0.0-alpha.0. DO NOT EDIT.

package mocks

import (
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// WithTimings is an autogenerated mock type for the WithTimings type
type WithTimings struct {
	mock.Mock
}

// Timings provides a mock function with given fields:
func (_m *WithTimings) Timings() map[string]time.Duration {
	ret := _m.Called()

	var r0 map[string]time.Duration
	if rf, ok := ret.Get(0).(func() map[string]time.Duration); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]time.Duration)
		}
	}

	return r0
}

type mockConstructorTestingTNewWithTimings interface {
	mock.TestingT
	Cleanup(func())
}

// NewWithTimings creates a new instance of WithTimings. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewWithTimings(t mockConstructorTestingTNewWithTimings) *WithTimings {
	mock := &WithTimings{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
