// Code generated by mockery v3.0.0-alpha.0. DO NOT EDIT.

package mocks

import (
	blockdb "0chain.net/sharder/blockdb"
	mock "github.com/stretchr/testify/mock"
)

// RecordProvider is an autogenerated mock type for the RecordProvider type
type RecordProvider struct {
	mock.Mock
}

// NewRecord provides a mock function with given fields:
func (_m *RecordProvider) NewRecord() blockdb.Record {
	ret := _m.Called()

	var r0 blockdb.Record
	if rf, ok := ret.Get(0).(func() blockdb.Record); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(blockdb.Record)
		}
	}

	return r0
}

type mockConstructorTestingTNewRecordProvider interface {
	mock.TestingT
	Cleanup(func())
}

// NewRecordProvider creates a new instance of RecordProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRecordProvider(t mockConstructorTestingTNewRecordProvider) *RecordProvider {
	mock := &RecordProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
