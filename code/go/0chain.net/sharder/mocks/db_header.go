// Code generated by mockery v3.0.0-alpha.0. DO NOT EDIT.

package mocks

import (
	io "io"

	mock "github.com/stretchr/testify/mock"
)

// DBHeader is an autogenerated mock type for the DBHeader type
type DBHeader struct {
	mock.Mock
}

// Decode provides a mock function with given fields: reader
func (_m *DBHeader) Decode(reader io.Reader) error {
	ret := _m.Called(reader)

	var r0 error
	if rf, ok := ret.Get(0).(func(io.Reader) error); ok {
		r0 = rf(reader)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Encode provides a mock function with given fields: writer
func (_m *DBHeader) Encode(writer io.Writer) error {
	ret := _m.Called(writer)

	var r0 error
	if rf, ok := ret.Get(0).(func(io.Writer) error); ok {
		r0 = rf(writer)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewDBHeader interface {
	mock.TestingT
	Cleanup(func())
}

// NewDBHeader creates a new instance of DBHeader. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDBHeader(t mockConstructorTestingTNewDBHeader) *DBHeader {
	mock := &DBHeader{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
