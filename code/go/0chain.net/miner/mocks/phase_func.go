// Code generated by mockery v3.0.0-alpha.0. DO NOT EDIT.

package mocks

import (
	context "context"

	block "0chain.net/chaincore/block"

	httpclientutil "0chain.net/chaincore/httpclientutil"

	mock "github.com/stretchr/testify/mock"
)

// PhaseFunc is an autogenerated mock type for the PhaseFunc type
type PhaseFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: ctx, lfb, lfmb, isActive
func (_m *PhaseFunc) Execute(ctx context.Context, lfb *block.Block, lfmb *block.MagicBlock, isActive bool) (*httpclientutil.Transaction, error) {
	ret := _m.Called(ctx, lfb, lfmb, isActive)

	var r0 *httpclientutil.Transaction
	if rf, ok := ret.Get(0).(func(context.Context, *block.Block, *block.MagicBlock, bool) *httpclientutil.Transaction); ok {
		r0 = rf(ctx, lfb, lfmb, isActive)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*httpclientutil.Transaction)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *block.Block, *block.MagicBlock, bool) error); ok {
		r1 = rf(ctx, lfb, lfmb, isActive)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewPhaseFunc interface {
	mock.TestingT
	Cleanup(func())
}

// NewPhaseFunc creates a new instance of PhaseFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPhaseFunc(t mockConstructorTestingTNewPhaseFunc) *PhaseFunc {
	mock := &PhaseFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
