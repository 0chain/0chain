// Code generated by mockery v3.0.0-alpha.0. DO NOT EDIT.

package mocks

import (
	context "context"

	miner "0chain.net/miner"

	mock "github.com/stretchr/testify/mock"

	transaction "0chain.net/chaincore/transaction"

	util "github.com/0chain/common/core/util"
)

// txnProcessorHandler is an autogenerated mock type for the txnProcessorHandler type
type txnProcessorHandler struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0, _a1, _a2, _a3, _a4
func (_m *txnProcessorHandler) Execute(_a0 context.Context, _a1 util.MerklePatriciaTrieI, _a2 *transaction.Transaction, _a3 *miner.TxnIterInfo, _a4 chan struct{}) (bool, error) {
	ret := _m.Called(_a0, _a1, _a2, _a3, _a4)

	var r0 bool
	if rf, ok := ret.Get(0).(func(context.Context, util.MerklePatriciaTrieI, *transaction.Transaction, *miner.TxnIterInfo, chan struct{}) bool); ok {
		r0 = rf(_a0, _a1, _a2, _a3, _a4)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, util.MerklePatriciaTrieI, *transaction.Transaction, *miner.TxnIterInfo, chan struct{}) error); ok {
		r1 = rf(_a0, _a1, _a2, _a3, _a4)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTnewTxnProcessorHandler interface {
	mock.TestingT
	Cleanup(func())
}

// newTxnProcessorHandler creates a new instance of txnProcessorHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newTxnProcessorHandler(t mockConstructorTestingTnewTxnProcessorHandler) *txnProcessorHandler {
	mock := &txnProcessorHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
