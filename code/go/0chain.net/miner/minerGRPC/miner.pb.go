// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: miner.proto

package minerGRPC

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WhoAmIRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WhoAmIRequest) Reset() {
	*x = WhoAmIRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_miner_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhoAmIRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhoAmIRequest) ProtoMessage() {}

func (x *WhoAmIRequest) ProtoReflect() protoreflect.Message {
	mi := &file_miner_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhoAmIRequest.ProtoReflect.Descriptor instead.
func (*WhoAmIRequest) Descriptor() ([]byte, []int) {
	return file_miner_proto_rawDescGZIP(), []int{0}
}

type WhoAmIResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WhoAmIResponse) Reset() {
	*x = WhoAmIResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_miner_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhoAmIResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhoAmIResponse) ProtoMessage() {}

func (x *WhoAmIResponse) ProtoReflect() protoreflect.Message {
	mi := &file_miner_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhoAmIResponse.ProtoReflect.Descriptor instead.
func (*WhoAmIResponse) Descriptor() ([]byte, []int) {
	return file_miner_proto_rawDescGZIP(), []int{1}
}

func (x *WhoAmIResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type GetLatestFinalizedBlockSummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLatestFinalizedBlockSummaryRequest) Reset() {
	*x = GetLatestFinalizedBlockSummaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_miner_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestFinalizedBlockSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestFinalizedBlockSummaryRequest) ProtoMessage() {}

func (x *GetLatestFinalizedBlockSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_miner_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestFinalizedBlockSummaryRequest.ProtoReflect.Descriptor instead.
func (*GetLatestFinalizedBlockSummaryRequest) Descriptor() ([]byte, []int) {
	return file_miner_proto_rawDescGZIP(), []int{2}
}

type GetLatestFinalizedBlockSummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockSummary *BlockSummary `protobuf:"bytes,1,opt,name=block_summary,json=blockSummary,proto3" json:"block_summary,omitempty"`
}

func (x *GetLatestFinalizedBlockSummaryResponse) Reset() {
	*x = GetLatestFinalizedBlockSummaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_miner_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestFinalizedBlockSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestFinalizedBlockSummaryResponse) ProtoMessage() {}

func (x *GetLatestFinalizedBlockSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_miner_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestFinalizedBlockSummaryResponse.ProtoReflect.Descriptor instead.
func (*GetLatestFinalizedBlockSummaryResponse) Descriptor() ([]byte, []int) {
	return file_miner_proto_rawDescGZIP(), []int{3}
}

func (x *GetLatestFinalizedBlockSummaryResponse) GetBlockSummary() *BlockSummary {
	if x != nil {
		return x.BlockSummary
	}
	return nil
}

type BlockSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash                  string      `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	MinerId               string      `protobuf:"bytes,2,opt,name=miner_id,json=minerId,proto3" json:"miner_id,omitempty"`
	Round                 int64       `protobuf:"varint,3,opt,name=round,proto3" json:"round,omitempty"`
	RoundRandomSeed       int64       `protobuf:"varint,4,opt,name=round_random_seed,json=roundRandomSeed,proto3" json:"round_random_seed,omitempty"`
	MerkleTreeRoot        string      `protobuf:"bytes,5,opt,name=merkle_tree_root,json=merkleTreeRoot,proto3" json:"merkle_tree_root,omitempty"`
	ClientStateHash       string      `protobuf:"bytes,6,opt,name=client_state_hash,json=clientStateHash,proto3" json:"client_state_hash,omitempty"`
	ReceiptMerkleTreeRoot string      `protobuf:"bytes,7,opt,name=receipt_merkle_tree_root,json=receiptMerkleTreeRoot,proto3" json:"receipt_merkle_tree_root,omitempty"`
	NumTxns               int64       `protobuf:"varint,8,opt,name=num_txns,json=numTxns,proto3" json:"num_txns,omitempty"`
	Version               string      `protobuf:"bytes,9,opt,name=version,proto3" json:"version,omitempty"`
	CreationDate          int64       `protobuf:"varint,10,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty"`
	MagicBlock            *MagicBlock `protobuf:"bytes,11,opt,name=magic_block,json=magicBlock,proto3" json:"magic_block,omitempty"`
}

func (x *BlockSummary) Reset() {
	*x = BlockSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_miner_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockSummary) ProtoMessage() {}

func (x *BlockSummary) ProtoReflect() protoreflect.Message {
	mi := &file_miner_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockSummary.ProtoReflect.Descriptor instead.
func (*BlockSummary) Descriptor() ([]byte, []int) {
	return file_miner_proto_rawDescGZIP(), []int{4}
}

func (x *BlockSummary) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *BlockSummary) GetMinerId() string {
	if x != nil {
		return x.MinerId
	}
	return ""
}

func (x *BlockSummary) GetRound() int64 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *BlockSummary) GetRoundRandomSeed() int64 {
	if x != nil {
		return x.RoundRandomSeed
	}
	return 0
}

func (x *BlockSummary) GetMerkleTreeRoot() string {
	if x != nil {
		return x.MerkleTreeRoot
	}
	return ""
}

func (x *BlockSummary) GetClientStateHash() string {
	if x != nil {
		return x.ClientStateHash
	}
	return ""
}

func (x *BlockSummary) GetReceiptMerkleTreeRoot() string {
	if x != nil {
		return x.ReceiptMerkleTreeRoot
	}
	return ""
}

func (x *BlockSummary) GetNumTxns() int64 {
	if x != nil {
		return x.NumTxns
	}
	return 0
}

func (x *BlockSummary) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *BlockSummary) GetCreationDate() int64 {
	if x != nil {
		return x.CreationDate
	}
	return 0
}

func (x *BlockSummary) GetMagicBlock() *MagicBlock {
	if x != nil {
		return x.MagicBlock
	}
	return nil
}

type MagicBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash                   string                   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	PreviousMagicBlockHash string                   `protobuf:"bytes,2,opt,name=previous_magic_block_hash,json=previousMagicBlockHash,proto3" json:"previous_magic_block_hash,omitempty"`
	MagicBlockNumber       int64                    `protobuf:"varint,3,opt,name=magic_block_number,json=magicBlockNumber,proto3" json:"magic_block_number,omitempty"`
	StartingRound          int64                    `protobuf:"varint,4,opt,name=starting_round,json=startingRound,proto3" json:"starting_round,omitempty"`
	Miners                 *NodePool                `protobuf:"bytes,5,opt,name=miners,proto3" json:"miners,omitempty"`
	Sharders               *NodePool                `protobuf:"bytes,6,opt,name=sharders,proto3" json:"sharders,omitempty"`
	ShareOrSigns           []*StringMapShareOrSigns `protobuf:"bytes,7,rep,name=share_or_signs,json=shareOrSigns,proto3" json:"share_or_signs,omitempty"`
	Mpks                   []*StringMapMPK          `protobuf:"bytes,8,rep,name=mpks,proto3" json:"mpks,omitempty"`
	T                      int64                    `protobuf:"varint,9,opt,name=t,proto3" json:"t,omitempty"`
	K                      int64                    `protobuf:"varint,10,opt,name=k,proto3" json:"k,omitempty"`
	N                      int64                    `protobuf:"varint,11,opt,name=n,proto3" json:"n,omitempty"`
}

func (x *MagicBlock) Reset() {
	*x = MagicBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_miner_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MagicBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MagicBlock) ProtoMessage() {}

func (x *MagicBlock) ProtoReflect() protoreflect.Message {
	mi := &file_miner_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MagicBlock.ProtoReflect.Descriptor instead.
func (*MagicBlock) Descriptor() ([]byte, []int) {
	return file_miner_proto_rawDescGZIP(), []int{5}
}

func (x *MagicBlock) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *MagicBlock) GetPreviousMagicBlockHash() string {
	if x != nil {
		return x.PreviousMagicBlockHash
	}
	return ""
}

func (x *MagicBlock) GetMagicBlockNumber() int64 {
	if x != nil {
		return x.MagicBlockNumber
	}
	return 0
}

func (x *MagicBlock) GetStartingRound() int64 {
	if x != nil {
		return x.StartingRound
	}
	return 0
}

func (x *MagicBlock) GetMiners() *NodePool {
	if x != nil {
		return x.Miners
	}
	return nil
}

func (x *MagicBlock) GetSharders() *NodePool {
	if x != nil {
		return x.Sharders
	}
	return nil
}

func (x *MagicBlock) GetShareOrSigns() []*StringMapShareOrSigns {
	if x != nil {
		return x.ShareOrSigns
	}
	return nil
}

func (x *MagicBlock) GetMpks() []*StringMapMPK {
	if x != nil {
		return x.Mpks
	}
	return nil
}

func (x *MagicBlock) GetT() int64 {
	if x != nil {
		return x.T
	}
	return 0
}

func (x *MagicBlock) GetK() int64 {
	if x != nil {
		return x.K
	}
	return 0
}

func (x *MagicBlock) GetN() int64 {
	if x != nil {
		return x.N
	}
	return 0
}

type StringMapMPK struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Mpk *MPK   `protobuf:"bytes,2,opt,name=mpk,proto3" json:"mpk,omitempty"`
}

func (x *StringMapMPK) Reset() {
	*x = StringMapMPK{}
	if protoimpl.UnsafeEnabled {
		mi := &file_miner_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringMapMPK) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringMapMPK) ProtoMessage() {}

func (x *StringMapMPK) ProtoReflect() protoreflect.Message {
	mi := &file_miner_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringMapMPK.ProtoReflect.Descriptor instead.
func (*StringMapMPK) Descriptor() ([]byte, []int) {
	return file_miner_proto_rawDescGZIP(), []int{6}
}

func (x *StringMapMPK) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *StringMapMPK) GetMpk() *MPK {
	if x != nil {
		return x.Mpk
	}
	return nil
}

type MPK struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Mpk []string `protobuf:"bytes,2,rep,name=mpk,proto3" json:"mpk,omitempty"`
}

func (x *MPK) Reset() {
	*x = MPK{}
	if protoimpl.UnsafeEnabled {
		mi := &file_miner_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MPK) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MPK) ProtoMessage() {}

func (x *MPK) ProtoReflect() protoreflect.Message {
	mi := &file_miner_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MPK.ProtoReflect.Descriptor instead.
func (*MPK) Descriptor() ([]byte, []int) {
	return file_miner_proto_rawDescGZIP(), []int{7}
}

func (x *MPK) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MPK) GetMpk() []string {
	if x != nil {
		return x.Mpk
	}
	return nil
}

type NodePool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  int64            `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Nodes []*StringMapNode `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *NodePool) Reset() {
	*x = NodePool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_miner_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodePool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodePool) ProtoMessage() {}

func (x *NodePool) ProtoReflect() protoreflect.Message {
	mi := &file_miner_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodePool.ProtoReflect.Descriptor instead.
func (*NodePool) Descriptor() ([]byte, []int) {
	return file_miner_proto_rawDescGZIP(), []int{8}
}

func (x *NodePool) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *NodePool) GetNodes() []*StringMapNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type StringMapNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Node *Node  `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *StringMapNode) Reset() {
	*x = StringMapNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_miner_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringMapNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringMapNode) ProtoMessage() {}

func (x *StringMapNode) ProtoReflect() protoreflect.Message {
	mi := &file_miner_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringMapNode.ProtoReflect.Descriptor instead.
func (*StringMapNode) Descriptor() ([]byte, []int) {
	return file_miner_proto_rawDescGZIP(), []int{9}
}

func (x *StringMapNode) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *StringMapNode) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Client      *Client `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	N2NHost     string  `protobuf:"bytes,2,opt,name=n2n_host,json=n2nHost,proto3" json:"n2n_host,omitempty"`
	Host        string  `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Port        int64   `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	Path        string  `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
	Type        int64   `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`
	Description string  `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	SetIndex    int64   `protobuf:"varint,8,opt,name=set_index,json=setIndex,proto3" json:"set_index,omitempty"`
	Status      int64   `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	Info        *Info   `protobuf:"bytes,10,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_miner_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_miner_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_miner_proto_rawDescGZIP(), []int{10}
}

func (x *Node) GetClient() *Client {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *Node) GetN2NHost() string {
	if x != nil {
		return x.N2NHost
	}
	return ""
}

func (x *Node) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Node) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Node) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Node) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Node) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Node) GetSetIndex() int64 {
	if x != nil {
		return x.SetIndex
	}
	return 0
}

func (x *Node) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Node) GetInfo() *Info {
	if x != nil {
		return x.Info
	}
	return nil
}

type Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildTag                string `protobuf:"bytes,1,opt,name=build_tag,json=buildTag,proto3" json:"build_tag,omitempty"`
	StateMissingNodes       int64  `protobuf:"varint,2,opt,name=state_missing_nodes,json=stateMissingNodes,proto3" json:"state_missing_nodes,omitempty"`
	MinersMedianNetworkTime int64  `protobuf:"varint,3,opt,name=miners_median_network_time,json=minersMedianNetworkTime,proto3" json:"miners_median_network_time,omitempty"`
	AvgBlockTxns            int64  `protobuf:"varint,4,opt,name=avg_block_txns,json=avgBlockTxns,proto3" json:"avg_block_txns,omitempty"`
}

func (x *Info) Reset() {
	*x = Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_miner_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Info) ProtoMessage() {}

func (x *Info) ProtoReflect() protoreflect.Message {
	mi := &file_miner_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Info.ProtoReflect.Descriptor instead.
func (*Info) Descriptor() ([]byte, []int) {
	return file_miner_proto_rawDescGZIP(), []int{11}
}

func (x *Info) GetBuildTag() string {
	if x != nil {
		return x.BuildTag
	}
	return ""
}

func (x *Info) GetStateMissingNodes() int64 {
	if x != nil {
		return x.StateMissingNodes
	}
	return 0
}

func (x *Info) GetMinersMedianNetworkTime() int64 {
	if x != nil {
		return x.MinersMedianNetworkTime
	}
	return 0
}

func (x *Info) GetAvgBlockTxns() int64 {
	if x != nil {
		return x.AvgBlockTxns
	}
	return 0
}

type Client struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Version      string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	CreationDate int64  `protobuf:"varint,3,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty"`
	PubKey       string `protobuf:"bytes,4,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
}

func (x *Client) Reset() {
	*x = Client{}
	if protoimpl.UnsafeEnabled {
		mi := &file_miner_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Client) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Client) ProtoMessage() {}

func (x *Client) ProtoReflect() protoreflect.Message {
	mi := &file_miner_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Client.ProtoReflect.Descriptor instead.
func (*Client) Descriptor() ([]byte, []int) {
	return file_miner_proto_rawDescGZIP(), []int{12}
}

func (x *Client) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Client) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Client) GetCreationDate() int64 {
	if x != nil {
		return x.CreationDate
	}
	return 0
}

func (x *Client) GetPubKey() string {
	if x != nil {
		return x.PubKey
	}
	return ""
}

type StringMapShareOrSigns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string        `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Share *ShareOrSigns `protobuf:"bytes,2,opt,name=share,proto3" json:"share,omitempty"`
}

func (x *StringMapShareOrSigns) Reset() {
	*x = StringMapShareOrSigns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_miner_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringMapShareOrSigns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringMapShareOrSigns) ProtoMessage() {}

func (x *StringMapShareOrSigns) ProtoReflect() protoreflect.Message {
	mi := &file_miner_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringMapShareOrSigns.ProtoReflect.Descriptor instead.
func (*StringMapShareOrSigns) Descriptor() ([]byte, []int) {
	return file_miner_proto_rawDescGZIP(), []int{13}
}

func (x *StringMapShareOrSigns) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *StringMapShareOrSigns) GetShare() *ShareOrSigns {
	if x != nil {
		return x.Share
	}
	return nil
}

type ShareOrSigns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ShareOrSign []*StringMapDKGKeyShare `protobuf:"bytes,2,rep,name=share_or_sign,json=shareOrSign,proto3" json:"share_or_sign,omitempty"`
}

func (x *ShareOrSigns) Reset() {
	*x = ShareOrSigns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_miner_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareOrSigns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareOrSigns) ProtoMessage() {}

func (x *ShareOrSigns) ProtoReflect() protoreflect.Message {
	mi := &file_miner_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareOrSigns.ProtoReflect.Descriptor instead.
func (*ShareOrSigns) Descriptor() ([]byte, []int) {
	return file_miner_proto_rawDescGZIP(), []int{14}
}

func (x *ShareOrSigns) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ShareOrSigns) GetShareOrSign() []*StringMapDKGKeyShare {
	if x != nil {
		return x.ShareOrSign
	}
	return nil
}

type StringMapDKGKeyShare struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string       `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	DkgKeyShare *DKGKeyShare `protobuf:"bytes,2,opt,name=dkg_key_share,json=dkgKeyShare,proto3" json:"dkg_key_share,omitempty"`
}

func (x *StringMapDKGKeyShare) Reset() {
	*x = StringMapDKGKeyShare{}
	if protoimpl.UnsafeEnabled {
		mi := &file_miner_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringMapDKGKeyShare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringMapDKGKeyShare) ProtoMessage() {}

func (x *StringMapDKGKeyShare) ProtoReflect() protoreflect.Message {
	mi := &file_miner_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringMapDKGKeyShare.ProtoReflect.Descriptor instead.
func (*StringMapDKGKeyShare) Descriptor() ([]byte, []int) {
	return file_miner_proto_rawDescGZIP(), []int{15}
}

func (x *StringMapDKGKeyShare) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *StringMapDKGKeyShare) GetDkgKeyShare() *DKGKeyShare {
	if x != nil {
		return x.DkgKeyShare
	}
	return nil
}

type DKGKeyShare struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Share   string `protobuf:"bytes,3,opt,name=share,proto3" json:"share,omitempty"`
	Sign    string `protobuf:"bytes,4,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *DKGKeyShare) Reset() {
	*x = DKGKeyShare{}
	if protoimpl.UnsafeEnabled {
		mi := &file_miner_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DKGKeyShare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DKGKeyShare) ProtoMessage() {}

func (x *DKGKeyShare) ProtoReflect() protoreflect.Message {
	mi := &file_miner_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DKGKeyShare.ProtoReflect.Descriptor instead.
func (*DKGKeyShare) Descriptor() ([]byte, []int) {
	return file_miner_proto_rawDescGZIP(), []int{16}
}

func (x *DKGKeyShare) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DKGKeyShare) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DKGKeyShare) GetShare() string {
	if x != nil {
		return x.Share
	}
	return ""
}

func (x *DKGKeyShare) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

var File_miner_proto protoreflect.FileDescriptor

var file_miner_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x6d,
	0x69, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0f, 0x0a,
	0x0d, 0x57, 0x68, 0x6f, 0x41, 0x6d, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x24,
	0x0a, 0x0e, 0x57, 0x68, 0x6f, 0x41, 0x6d, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x27, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6d, 0x0a,
	0x26, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x0c,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0xa7, 0x03, 0x0a,
	0x0c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x72, 0x61, 0x6e, 0x64,
	0x6f, 0x6d, 0x5f, 0x73, 0x65, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x53, 0x65, 0x65, 0x64, 0x12, 0x28,
	0x0a, 0x10, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x72, 0x6f,
	0x6f, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65,
	0x54, 0x72, 0x65, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x37, 0x0a, 0x18, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x5f,
	0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x4d,
	0x65, 0x72, 0x6b, 0x6c, 0x65, 0x54, 0x72, 0x65, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x6e, 0x75, 0x6d, 0x5f, 0x74, 0x78, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x6e, 0x75, 0x6d, 0x54, 0x78, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x6d, 0x61, 0x67, 0x69, 0x63,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d,
	0x69, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x61, 0x67, 0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x0a, 0x6d, 0x61, 0x67, 0x69,
	0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0xc9, 0x03, 0x0a, 0x0a, 0x4d, 0x61, 0x67, 0x69, 0x63,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x39, 0x0a, 0x19, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x10, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x32, 0x0a, 0x06, 0x6d, 0x69, 0x6e,
	0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x69, 0x6e, 0x65,
	0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x36, 0x0a,
	0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x08, 0x73, 0x68, 0x61,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x4d, 0x0a, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x6f,
	0x72, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x6d, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4f,
	0x72, 0x53, 0x69, 0x67, 0x6e, 0x73, 0x52, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x4f, 0x72, 0x53,
	0x69, 0x67, 0x6e, 0x73, 0x12, 0x32, 0x0a, 0x04, 0x6d, 0x70, 0x6b, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x4d,
	0x50, 0x4b, 0x52, 0x04, 0x6d, 0x70, 0x6b, 0x73, 0x12, 0x0c, 0x0a, 0x01, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x01, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x01, 0x6b, 0x12, 0x0c, 0x0a, 0x01, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x01, 0x6e, 0x22, 0x49, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x4d,
	0x50, 0x4b, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x03, 0x6d, 0x70, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x50, 0x4b, 0x52, 0x03, 0x6d, 0x70, 0x6b, 0x22, 0x27, 0x0a,
	0x03, 0x4d, 0x50, 0x4b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x70, 0x6b, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x70, 0x6b, 0x22, 0x55, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f,
	0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d,
	0x61, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x4d, 0x0a,
	0x0d, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x2a, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0xa6, 0x02, 0x0a,
	0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x32, 0x6e, 0x5f, 0x68,
	0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x32, 0x6e, 0x48, 0x6f,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xb6, 0x01, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b,
	0x0a, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x61, 0x67, 0x12, 0x2e, 0x0a, 0x13, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4d,
	0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x1a, 0x6d,
	0x69, 0x6e, 0x65, 0x72, 0x73, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x6e, 0x5f, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x17, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x6e, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x76, 0x67, 0x5f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x78, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x61, 0x76, 0x67, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x78, 0x6e, 0x73, 0x22, 0x70,
	0x0a, 0x06, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79,
	0x22, 0x5f, 0x0a, 0x15, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x4f, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x05, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x69, 0x6e,
	0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x4f, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x73, 0x52, 0x05, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x22, 0x6a, 0x0a, 0x0c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4f, 0x72, 0x53, 0x69, 0x67, 0x6e,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x4a, 0x0a, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x6f, 0x72, 0x5f, 0x73, 0x69,
	0x67, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x69, 0x6e, 0x65, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x4d, 0x61, 0x70, 0x44, 0x4b, 0x47, 0x4b, 0x65, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x52, 0x0b, 0x73, 0x68, 0x61, 0x72, 0x65, 0x4f, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x22, 0x6b, 0x0a,
	0x14, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x44, 0x4b, 0x47, 0x4b, 0x65, 0x79,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x41, 0x0a, 0x0d, 0x64, 0x6b, 0x67, 0x5f, 0x6b,
	0x65, 0x79, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x4b, 0x47, 0x4b, 0x65, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x0b, 0x64,
	0x6b, 0x67, 0x4b, 0x65, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x22, 0x61, 0x0a, 0x0b, 0x44, 0x4b,
	0x47, 0x4b, 0x65, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x32, 0x70, 0x0a,
	0x09, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x63, 0x0a, 0x06, 0x57, 0x68,
	0x6f, 0x41, 0x6d, 0x49, 0x12, 0x1f, 0x2e, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x68, 0x6f, 0x41, 0x6d, 0x49, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x68, 0x6f, 0x41, 0x6d, 0x49, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12,
	0x0e, 0x2f, 0x76, 0x32, 0x2f, 0x5f, 0x6e, 0x68, 0x2f, 0x77, 0x68, 0x6f, 0x61, 0x6d, 0x69, 0x32,
	0xca, 0x01, 0x0a, 0x0a, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0xbb,
	0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6e, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x12, 0x37, 0x2e, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x46, 0x69,
	0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x6d, 0x69, 0x6e,
	0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x76,
	0x32, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x42, 0x24, 0x5a, 0x22,
	0x63, 0x6f, 0x64, 0x65, 0x2f, 0x67, 0x6f, 0x2f, 0x30, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x6e,
	0x65, 0x74, 0x2f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x2f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x47, 0x52,
	0x50, 0x43, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_miner_proto_rawDescOnce sync.Once
	file_miner_proto_rawDescData = file_miner_proto_rawDesc
)

func file_miner_proto_rawDescGZIP() []byte {
	file_miner_proto_rawDescOnce.Do(func() {
		file_miner_proto_rawDescData = protoimpl.X.CompressGZIP(file_miner_proto_rawDescData)
	})
	return file_miner_proto_rawDescData
}

var file_miner_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_miner_proto_goTypes = []interface{}{
	(*WhoAmIRequest)(nil),                          // 0: miner.service.v1.WhoAmIRequest
	(*WhoAmIResponse)(nil),                         // 1: miner.service.v1.WhoAmIResponse
	(*GetLatestFinalizedBlockSummaryRequest)(nil),  // 2: miner.service.v1.GetLatestFinalizedBlockSummaryRequest
	(*GetLatestFinalizedBlockSummaryResponse)(nil), // 3: miner.service.v1.GetLatestFinalizedBlockSummaryResponse
	(*BlockSummary)(nil),                           // 4: miner.service.v1.BlockSummary
	(*MagicBlock)(nil),                             // 5: miner.service.v1.MagicBlock
	(*StringMapMPK)(nil),                           // 6: miner.service.v1.StringMapMPK
	(*MPK)(nil),                                    // 7: miner.service.v1.MPK
	(*NodePool)(nil),                               // 8: miner.service.v1.NodePool
	(*StringMapNode)(nil),                          // 9: miner.service.v1.StringMapNode
	(*Node)(nil),                                   // 10: miner.service.v1.Node
	(*Info)(nil),                                   // 11: miner.service.v1.Info
	(*Client)(nil),                                 // 12: miner.service.v1.Client
	(*StringMapShareOrSigns)(nil),                  // 13: miner.service.v1.StringMapShareOrSigns
	(*ShareOrSigns)(nil),                           // 14: miner.service.v1.ShareOrSigns
	(*StringMapDKGKeyShare)(nil),                   // 15: miner.service.v1.StringMapDKGKeyShare
	(*DKGKeyShare)(nil),                            // 16: miner.service.v1.DKGKeyShare
}
var file_miner_proto_depIdxs = []int32{
	4,  // 0: miner.service.v1.GetLatestFinalizedBlockSummaryResponse.block_summary:type_name -> miner.service.v1.BlockSummary
	5,  // 1: miner.service.v1.BlockSummary.magic_block:type_name -> miner.service.v1.MagicBlock
	8,  // 2: miner.service.v1.MagicBlock.miners:type_name -> miner.service.v1.NodePool
	8,  // 3: miner.service.v1.MagicBlock.sharders:type_name -> miner.service.v1.NodePool
	13, // 4: miner.service.v1.MagicBlock.share_or_signs:type_name -> miner.service.v1.StringMapShareOrSigns
	6,  // 5: miner.service.v1.MagicBlock.mpks:type_name -> miner.service.v1.StringMapMPK
	7,  // 6: miner.service.v1.StringMapMPK.mpk:type_name -> miner.service.v1.MPK
	9,  // 7: miner.service.v1.NodePool.nodes:type_name -> miner.service.v1.StringMapNode
	10, // 8: miner.service.v1.StringMapNode.node:type_name -> miner.service.v1.Node
	12, // 9: miner.service.v1.Node.client:type_name -> miner.service.v1.Client
	11, // 10: miner.service.v1.Node.info:type_name -> miner.service.v1.Info
	14, // 11: miner.service.v1.StringMapShareOrSigns.share:type_name -> miner.service.v1.ShareOrSigns
	15, // 12: miner.service.v1.ShareOrSigns.share_or_sign:type_name -> miner.service.v1.StringMapDKGKeyShare
	16, // 13: miner.service.v1.StringMapDKGKeyShare.dkg_key_share:type_name -> miner.service.v1.DKGKeyShare
	0,  // 14: miner.service.v1.MinerNode.WhoAmI:input_type -> miner.service.v1.WhoAmIRequest
	2,  // 15: miner.service.v1.MinerChain.GetLatestFinalizedBlockSummary:input_type -> miner.service.v1.GetLatestFinalizedBlockSummaryRequest
	1,  // 16: miner.service.v1.MinerNode.WhoAmI:output_type -> miner.service.v1.WhoAmIResponse
	3,  // 17: miner.service.v1.MinerChain.GetLatestFinalizedBlockSummary:output_type -> miner.service.v1.GetLatestFinalizedBlockSummaryResponse
	16, // [16:18] is the sub-list for method output_type
	14, // [14:16] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_miner_proto_init() }
func file_miner_proto_init() {
	if File_miner_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_miner_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhoAmIRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_miner_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhoAmIResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_miner_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestFinalizedBlockSummaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_miner_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestFinalizedBlockSummaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_miner_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_miner_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MagicBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_miner_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringMapMPK); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_miner_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MPK); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_miner_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodePool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_miner_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringMapNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_miner_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_miner_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_miner_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Client); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_miner_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringMapShareOrSigns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_miner_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareOrSigns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_miner_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringMapDKGKeyShare); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_miner_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DKGKeyShare); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_miner_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_miner_proto_goTypes,
		DependencyIndexes: file_miner_proto_depIdxs,
		MessageInfos:      file_miner_proto_msgTypes,
	}.Build()
	File_miner_proto = out.File
	file_miner_proto_rawDesc = nil
	file_miner_proto_goTypes = nil
	file_miner_proto_depIdxs = nil
}
