// Code generated by mockery v3.0.0-alpha.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// TestReporter is an autogenerated mock type for the TestReporter type
type TestReporter struct {
	mock.Mock
}

// IsOnRound provides a mock function with given fields: round
func (_m *TestReporter) IsOnRound(round int64) bool {
	ret := _m.Called(round)

	var r0 bool
	if rf, ok := ret.Get(0).(func(int64) bool); ok {
		r0 = rf(round)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// IsTesting provides a mock function with given fields: round, generator, nodeTypeRank
func (_m *TestReporter) IsTesting(round int64, generator bool, nodeTypeRank int) bool {
	ret := _m.Called(round, generator, nodeTypeRank)

	var r0 bool
	if rf, ok := ret.Get(0).(func(int64, bool, int) bool); ok {
		r0 = rf(round, generator, nodeTypeRank)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

type mockConstructorTestingTNewTestReporter interface {
	mock.TestingT
	Cleanup(func())
}

// NewTestReporter creates a new instance of TestReporter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTestReporter(t mockConstructorTestingTNewTestReporter) *TestReporter {
	mock := &TestReporter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
