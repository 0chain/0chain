// Code generated by mockery v3.0.0-alpha.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Ranker is an autogenerated mock type for the Ranker type
type Ranker struct {
	mock.Mock
}

// GetMinerRankByID provides a mock function with given fields: minerID
func (_m *Ranker) GetMinerRankByID(minerID string) int {
	ret := _m.Called(minerID)

	var r0 int
	if rf, ok := ret.Get(0).(func(string) int); ok {
		r0 = rf(minerID)
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// GetRoundNumber provides a mock function with given fields:
func (_m *Ranker) GetRoundNumber() int64 {
	ret := _m.Called()

	var r0 int64
	if rf, ok := ret.Get(0).(func() int64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int64)
	}

	return r0
}

// HasNode provides a mock function with given fields: id
func (_m *Ranker) HasNode(id string) bool {
	ret := _m.Called(id)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

type mockConstructorTestingTNewRanker interface {
	mock.TestingT
	Cleanup(func())
}

// NewRanker creates a new instance of Ranker. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRanker(t mockConstructorTestingTNewRanker) *Ranker {
	mock := &Ranker{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
