// Code generated by mockery v3.0.0-alpha.0. DO NOT EDIT.

package mocks

import (
	config "0chain.net/conductor/config"
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// flowExecuteFunc is an autogenerated mock type for the flowExecuteFunc type
type flowExecuteFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: name, ex, val, tm
func (_m *flowExecuteFunc) Execute(name string, ex config.Executor, val interface{}, tm time.Duration) error {
	ret := _m.Called(name, ex, val, tm)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, config.Executor, interface{}, time.Duration) error); ok {
		r0 = rf(name, ex, val, tm)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTnewFlowExecuteFunc interface {
	mock.TestingT
	Cleanup(func())
}

// newFlowExecuteFunc creates a new instance of flowExecuteFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newFlowExecuteFunc(t mockConstructorTestingTnewFlowExecuteFunc) *flowExecuteFunc {
	mock := &flowExecuteFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
