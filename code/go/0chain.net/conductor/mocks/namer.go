// Code generated by mockery v3.0.0-alpha.0. DO NOT EDIT.

package mocks

import (
	config "0chain.net/conductor/config"
	mock "github.com/stretchr/testify/mock"
)

// Namer is an autogenerated mock type for the Namer type
type Namer struct {
	mock.Mock
}

// Name provides a mock function with given fields: _a0
func (_m *Namer) Name(_a0 config.NodeID) config.NodeName {
	ret := _m.Called(_a0)

	var r0 config.NodeName
	if rf, ok := ret.Get(0).(func(config.NodeID) config.NodeName); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(config.NodeName)
	}

	return r0
}

type mockConstructorTestingTNewNamer interface {
	mock.TestingT
	Cleanup(func())
}

// NewNamer creates a new instance of Namer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewNamer(t mockConstructorTestingTNewNamer) *Namer {
	mock := &Namer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
