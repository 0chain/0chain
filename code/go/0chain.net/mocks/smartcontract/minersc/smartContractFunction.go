// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	minersc "0chain.net/smartcontract/minersc"
	mock "github.com/stretchr/testify/mock"

	state "0chain.net/chaincore/chain/state"

	transaction "0chain.net/chaincore/transaction"
)

// smartContractFunction is an autogenerated mock type for the smartContractFunction type
type smartContractFunction struct {
	mock.Mock
}

// Execute provides a mock function with given fields: t, inputData, gn, balances
func (_m *smartContractFunction) Execute(t *transaction.Transaction, inputData []byte, gn *minersc.GlobalNode, balances state.StateContextI) (string, error) {
	ret := _m.Called(t, inputData, gn, balances)

	var r0 string
	if rf, ok := ret.Get(0).(func(*transaction.Transaction, []byte, *minersc.GlobalNode, state.StateContextI) string); ok {
		r0 = rf(t, inputData, gn, balances)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*transaction.Transaction, []byte, *minersc.GlobalNode, state.StateContextI) error); ok {
		r1 = rf(t, inputData, gn, balances)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
